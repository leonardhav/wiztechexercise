{
  "version": 4,
  "terraform_version": "1.5.3",
  "serial": 1022,
  "lineage": "e0743e28-966e-e594-d217-8ef7d6216cb0",
  "outputs": {},
  "resources": [
    {
      "module": "module.aws_config",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "config_assume_role_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "607352202",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"config.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "minified_json": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Action\":\"sts:AssumeRole\",\"Principal\":{\"Service\":\"config.amazonaws.com\"}}]}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "config.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.aws_config",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "config_policy_document",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "967434491",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"wafv2:GetLoggingConfiguration\",\n        \"waf:GetWebACL\",\n        \"waf:GetLoggingConfiguration\",\n        \"waf-regional:GetWebACLForResource\",\n        \"waf-regional:GetWebACL\",\n        \"waf-regional:GetLoggingConfiguration\",\n        \"tag:GetResources\",\n        \"support:DescribeCases\",\n        \"storagegateway:ListVolumes\",\n        \"storagegateway:ListGateways\",\n        \"ssm:ListDocuments\",\n        \"ssm:GetDocument\",\n        \"ssm:GetAutomationExecution\",\n        \"ssm:DescribeDocument\",\n        \"ssm:DescribeAutomationExecutions\",\n        \"sqs:ListQueues\",\n        \"sqs:ListQueueTags\",\n        \"sqs:GetQueueAttributes\",\n        \"sns:Publish\",\n        \"sns:ListTopics\",\n        \"sns:ListTagsForResource\",\n        \"sns:ListSubscriptions\",\n        \"sns:GetTopicAttributes\",\n        \"shield:DescribeSubscription\",\n        \"shield:DescribeProtection\",\n        \"shield:DescribeDRTAccess\",\n        \"securityhub:describeHub\",\n        \"secretsmanager:ListSecrets\",\n        \"secretsmanager:ListSecretVersionIds\",\n        \"sagemaker:ListTags\",\n        \"sagemaker:ListNotebookInstances\",\n        \"sagemaker:ListEndpointConfigs\",\n        \"sagemaker:ListCodeRepositories\",\n        \"sagemaker:DescribeNotebookInstance\",\n        \"sagemaker:DescribeEndpointConfig\",\n        \"sagemaker:DescribeCodeRepository\",\n        \"s3:PutObject\",\n        \"s3:ListBucket\",\n        \"s3:ListAllMyBuckets\",\n        \"s3:ListAccessPoints\",\n        \"s3:GetReplicationConfiguration\",\n        \"s3:GetLifecycleConfiguration\",\n        \"s3:GetEncryptionConfiguration\",\n        \"s3:GetBucketWebsite\",\n        \"s3:GetBucketVersioning\",\n        \"s3:GetBucketTagging\",\n        \"s3:GetBucketRequestPayment\",\n        \"s3:GetBucketPublicAccessBlock\",\n        \"s3:GetBucketPolicy\",\n        \"s3:GetBucketObjectLockConfiguration\",\n        \"s3:GetBucketNotification\",\n        \"s3:GetBucketLogging\",\n        \"s3:GetBucketLocation\",\n        \"s3:GetBucketCORS\",\n        \"s3:GetBucketAcl\",\n        \"s3:GetAccountPublicAccessBlock\",\n        \"s3:GetAccessPointPolicyStatus\",\n        \"s3:GetAccessPointPolicy\",\n        \"s3:GetAccessPoint\",\n        \"s3:GetAccelerateConfiguration\",\n        \"route53:ListTagsForResource\",\n        \"route53:ListResourceRecordSets\",\n        \"route53:ListHostedZonesByName\",\n        \"route53:ListHostedZones\",\n        \"route53:GetHostedZone\",\n        \"redshift:DescribeLoggingStatus\",\n        \"redshift:DescribeEventSubscriptions\",\n        \"redshift:DescribeClusters\",\n        \"redshift:DescribeClusterSubnetGroups\",\n        \"redshift:DescribeClusterSnapshots\",\n        \"redshift:DescribeClusterSecurityGroups\",\n        \"redshift:DescribeClusterParameters\",\n        \"redshift:DescribeClusterParameterGroups\",\n        \"rds:ListTagsForResource\",\n        \"rds:DescribeEventSubscriptions\",\n        \"rds:DescribeDBSubnetGroups\",\n        \"rds:DescribeDBSnapshots\",\n        \"rds:DescribeDBSnapshotAttributes\",\n        \"rds:DescribeDBSecurityGroups\",\n        \"rds:DescribeDBInstances\",\n        \"rds:DescribeDBClusters\",\n        \"rds:DescribeDBClusterSnapshots\",\n        \"rds:DescribeDBClusterSnapshotAttributes\",\n        \"organizations:DescribeOrganization\",\n        \"logs:PutLogEvents\",\n        \"logs:DescribeLogGroups\",\n        \"logs:CreateLogStream\",\n        \"lambda:ListFunctions\",\n        \"lambda:ListAliases\",\n        \"lambda:GetPolicy\",\n        \"lambda:GetFunction\",\n        \"lambda:GetAlias\",\n        \"kms:ListResourceTags\",\n        \"kms:ListKeys\",\n        \"kms:GetKeyRotationStatus\",\n        \"kms:GetKeyPolicy\",\n        \"kms:DescribeKey\",\n        \"kinesis:ListTagsForStream\",\n        \"kinesis:ListStreams\",\n        \"kinesis:DescribeStreamSummary\",\n        \"iam:ListVirtualMFADevices\",\n        \"iam:ListUserPolicies\",\n        \"iam:ListRolePolicies\",\n        \"iam:ListPolicyVersions\",\n        \"iam:ListInstanceProfilesForRole\",\n        \"iam:ListGroupsForUser\",\n        \"iam:ListGroupPolicies\",\n        \"iam:ListEntitiesForPolicy\",\n        \"iam:ListAttachedUserPolicies\",\n        \"iam:ListAttachedRolePolicies\",\n        \"iam:ListAttachedGroupPolicies\",\n        \"iam:GetUserPolicy\",\n        \"iam:GetUser\",\n        \"iam:GetRolePolicy\",\n        \"iam:GetRole\",\n        \"iam:GetPolicyVersion\",\n        \"iam:GetPolicy\",\n        \"iam:GetGroupPolicy\",\n        \"iam:GetGroup\",\n        \"iam:GetCredentialReport\",\n        \"iam:GetAccountSummary\",\n        \"iam:GetAccountPasswordPolicy\",\n        \"iam:GetAccountAuthorizationDetails\",\n        \"iam:GenerateCredentialReport\",\n        \"guardduty:ListFindings\",\n        \"guardduty:ListDetectors\",\n        \"guardduty:GetMasterAccount\",\n        \"guardduty:GetFindings\",\n        \"guardduty:GetDetector\",\n        \"es:ListTags\",\n        \"es:ListDomainNames\",\n        \"es:DescribeElasticsearchDomains\",\n        \"es:DescribeElasticsearchDomain\",\n        \"elasticmapreduce:ListInstances\",\n        \"elasticmapreduce:ListClusters\",\n        \"elasticmapreduce:GetBlockPublicAccessConfiguration\",\n        \"elasticmapreduce:DescribeSecurityConfiguration\",\n        \"elasticmapreduce:DescribeCluster\",\n        \"elasticloadbalancing:DescribeTags\",\n        \"elasticloadbalancing:DescribeRules\",\n        \"elasticloadbalancing:DescribeLoadBalancers\",\n        \"elasticloadbalancing:DescribeLoadBalancerPolicies\",\n        \"elasticloadbalancing:DescribeLoadBalancerAttributes\",\n        \"elasticloadbalancing:DescribeListeners\",\n        \"elasticfilesystem:DescribeMountTargets\",\n        \"elasticfilesystem:DescribeMountTargetSecurityGroups\",\n        \"elasticfilesystem:DescribeLifecycleConfiguration\",\n        \"elasticfilesystem:DescribeFileSystems\",\n        \"elasticfilesystem:DescribeFileSystemPolicy\",\n        \"elasticfilesystem:DescribeBackupPolicy\",\n        \"elasticfilesystem:DescribeAccessPoints\",\n        \"elasticache:DescribeReplicationGroups\",\n        \"elasticache:DescribeCacheSubnetGroups\",\n        \"elasticache:DescribeCacheParameterGroups\",\n        \"elasticache:DescribeCacheClusters\",\n        \"eks:ListNodegroups\",\n        \"eks:ListClusters\",\n        \"eks:DescribeNodegroup\",\n        \"eks:DescribeCluster\",\n        \"ecs:ListTaskDefinitions\",\n        \"ecs:ListTagsForResource\",\n        \"ecs:ListServices\",\n        \"ecs:ListClusters\",\n        \"ecs:DescribeTaskSets\",\n        \"ecs:DescribeTaskDefinition\",\n        \"ecs:DescribeServices\",\n        \"ecs:DescribeClusters\",\n        \"ecr:ListTagsForResource\",\n        \"ecr:GetRepositoryPolicy\",\n        \"ecr:GetLifecyclePolicy\",\n        \"ecr:DescribeRepositories\",\n        \"ec2:GetEbsEncryptionByDefault\",\n        \"ec2:Describe*\",\n        \"dynamodb:ListTagsOfResource\",\n        \"dynamodb:ListTables\",\n        \"dynamodb:DescribeTable\",\n        \"dynamodb:DescribeLimits\",\n        \"dynamodb:DescribeContinuousBackups\",\n        \"dms:ListTagsForResource\",\n        \"dms:DescribeReplicationSubnetGroups\",\n        \"dms:DescribeReplicationInstances\",\n        \"dax:DescribeClusters\",\n        \"config:StartConfigRulesEvaluation\",\n        \"config:Select*\",\n        \"config:PutDeliveryChannel\",\n        \"config:PutConfigurationRecorder\",\n        \"config:PutConfigurationAggregator\",\n        \"config:Put*\",\n        \"config:List*\",\n        \"config:GetResourceConfigHistory\",\n        \"config:GetComplianceDetailsByConfigRule\",\n        \"config:Get*\",\n        \"config:DescribeConfigRules\",\n        \"config:Describe*\",\n        \"config:DeliverConfigSnapshot\",\n        \"config:BatchGetResourceConfig\",\n        \"config:BatchGet*\",\n        \"codepipeline:ListPipelines\",\n        \"codepipeline:GetPipelineState\",\n        \"codepipeline:GetPipeline\",\n        \"cloudwatch:DescribeAlarms\",\n        \"cloudtrail:ListTags\",\n        \"cloudtrail:GetTrailStatus\",\n        \"cloudtrail:GetEventSelectors\",\n        \"cloudtrail:DescribeTrails\",\n        \"cloudfront:ListTagsForResource\",\n        \"cloudformation:ListTypes\",\n        \"cloudformation:DescribeType\",\n        \"backup:ListTags\",\n        \"backup:ListRecoveryPointsByBackupVault\",\n        \"backup:ListBackupVaults\",\n        \"backup:ListBackupSelections\",\n        \"backup:ListBackupPlans\",\n        \"backup:GetBackupVaultNotifications\",\n        \"backup:GetBackupVaultAccessPolicy\",\n        \"backup:GetBackupSelection\",\n        \"backup:GetBackupPlan\",\n        \"backup:DescribeRecoveryPoint\",\n        \"backup:DescribeBackupVault\",\n        \"autoscaling:DescribeTags\",\n        \"autoscaling:DescribeScheduledActions\",\n        \"autoscaling:DescribePolicies\",\n        \"autoscaling:DescribeLifecycleHooks\",\n        \"autoscaling:DescribeLaunchConfigurations\",\n        \"autoscaling:DescribeAutoScalingGroups\",\n        \"application-autoscaling:DescribeScalingPolicies\",\n        \"application-autoscaling:DescribeScalableTargets\",\n        \"apigateway:GET\",\n        \"acm:ListTagsForCertificate\",\n        \"acm:ListCertificates\",\n        \"acm:DescribeCertificate\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
            "minified_json": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Action\":[\"wafv2:GetLoggingConfiguration\",\"waf:GetWebACL\",\"waf:GetLoggingConfiguration\",\"waf-regional:GetWebACLForResource\",\"waf-regional:GetWebACL\",\"waf-regional:GetLoggingConfiguration\",\"tag:GetResources\",\"support:DescribeCases\",\"storagegateway:ListVolumes\",\"storagegateway:ListGateways\",\"ssm:ListDocuments\",\"ssm:GetDocument\",\"ssm:GetAutomationExecution\",\"ssm:DescribeDocument\",\"ssm:DescribeAutomationExecutions\",\"sqs:ListQueues\",\"sqs:ListQueueTags\",\"sqs:GetQueueAttributes\",\"sns:Publish\",\"sns:ListTopics\",\"sns:ListTagsForResource\",\"sns:ListSubscriptions\",\"sns:GetTopicAttributes\",\"shield:DescribeSubscription\",\"shield:DescribeProtection\",\"shield:DescribeDRTAccess\",\"securityhub:describeHub\",\"secretsmanager:ListSecrets\",\"secretsmanager:ListSecretVersionIds\",\"sagemaker:ListTags\",\"sagemaker:ListNotebookInstances\",\"sagemaker:ListEndpointConfigs\",\"sagemaker:ListCodeRepositories\",\"sagemaker:DescribeNotebookInstance\",\"sagemaker:DescribeEndpointConfig\",\"sagemaker:DescribeCodeRepository\",\"s3:PutObject\",\"s3:ListBucket\",\"s3:ListAllMyBuckets\",\"s3:ListAccessPoints\",\"s3:GetReplicationConfiguration\",\"s3:GetLifecycleConfiguration\",\"s3:GetEncryptionConfiguration\",\"s3:GetBucketWebsite\",\"s3:GetBucketVersioning\",\"s3:GetBucketTagging\",\"s3:GetBucketRequestPayment\",\"s3:GetBucketPublicAccessBlock\",\"s3:GetBucketPolicy\",\"s3:GetBucketObjectLockConfiguration\",\"s3:GetBucketNotification\",\"s3:GetBucketLogging\",\"s3:GetBucketLocation\",\"s3:GetBucketCORS\",\"s3:GetBucketAcl\",\"s3:GetAccountPublicAccessBlock\",\"s3:GetAccessPointPolicyStatus\",\"s3:GetAccessPointPolicy\",\"s3:GetAccessPoint\",\"s3:GetAccelerateConfiguration\",\"route53:ListTagsForResource\",\"route53:ListResourceRecordSets\",\"route53:ListHostedZonesByName\",\"route53:ListHostedZones\",\"route53:GetHostedZone\",\"redshift:DescribeLoggingStatus\",\"redshift:DescribeEventSubscriptions\",\"redshift:DescribeClusters\",\"redshift:DescribeClusterSubnetGroups\",\"redshift:DescribeClusterSnapshots\",\"redshift:DescribeClusterSecurityGroups\",\"redshift:DescribeClusterParameters\",\"redshift:DescribeClusterParameterGroups\",\"rds:ListTagsForResource\",\"rds:DescribeEventSubscriptions\",\"rds:DescribeDBSubnetGroups\",\"rds:DescribeDBSnapshots\",\"rds:DescribeDBSnapshotAttributes\",\"rds:DescribeDBSecurityGroups\",\"rds:DescribeDBInstances\",\"rds:DescribeDBClusters\",\"rds:DescribeDBClusterSnapshots\",\"rds:DescribeDBClusterSnapshotAttributes\",\"organizations:DescribeOrganization\",\"logs:PutLogEvents\",\"logs:DescribeLogGroups\",\"logs:CreateLogStream\",\"lambda:ListFunctions\",\"lambda:ListAliases\",\"lambda:GetPolicy\",\"lambda:GetFunction\",\"lambda:GetAlias\",\"kms:ListResourceTags\",\"kms:ListKeys\",\"kms:GetKeyRotationStatus\",\"kms:GetKeyPolicy\",\"kms:DescribeKey\",\"kinesis:ListTagsForStream\",\"kinesis:ListStreams\",\"kinesis:DescribeStreamSummary\",\"iam:ListVirtualMFADevices\",\"iam:ListUserPolicies\",\"iam:ListRolePolicies\",\"iam:ListPolicyVersions\",\"iam:ListInstanceProfilesForRole\",\"iam:ListGroupsForUser\",\"iam:ListGroupPolicies\",\"iam:ListEntitiesForPolicy\",\"iam:ListAttachedUserPolicies\",\"iam:ListAttachedRolePolicies\",\"iam:ListAttachedGroupPolicies\",\"iam:GetUserPolicy\",\"iam:GetUser\",\"iam:GetRolePolicy\",\"iam:GetRole\",\"iam:GetPolicyVersion\",\"iam:GetPolicy\",\"iam:GetGroupPolicy\",\"iam:GetGroup\",\"iam:GetCredentialReport\",\"iam:GetAccountSummary\",\"iam:GetAccountPasswordPolicy\",\"iam:GetAccountAuthorizationDetails\",\"iam:GenerateCredentialReport\",\"guardduty:ListFindings\",\"guardduty:ListDetectors\",\"guardduty:GetMasterAccount\",\"guardduty:GetFindings\",\"guardduty:GetDetector\",\"es:ListTags\",\"es:ListDomainNames\",\"es:DescribeElasticsearchDomains\",\"es:DescribeElasticsearchDomain\",\"elasticmapreduce:ListInstances\",\"elasticmapreduce:ListClusters\",\"elasticmapreduce:GetBlockPublicAccessConfiguration\",\"elasticmapreduce:DescribeSecurityConfiguration\",\"elasticmapreduce:DescribeCluster\",\"elasticloadbalancing:DescribeTags\",\"elasticloadbalancing:DescribeRules\",\"elasticloadbalancing:DescribeLoadBalancers\",\"elasticloadbalancing:DescribeLoadBalancerPolicies\",\"elasticloadbalancing:DescribeLoadBalancerAttributes\",\"elasticloadbalancing:DescribeListeners\",\"elasticfilesystem:DescribeMountTargets\",\"elasticfilesystem:DescribeMountTargetSecurityGroups\",\"elasticfilesystem:DescribeLifecycleConfiguration\",\"elasticfilesystem:DescribeFileSystems\",\"elasticfilesystem:DescribeFileSystemPolicy\",\"elasticfilesystem:DescribeBackupPolicy\",\"elasticfilesystem:DescribeAccessPoints\",\"elasticache:DescribeReplicationGroups\",\"elasticache:DescribeCacheSubnetGroups\",\"elasticache:DescribeCacheParameterGroups\",\"elasticache:DescribeCacheClusters\",\"eks:ListNodegroups\",\"eks:ListClusters\",\"eks:DescribeNodegroup\",\"eks:DescribeCluster\",\"ecs:ListTaskDefinitions\",\"ecs:ListTagsForResource\",\"ecs:ListServices\",\"ecs:ListClusters\",\"ecs:DescribeTaskSets\",\"ecs:DescribeTaskDefinition\",\"ecs:DescribeServices\",\"ecs:DescribeClusters\",\"ecr:ListTagsForResource\",\"ecr:GetRepositoryPolicy\",\"ecr:GetLifecyclePolicy\",\"ecr:DescribeRepositories\",\"ec2:GetEbsEncryptionByDefault\",\"ec2:Describe*\",\"dynamodb:ListTagsOfResource\",\"dynamodb:ListTables\",\"dynamodb:DescribeTable\",\"dynamodb:DescribeLimits\",\"dynamodb:DescribeContinuousBackups\",\"dms:ListTagsForResource\",\"dms:DescribeReplicationSubnetGroups\",\"dms:DescribeReplicationInstances\",\"dax:DescribeClusters\",\"config:StartConfigRulesEvaluation\",\"config:Select*\",\"config:PutDeliveryChannel\",\"config:PutConfigurationRecorder\",\"config:PutConfigurationAggregator\",\"config:Put*\",\"config:List*\",\"config:GetResourceConfigHistory\",\"config:GetComplianceDetailsByConfigRule\",\"config:Get*\",\"config:DescribeConfigRules\",\"config:Describe*\",\"config:DeliverConfigSnapshot\",\"config:BatchGetResourceConfig\",\"config:BatchGet*\",\"codepipeline:ListPipelines\",\"codepipeline:GetPipelineState\",\"codepipeline:GetPipeline\",\"cloudwatch:DescribeAlarms\",\"cloudtrail:ListTags\",\"cloudtrail:GetTrailStatus\",\"cloudtrail:GetEventSelectors\",\"cloudtrail:DescribeTrails\",\"cloudfront:ListTagsForResource\",\"cloudformation:ListTypes\",\"cloudformation:DescribeType\",\"backup:ListTags\",\"backup:ListRecoveryPointsByBackupVault\",\"backup:ListBackupVaults\",\"backup:ListBackupSelections\",\"backup:ListBackupPlans\",\"backup:GetBackupVaultNotifications\",\"backup:GetBackupVaultAccessPolicy\",\"backup:GetBackupSelection\",\"backup:GetBackupPlan\",\"backup:DescribeRecoveryPoint\",\"backup:DescribeBackupVault\",\"autoscaling:DescribeTags\",\"autoscaling:DescribeScheduledActions\",\"autoscaling:DescribePolicies\",\"autoscaling:DescribeLifecycleHooks\",\"autoscaling:DescribeLaunchConfigurations\",\"autoscaling:DescribeAutoScalingGroups\",\"application-autoscaling:DescribeScalingPolicies\",\"application-autoscaling:DescribeScalableTargets\",\"apigateway:GET\",\"acm:ListTagsForCertificate\",\"acm:ListCertificates\",\"acm:DescribeCertificate\"],\"Resource\":\"*\"}]}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "acm:DescribeCertificate",
                  "acm:ListCertificates",
                  "acm:ListTagsForCertificate",
                  "apigateway:GET",
                  "application-autoscaling:DescribeScalableTargets",
                  "application-autoscaling:DescribeScalingPolicies",
                  "autoscaling:DescribeAutoScalingGroups",
                  "autoscaling:DescribeLaunchConfigurations",
                  "autoscaling:DescribeLifecycleHooks",
                  "autoscaling:DescribePolicies",
                  "autoscaling:DescribeScheduledActions",
                  "autoscaling:DescribeTags",
                  "backup:DescribeBackupVault",
                  "backup:DescribeRecoveryPoint",
                  "backup:GetBackupPlan",
                  "backup:GetBackupSelection",
                  "backup:GetBackupVaultAccessPolicy",
                  "backup:GetBackupVaultNotifications",
                  "backup:ListBackupPlans",
                  "backup:ListBackupSelections",
                  "backup:ListBackupVaults",
                  "backup:ListRecoveryPointsByBackupVault",
                  "backup:ListTags",
                  "cloudformation:DescribeType",
                  "cloudformation:ListTypes",
                  "cloudfront:ListTagsForResource",
                  "cloudtrail:DescribeTrails",
                  "cloudtrail:GetEventSelectors",
                  "cloudtrail:GetTrailStatus",
                  "cloudtrail:ListTags",
                  "cloudwatch:DescribeAlarms",
                  "codepipeline:GetPipeline",
                  "codepipeline:GetPipelineState",
                  "codepipeline:ListPipelines",
                  "config:BatchGet*",
                  "config:BatchGetResourceConfig",
                  "config:DeliverConfigSnapshot",
                  "config:Describe*",
                  "config:DescribeConfigRules",
                  "config:Get*",
                  "config:GetComplianceDetailsByConfigRule",
                  "config:GetResourceConfigHistory",
                  "config:List*",
                  "config:Put*",
                  "config:PutConfigurationAggregator",
                  "config:PutConfigurationRecorder",
                  "config:PutDeliveryChannel",
                  "config:Select*",
                  "config:StartConfigRulesEvaluation",
                  "dax:DescribeClusters",
                  "dms:DescribeReplicationInstances",
                  "dms:DescribeReplicationSubnetGroups",
                  "dms:ListTagsForResource",
                  "dynamodb:DescribeContinuousBackups",
                  "dynamodb:DescribeLimits",
                  "dynamodb:DescribeTable",
                  "dynamodb:ListTables",
                  "dynamodb:ListTagsOfResource",
                  "ec2:Describe*",
                  "ec2:GetEbsEncryptionByDefault",
                  "ecr:DescribeRepositories",
                  "ecr:GetLifecyclePolicy",
                  "ecr:GetRepositoryPolicy",
                  "ecr:ListTagsForResource",
                  "ecs:DescribeClusters",
                  "ecs:DescribeServices",
                  "ecs:DescribeTaskDefinition",
                  "ecs:DescribeTaskSets",
                  "ecs:ListClusters",
                  "ecs:ListServices",
                  "ecs:ListTagsForResource",
                  "ecs:ListTaskDefinitions",
                  "eks:DescribeCluster",
                  "eks:DescribeNodegroup",
                  "eks:ListClusters",
                  "eks:ListNodegroups",
                  "elasticache:DescribeCacheClusters",
                  "elasticache:DescribeCacheParameterGroups",
                  "elasticache:DescribeCacheSubnetGroups",
                  "elasticache:DescribeReplicationGroups",
                  "elasticfilesystem:DescribeAccessPoints",
                  "elasticfilesystem:DescribeBackupPolicy",
                  "elasticfilesystem:DescribeFileSystemPolicy",
                  "elasticfilesystem:DescribeFileSystems",
                  "elasticfilesystem:DescribeLifecycleConfiguration",
                  "elasticfilesystem:DescribeMountTargetSecurityGroups",
                  "elasticfilesystem:DescribeMountTargets",
                  "elasticloadbalancing:DescribeListeners",
                  "elasticloadbalancing:DescribeLoadBalancerAttributes",
                  "elasticloadbalancing:DescribeLoadBalancerPolicies",
                  "elasticloadbalancing:DescribeLoadBalancers",
                  "elasticloadbalancing:DescribeRules",
                  "elasticloadbalancing:DescribeTags",
                  "elasticmapreduce:DescribeCluster",
                  "elasticmapreduce:DescribeSecurityConfiguration",
                  "elasticmapreduce:GetBlockPublicAccessConfiguration",
                  "elasticmapreduce:ListClusters",
                  "elasticmapreduce:ListInstances",
                  "es:DescribeElasticsearchDomain",
                  "es:DescribeElasticsearchDomains",
                  "es:ListDomainNames",
                  "es:ListTags",
                  "guardduty:GetDetector",
                  "guardduty:GetFindings",
                  "guardduty:GetMasterAccount",
                  "guardduty:ListDetectors",
                  "guardduty:ListFindings",
                  "iam:GenerateCredentialReport",
                  "iam:GetAccountAuthorizationDetails",
                  "iam:GetAccountPasswordPolicy",
                  "iam:GetAccountSummary",
                  "iam:GetCredentialReport",
                  "iam:GetGroup",
                  "iam:GetGroupPolicy",
                  "iam:GetPolicy",
                  "iam:GetPolicyVersion",
                  "iam:GetRole",
                  "iam:GetRolePolicy",
                  "iam:GetUser",
                  "iam:GetUserPolicy",
                  "iam:ListAttachedGroupPolicies",
                  "iam:ListAttachedRolePolicies",
                  "iam:ListAttachedUserPolicies",
                  "iam:ListEntitiesForPolicy",
                  "iam:ListGroupPolicies",
                  "iam:ListGroupsForUser",
                  "iam:ListInstanceProfilesForRole",
                  "iam:ListPolicyVersions",
                  "iam:ListRolePolicies",
                  "iam:ListUserPolicies",
                  "iam:ListVirtualMFADevices",
                  "kinesis:DescribeStreamSummary",
                  "kinesis:ListStreams",
                  "kinesis:ListTagsForStream",
                  "kms:DescribeKey",
                  "kms:GetKeyPolicy",
                  "kms:GetKeyRotationStatus",
                  "kms:ListKeys",
                  "kms:ListResourceTags",
                  "lambda:GetAlias",
                  "lambda:GetFunction",
                  "lambda:GetPolicy",
                  "lambda:ListAliases",
                  "lambda:ListFunctions",
                  "logs:CreateLogStream",
                  "logs:DescribeLogGroups",
                  "logs:PutLogEvents",
                  "organizations:DescribeOrganization",
                  "rds:DescribeDBClusterSnapshotAttributes",
                  "rds:DescribeDBClusterSnapshots",
                  "rds:DescribeDBClusters",
                  "rds:DescribeDBInstances",
                  "rds:DescribeDBSecurityGroups",
                  "rds:DescribeDBSnapshotAttributes",
                  "rds:DescribeDBSnapshots",
                  "rds:DescribeDBSubnetGroups",
                  "rds:DescribeEventSubscriptions",
                  "rds:ListTagsForResource",
                  "redshift:DescribeClusterParameterGroups",
                  "redshift:DescribeClusterParameters",
                  "redshift:DescribeClusterSecurityGroups",
                  "redshift:DescribeClusterSnapshots",
                  "redshift:DescribeClusterSubnetGroups",
                  "redshift:DescribeClusters",
                  "redshift:DescribeEventSubscriptions",
                  "redshift:DescribeLoggingStatus",
                  "route53:GetHostedZone",
                  "route53:ListHostedZones",
                  "route53:ListHostedZonesByName",
                  "route53:ListResourceRecordSets",
                  "route53:ListTagsForResource",
                  "s3:GetAccelerateConfiguration",
                  "s3:GetAccessPoint",
                  "s3:GetAccessPointPolicy",
                  "s3:GetAccessPointPolicyStatus",
                  "s3:GetAccountPublicAccessBlock",
                  "s3:GetBucketAcl",
                  "s3:GetBucketCORS",
                  "s3:GetBucketLocation",
                  "s3:GetBucketLogging",
                  "s3:GetBucketNotification",
                  "s3:GetBucketObjectLockConfiguration",
                  "s3:GetBucketPolicy",
                  "s3:GetBucketPublicAccessBlock",
                  "s3:GetBucketRequestPayment",
                  "s3:GetBucketTagging",
                  "s3:GetBucketVersioning",
                  "s3:GetBucketWebsite",
                  "s3:GetEncryptionConfiguration",
                  "s3:GetLifecycleConfiguration",
                  "s3:GetReplicationConfiguration",
                  "s3:ListAccessPoints",
                  "s3:ListAllMyBuckets",
                  "s3:ListBucket",
                  "s3:PutObject",
                  "sagemaker:DescribeCodeRepository",
                  "sagemaker:DescribeEndpointConfig",
                  "sagemaker:DescribeNotebookInstance",
                  "sagemaker:ListCodeRepositories",
                  "sagemaker:ListEndpointConfigs",
                  "sagemaker:ListNotebookInstances",
                  "sagemaker:ListTags",
                  "secretsmanager:ListSecretVersionIds",
                  "secretsmanager:ListSecrets",
                  "securityhub:describeHub",
                  "shield:DescribeDRTAccess",
                  "shield:DescribeProtection",
                  "shield:DescribeSubscription",
                  "sns:GetTopicAttributes",
                  "sns:ListSubscriptions",
                  "sns:ListTagsForResource",
                  "sns:ListTopics",
                  "sns:Publish",
                  "sqs:GetQueueAttributes",
                  "sqs:ListQueueTags",
                  "sqs:ListQueues",
                  "ssm:DescribeAutomationExecutions",
                  "ssm:DescribeDocument",
                  "ssm:GetAutomationExecution",
                  "ssm:GetDocument",
                  "ssm:ListDocuments",
                  "storagegateway:ListGateways",
                  "storagegateway:ListVolumes",
                  "support:DescribeCases",
                  "tag:GetResources",
                  "waf-regional:GetLoggingConfiguration",
                  "waf-regional:GetWebACL",
                  "waf-regional:GetWebACLForResource",
                  "waf:GetLoggingConfiguration",
                  "waf:GetWebACL",
                  "wafv2:GetLoggingConfiguration"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.aws_config",
      "mode": "data",
      "type": "http",
      "name": "conformance_pack_eks",
      "provider": "provider[\"registry.terraform.io/hashicorp/http\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "body": "##################################################################################\n#\n#   Conformance Pack:\n#     Security Best Practices for EKS\n#                                                                                \n#\n#   See Parameters section for names and descriptions of required parameters.\n#\n##################################################################################\n\nParameters:\n  EksClusterOldestSupportedVersionParamOldestVersionSupported:\n    Default: '1.2'\n    Type: String\n  EksClusterSupportedVersionParamOldestVersionSupported:\n    Default: '1.2'\n    Type: String\nResources:\n  EksClusterOldestSupportedVersion:\n    Properties:\n      ConfigRuleName: eks-cluster-oldest-supported-version\n      InputParameters:\n        oldestVersionSupported:\n          Fn::If:\n          - eksClusterOldestSupportedVersionParamOldestVersionSupported\n          - Ref: EksClusterOldestSupportedVersionParamOldestVersionSupported\n          - Ref: AWS::NoValue\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::EKS::Cluster\n      Source:\n        Owner: AWS\n        SourceIdentifier: EKS_CLUSTER_OLDEST_SUPPORTED_VERSION\n    Type: AWS::Config::ConfigRule\n  EksClusterSupportedVersion:\n    Properties:\n      ConfigRuleName: eks-cluster-supported-version\n      InputParameters:\n        oldestVersionSupported:\n          Fn::If:\n          - eksClusterSupportedVersionParamOldestVersionSupported\n          - Ref: EksClusterSupportedVersionParamOldestVersionSupported\n          - Ref: AWS::NoValue\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::EKS::Cluster\n      Source:\n        Owner: AWS\n        SourceIdentifier: EKS_CLUSTER_SUPPORTED_VERSION\n    Type: AWS::Config::ConfigRule\n  EksEndpointNoPublicAccess:\n    Properties:\n      ConfigRuleName: eks-endpoint-no-public-access\n      Source:\n        Owner: AWS\n        SourceIdentifier: EKS_ENDPOINT_NO_PUBLIC_ACCESS\n    Type: AWS::Config::ConfigRule\n  EksSecretsEncrypted:\n    Properties:\n      ConfigRuleName: eks-secrets-encrypted\n      Source:\n        Owner: AWS\n        SourceIdentifier: EKS_SECRETS_ENCRYPTED\n    Type: AWS::Config::ConfigRule\nConditions:\n  eksClusterOldestSupportedVersionParamOldestVersionSupported:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: EksClusterOldestSupportedVersionParamOldestVersionSupported\n  eksClusterSupportedVersionParamOldestVersionSupported:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: EksClusterSupportedVersionParamOldestVersionSupported\n",
            "ca_cert_pem": null,
            "id": "https://raw.githubusercontent.com/awslabs/aws-config-rules/refs/heads/master/aws-config-conformance-packs/Security-Best-Practices-for-EKS.yaml",
            "insecure": null,
            "method": null,
            "request_body": null,
            "request_headers": null,
            "request_timeout_ms": null,
            "response_body": "##################################################################################\n#\n#   Conformance Pack:\n#     Security Best Practices for EKS\n#                                                                                \n#\n#   See Parameters section for names and descriptions of required parameters.\n#\n##################################################################################\n\nParameters:\n  EksClusterOldestSupportedVersionParamOldestVersionSupported:\n    Default: '1.2'\n    Type: String\n  EksClusterSupportedVersionParamOldestVersionSupported:\n    Default: '1.2'\n    Type: String\nResources:\n  EksClusterOldestSupportedVersion:\n    Properties:\n      ConfigRuleName: eks-cluster-oldest-supported-version\n      InputParameters:\n        oldestVersionSupported:\n          Fn::If:\n          - eksClusterOldestSupportedVersionParamOldestVersionSupported\n          - Ref: EksClusterOldestSupportedVersionParamOldestVersionSupported\n          - Ref: AWS::NoValue\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::EKS::Cluster\n      Source:\n        Owner: AWS\n        SourceIdentifier: EKS_CLUSTER_OLDEST_SUPPORTED_VERSION\n    Type: AWS::Config::ConfigRule\n  EksClusterSupportedVersion:\n    Properties:\n      ConfigRuleName: eks-cluster-supported-version\n      InputParameters:\n        oldestVersionSupported:\n          Fn::If:\n          - eksClusterSupportedVersionParamOldestVersionSupported\n          - Ref: EksClusterSupportedVersionParamOldestVersionSupported\n          - Ref: AWS::NoValue\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::EKS::Cluster\n      Source:\n        Owner: AWS\n        SourceIdentifier: EKS_CLUSTER_SUPPORTED_VERSION\n    Type: AWS::Config::ConfigRule\n  EksEndpointNoPublicAccess:\n    Properties:\n      ConfigRuleName: eks-endpoint-no-public-access\n      Source:\n        Owner: AWS\n        SourceIdentifier: EKS_ENDPOINT_NO_PUBLIC_ACCESS\n    Type: AWS::Config::ConfigRule\n  EksSecretsEncrypted:\n    Properties:\n      ConfigRuleName: eks-secrets-encrypted\n      Source:\n        Owner: AWS\n        SourceIdentifier: EKS_SECRETS_ENCRYPTED\n    Type: AWS::Config::ConfigRule\nConditions:\n  eksClusterOldestSupportedVersionParamOldestVersionSupported:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: EksClusterOldestSupportedVersionParamOldestVersionSupported\n  eksClusterSupportedVersionParamOldestVersionSupported:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: EksClusterSupportedVersionParamOldestVersionSupported\n",
            "response_body_base64": "IyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIwojCiMgICBDb25mb3JtYW5jZSBQYWNrOgojICAgICBTZWN1cml0eSBCZXN0IFByYWN0aWNlcyBmb3IgRUtTCiMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAojCiMgICBTZWUgUGFyYW1ldGVycyBzZWN0aW9uIGZvciBuYW1lcyBhbmQgZGVzY3JpcHRpb25zIG9mIHJlcXVpcmVkIHBhcmFtZXRlcnMuCiMKIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIwoKUGFyYW1ldGVyczoKICBFa3NDbHVzdGVyT2xkZXN0U3VwcG9ydGVkVmVyc2lvblBhcmFtT2xkZXN0VmVyc2lvblN1cHBvcnRlZDoKICAgIERlZmF1bHQ6ICcxLjInCiAgICBUeXBlOiBTdHJpbmcKICBFa3NDbHVzdGVyU3VwcG9ydGVkVmVyc2lvblBhcmFtT2xkZXN0VmVyc2lvblN1cHBvcnRlZDoKICAgIERlZmF1bHQ6ICcxLjInCiAgICBUeXBlOiBTdHJpbmcKUmVzb3VyY2VzOgogIEVrc0NsdXN0ZXJPbGRlc3RTdXBwb3J0ZWRWZXJzaW9uOgogICAgUHJvcGVydGllczoKICAgICAgQ29uZmlnUnVsZU5hbWU6IGVrcy1jbHVzdGVyLW9sZGVzdC1zdXBwb3J0ZWQtdmVyc2lvbgogICAgICBJbnB1dFBhcmFtZXRlcnM6CiAgICAgICAgb2xkZXN0VmVyc2lvblN1cHBvcnRlZDoKICAgICAgICAgIEZuOjpJZjoKICAgICAgICAgIC0gZWtzQ2x1c3Rlck9sZGVzdFN1cHBvcnRlZFZlcnNpb25QYXJhbU9sZGVzdFZlcnNpb25TdXBwb3J0ZWQKICAgICAgICAgIC0gUmVmOiBFa3NDbHVzdGVyT2xkZXN0U3VwcG9ydGVkVmVyc2lvblBhcmFtT2xkZXN0VmVyc2lvblN1cHBvcnRlZAogICAgICAgICAgLSBSZWY6IEFXUzo6Tm9WYWx1ZQogICAgICBTY29wZToKICAgICAgICBDb21wbGlhbmNlUmVzb3VyY2VUeXBlczoKICAgICAgICAtIEFXUzo6RUtTOjpDbHVzdGVyCiAgICAgIFNvdXJjZToKICAgICAgICBPd25lcjogQVdTCiAgICAgICAgU291cmNlSWRlbnRpZmllcjogRUtTX0NMVVNURVJfT0xERVNUX1NVUFBPUlRFRF9WRVJTSU9OCiAgICBUeXBlOiBBV1M6OkNvbmZpZzo6Q29uZmlnUnVsZQogIEVrc0NsdXN0ZXJTdXBwb3J0ZWRWZXJzaW9uOgogICAgUHJvcGVydGllczoKICAgICAgQ29uZmlnUnVsZU5hbWU6IGVrcy1jbHVzdGVyLXN1cHBvcnRlZC12ZXJzaW9uCiAgICAgIElucHV0UGFyYW1ldGVyczoKICAgICAgICBvbGRlc3RWZXJzaW9uU3VwcG9ydGVkOgogICAgICAgICAgRm46OklmOgogICAgICAgICAgLSBla3NDbHVzdGVyU3VwcG9ydGVkVmVyc2lvblBhcmFtT2xkZXN0VmVyc2lvblN1cHBvcnRlZAogICAgICAgICAgLSBSZWY6IEVrc0NsdXN0ZXJTdXBwb3J0ZWRWZXJzaW9uUGFyYW1PbGRlc3RWZXJzaW9uU3VwcG9ydGVkCiAgICAgICAgICAtIFJlZjogQVdTOjpOb1ZhbHVlCiAgICAgIFNjb3BlOgogICAgICAgIENvbXBsaWFuY2VSZXNvdXJjZVR5cGVzOgogICAgICAgIC0gQVdTOjpFS1M6OkNsdXN0ZXIKICAgICAgU291cmNlOgogICAgICAgIE93bmVyOiBBV1MKICAgICAgICBTb3VyY2VJZGVudGlmaWVyOiBFS1NfQ0xVU1RFUl9TVVBQT1JURURfVkVSU0lPTgogICAgVHlwZTogQVdTOjpDb25maWc6OkNvbmZpZ1J1bGUKICBFa3NFbmRwb2ludE5vUHVibGljQWNjZXNzOgogICAgUHJvcGVydGllczoKICAgICAgQ29uZmlnUnVsZU5hbWU6IGVrcy1lbmRwb2ludC1uby1wdWJsaWMtYWNjZXNzCiAgICAgIFNvdXJjZToKICAgICAgICBPd25lcjogQVdTCiAgICAgICAgU291cmNlSWRlbnRpZmllcjogRUtTX0VORFBPSU5UX05PX1BVQkxJQ19BQ0NFU1MKICAgIFR5cGU6IEFXUzo6Q29uZmlnOjpDb25maWdSdWxlCiAgRWtzU2VjcmV0c0VuY3J5cHRlZDoKICAgIFByb3BlcnRpZXM6CiAgICAgIENvbmZpZ1J1bGVOYW1lOiBla3Mtc2VjcmV0cy1lbmNyeXB0ZWQKICAgICAgU291cmNlOgogICAgICAgIE93bmVyOiBBV1MKICAgICAgICBTb3VyY2VJZGVudGlmaWVyOiBFS1NfU0VDUkVUU19FTkNSWVBURUQKICAgIFR5cGU6IEFXUzo6Q29uZmlnOjpDb25maWdSdWxlCkNvbmRpdGlvbnM6CiAgZWtzQ2x1c3Rlck9sZGVzdFN1cHBvcnRlZFZlcnNpb25QYXJhbU9sZGVzdFZlcnNpb25TdXBwb3J0ZWQ6CiAgICBGbjo6Tm90OgogICAgLSBGbjo6RXF1YWxzOgogICAgICAtICcnCiAgICAgIC0gUmVmOiBFa3NDbHVzdGVyT2xkZXN0U3VwcG9ydGVkVmVyc2lvblBhcmFtT2xkZXN0VmVyc2lvblN1cHBvcnRlZAogIGVrc0NsdXN0ZXJTdXBwb3J0ZWRWZXJzaW9uUGFyYW1PbGRlc3RWZXJzaW9uU3VwcG9ydGVkOgogICAgRm46Ok5vdDoKICAgIC0gRm46OkVxdWFsczoKICAgICAgLSAnJwogICAgICAtIFJlZjogRWtzQ2x1c3RlclN1cHBvcnRlZFZlcnNpb25QYXJhbU9sZGVzdFZlcnNpb25TdXBwb3J0ZWQK",
            "response_headers": {
              "Accept-Ranges": "bytes",
              "Access-Control-Allow-Origin": "*",
              "Cache-Control": "max-age=300",
              "Content-Security-Policy": "default-src 'none'; style-src 'unsafe-inline'; sandbox",
              "Content-Type": "text/plain; charset=utf-8",
              "Cross-Origin-Resource-Policy": "cross-origin",
              "Date": "Mon, 18 Nov 2024 08:23:03 GMT",
              "Etag": "W/\"24db59e24e519fa38a5ef00f045bee511fd0d21342ea763700389b3ab4b016f2\"",
              "Expires": "Mon, 18 Nov 2024 08:28:03 GMT",
              "Source-Age": "0",
              "Strict-Transport-Security": "max-age=31536000",
              "Vary": "Authorization,Accept-Encoding,Origin",
              "Via": "1.1 varnish",
              "X-Cache": "MISS",
              "X-Cache-Hits": "0",
              "X-Content-Type-Options": "nosniff",
              "X-Fastly-Request-Id": "8f46a160d653f2ef0815544f0e7d40155116c740",
              "X-Frame-Options": "deny",
              "X-Github-Request-Id": "E432:0E53:2781E8E:295BEBB:673AF967",
              "X-Served-By": "cache-fra-eddf8230119-FRA",
              "X-Timer": "S1731918184.535269,VS0,VE191",
              "X-Xss-Protection": "1; mode=block"
            },
            "retry": null,
            "status_code": 200,
            "url": "https://raw.githubusercontent.com/awslabs/aws-config-rules/refs/heads/master/aws-config-conformance-packs/Security-Best-Practices-for-EKS.yaml"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.aws_config",
      "mode": "data",
      "type": "http",
      "name": "conformance_pack_s3",
      "provider": "provider[\"registry.terraform.io/hashicorp/http\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "body": "################################################################################\n#\n#   Conformance Pack:\n#     Operational Best Practices for Amazon S3.\n#\n################################################################################\n\nParameters:\n  S3AccountLevelPublicAccessBlocksPeriodicParamBlockPublicAcls:\n    Default: 'True'\n    Type: String\n  S3AccountLevelPublicAccessBlocksPeriodicParamBlockPublicPolicy:\n    Default: 'True'\n    Type: String\n  S3AccountLevelPublicAccessBlocksPeriodicParamIgnorePublicAcls:\n    Default: 'True'\n    Type: String\n  S3AccountLevelPublicAccessBlocksPeriodicParamRestrictPublicBuckets:\n    Default: 'True'\n    Type: String\n  S3BucketBlacklistedActionsProhibitedParamBlacklistedActionPattern:\n    Default: s3:DeleteBucketPolicy, s3:PutBucketAcl, s3:PutBucketPolicy, s3:PutEncryptionConfiguration, s3:PutObjectAcl\n    Type: String\nResources:\n  S3AccountLevelPublicAccessBlocksPeriodic:\n    Properties:\n      ConfigRuleName: s3-account-level-public-access-blocks-periodic\n      InputParameters:\n        BlockPublicAcls:\n          Fn::If:\n          - s3AccountLevelPublicAccessBlocksPeriodicParamBlockPublicAcls\n          - Ref: S3AccountLevelPublicAccessBlocksPeriodicParamBlockPublicAcls\n          - Ref: AWS::NoValue\n        BlockPublicPolicy:\n          Fn::If:\n          - s3AccountLevelPublicAccessBlocksPeriodicParamBlockPublicPolicy\n          - Ref: S3AccountLevelPublicAccessBlocksPeriodicParamBlockPublicPolicy\n          - Ref: AWS::NoValue\n        IgnorePublicAcls:\n          Fn::If:\n          - s3AccountLevelPublicAccessBlocksPeriodicParamIgnorePublicAcls\n          - Ref: S3AccountLevelPublicAccessBlocksPeriodicParamIgnorePublicAcls\n          - Ref: AWS::NoValue\n        RestrictPublicBuckets:\n          Fn::If:\n          - s3AccountLevelPublicAccessBlocksPeriodicParamRestrictPublicBuckets\n          - Ref: S3AccountLevelPublicAccessBlocksPeriodicParamRestrictPublicBuckets\n          - Ref: AWS::NoValue\n      Source:\n        Owner: AWS\n        SourceIdentifier: S3_ACCOUNT_LEVEL_PUBLIC_ACCESS_BLOCKS_PERIODIC\n    Type: AWS::Config::ConfigRule\n  S3BucketAclProhibited:\n    Properties:\n      ConfigRuleName: s3-bucket-acl-prohibited\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::S3::Bucket\n      Source:\n        Owner: AWS\n        SourceIdentifier: S3_BUCKET_ACL_PROHIBITED\n    Type: AWS::Config::ConfigRule\n  S3BucketDefaultLockEnabled:\n    Properties:\n      ConfigRuleName: s3-bucket-default-lock-enabled\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::S3::Bucket\n      Source:\n        Owner: AWS\n        SourceIdentifier: S3_BUCKET_DEFAULT_LOCK_ENABLED\n    Type: AWS::Config::ConfigRule\n  S3BucketLevelPublicAccessProhibited:\n    Properties:\n      ConfigRuleName: s3-bucket-level-public-access-prohibited\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::S3::Bucket\n      Source:\n        Owner: AWS\n        SourceIdentifier: S3_BUCKET_LEVEL_PUBLIC_ACCESS_PROHIBITED\n    Type: AWS::Config::ConfigRule\n  S3BucketLoggingEnabled:\n    Properties:\n      ConfigRuleName: s3-bucket-logging-enabled\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::S3::Bucket\n      Source:\n        Owner: AWS\n        SourceIdentifier: S3_BUCKET_LOGGING_ENABLED\n    Type: AWS::Config::ConfigRule\n  S3BucketPublicReadProhibited:\n    Properties:\n      ConfigRuleName: s3-bucket-public-read-prohibited\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::S3::Bucket\n      Source:\n        Owner: AWS\n        SourceIdentifier: S3_BUCKET_PUBLIC_READ_PROHIBITED\n    Type: AWS::Config::ConfigRule\n  S3BucketPublicWriteProhibited:\n    Properties:\n      ConfigRuleName: s3-bucket-public-write-prohibited\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::S3::Bucket\n      Source:\n        Owner: AWS\n        SourceIdentifier: S3_BUCKET_PUBLIC_WRITE_PROHIBITED\n    Type: AWS::Config::ConfigRule\n  S3BucketReplicationEnabled:\n    Properties:\n      ConfigRuleName: s3-bucket-replication-enabled\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::S3::Bucket\n      Source:\n        Owner: AWS\n        SourceIdentifier: S3_BUCKET_REPLICATION_ENABLED\n    Type: AWS::Config::ConfigRule\n  S3BucketBlacklistedActionsProhibited:\n    Properties:\n      ConfigRuleName: s3-bucket-blacklisted-actions-prohibited\n      InputParameters:\n        blacklistedActionPattern:\n          Ref: S3BucketBlacklistedActionsProhibitedParamBlacklistedActionPattern\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::S3::Bucket\n      Source:\n        Owner: AWS\n        SourceIdentifier: S3_BUCKET_BLACKLISTED_ACTIONS_PROHIBITED\n    Type: AWS::Config::ConfigRule\n  S3BucketSslRequestsOnly:\n    Properties:\n      ConfigRuleName: s3-bucket-ssl-requests-only\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::S3::Bucket\n      Source:\n        Owner: AWS\n        SourceIdentifier: S3_BUCKET_SSL_REQUESTS_ONLY\n    Type: AWS::Config::ConfigRule\n  S3BucketVersioningEnabled:\n    Properties:\n      ConfigRuleName: s3-bucket-versioning-enabled\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::S3::Bucket\n      Source:\n        Owner: AWS\n        SourceIdentifier: S3_BUCKET_VERSIONING_ENABLED\n    Type: AWS::Config::ConfigRule\n  S3DefaultEncryptionKms:\n    Properties:\n      ConfigRuleName: s3-default-encryption-kms\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::S3::Bucket\n      Source:\n        Owner: AWS\n        SourceIdentifier: S3_DEFAULT_ENCRYPTION_KMS\n    Type: AWS::Config::ConfigRule\n  S3EventNotificationsEnabled:\n    Properties:\n      ConfigRuleName: s3-event-notifications-enabled\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::S3::Bucket\n      Source:\n        Owner: AWS\n        SourceIdentifier: S3_EVENT_NOTIFICATIONS_ENABLED\n    Type: AWS::Config::ConfigRule\n  S3VersionLifecyclePolicyCheck:\n    Properties:\n      ConfigRuleName: s3-version-lifecycle-policy-check\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::S3::Bucket\n      Source:\n        Owner: AWS\n        SourceIdentifier: S3_VERSION_LIFECYCLE_POLICY_CHECK\n    Type: AWS::Config::ConfigRule\nConditions:\n  s3AccountLevelPublicAccessBlocksPeriodicParamBlockPublicAcls:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: S3AccountLevelPublicAccessBlocksPeriodicParamBlockPublicAcls\n  s3AccountLevelPublicAccessBlocksPeriodicParamBlockPublicPolicy:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: S3AccountLevelPublicAccessBlocksPeriodicParamBlockPublicPolicy\n  s3AccountLevelPublicAccessBlocksPeriodicParamIgnorePublicAcls:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: S3AccountLevelPublicAccessBlocksPeriodicParamIgnorePublicAcls\n  s3AccountLevelPublicAccessBlocksPeriodicParamRestrictPublicBuckets:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: S3AccountLevelPublicAccessBlocksPeriodicParamRestrictPublicBuckets\n",
            "ca_cert_pem": null,
            "id": "https://raw.githubusercontent.com/awslabs/aws-config-rules/refs/heads/master/aws-config-conformance-packs/Operational-Best-Practices-for-Amazon-S3.yaml",
            "insecure": null,
            "method": null,
            "request_body": null,
            "request_headers": null,
            "request_timeout_ms": null,
            "response_body": "################################################################################\n#\n#   Conformance Pack:\n#     Operational Best Practices for Amazon S3.\n#\n################################################################################\n\nParameters:\n  S3AccountLevelPublicAccessBlocksPeriodicParamBlockPublicAcls:\n    Default: 'True'\n    Type: String\n  S3AccountLevelPublicAccessBlocksPeriodicParamBlockPublicPolicy:\n    Default: 'True'\n    Type: String\n  S3AccountLevelPublicAccessBlocksPeriodicParamIgnorePublicAcls:\n    Default: 'True'\n    Type: String\n  S3AccountLevelPublicAccessBlocksPeriodicParamRestrictPublicBuckets:\n    Default: 'True'\n    Type: String\n  S3BucketBlacklistedActionsProhibitedParamBlacklistedActionPattern:\n    Default: s3:DeleteBucketPolicy, s3:PutBucketAcl, s3:PutBucketPolicy, s3:PutEncryptionConfiguration, s3:PutObjectAcl\n    Type: String\nResources:\n  S3AccountLevelPublicAccessBlocksPeriodic:\n    Properties:\n      ConfigRuleName: s3-account-level-public-access-blocks-periodic\n      InputParameters:\n        BlockPublicAcls:\n          Fn::If:\n          - s3AccountLevelPublicAccessBlocksPeriodicParamBlockPublicAcls\n          - Ref: S3AccountLevelPublicAccessBlocksPeriodicParamBlockPublicAcls\n          - Ref: AWS::NoValue\n        BlockPublicPolicy:\n          Fn::If:\n          - s3AccountLevelPublicAccessBlocksPeriodicParamBlockPublicPolicy\n          - Ref: S3AccountLevelPublicAccessBlocksPeriodicParamBlockPublicPolicy\n          - Ref: AWS::NoValue\n        IgnorePublicAcls:\n          Fn::If:\n          - s3AccountLevelPublicAccessBlocksPeriodicParamIgnorePublicAcls\n          - Ref: S3AccountLevelPublicAccessBlocksPeriodicParamIgnorePublicAcls\n          - Ref: AWS::NoValue\n        RestrictPublicBuckets:\n          Fn::If:\n          - s3AccountLevelPublicAccessBlocksPeriodicParamRestrictPublicBuckets\n          - Ref: S3AccountLevelPublicAccessBlocksPeriodicParamRestrictPublicBuckets\n          - Ref: AWS::NoValue\n      Source:\n        Owner: AWS\n        SourceIdentifier: S3_ACCOUNT_LEVEL_PUBLIC_ACCESS_BLOCKS_PERIODIC\n    Type: AWS::Config::ConfigRule\n  S3BucketAclProhibited:\n    Properties:\n      ConfigRuleName: s3-bucket-acl-prohibited\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::S3::Bucket\n      Source:\n        Owner: AWS\n        SourceIdentifier: S3_BUCKET_ACL_PROHIBITED\n    Type: AWS::Config::ConfigRule\n  S3BucketDefaultLockEnabled:\n    Properties:\n      ConfigRuleName: s3-bucket-default-lock-enabled\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::S3::Bucket\n      Source:\n        Owner: AWS\n        SourceIdentifier: S3_BUCKET_DEFAULT_LOCK_ENABLED\n    Type: AWS::Config::ConfigRule\n  S3BucketLevelPublicAccessProhibited:\n    Properties:\n      ConfigRuleName: s3-bucket-level-public-access-prohibited\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::S3::Bucket\n      Source:\n        Owner: AWS\n        SourceIdentifier: S3_BUCKET_LEVEL_PUBLIC_ACCESS_PROHIBITED\n    Type: AWS::Config::ConfigRule\n  S3BucketLoggingEnabled:\n    Properties:\n      ConfigRuleName: s3-bucket-logging-enabled\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::S3::Bucket\n      Source:\n        Owner: AWS\n        SourceIdentifier: S3_BUCKET_LOGGING_ENABLED\n    Type: AWS::Config::ConfigRule\n  S3BucketPublicReadProhibited:\n    Properties:\n      ConfigRuleName: s3-bucket-public-read-prohibited\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::S3::Bucket\n      Source:\n        Owner: AWS\n        SourceIdentifier: S3_BUCKET_PUBLIC_READ_PROHIBITED\n    Type: AWS::Config::ConfigRule\n  S3BucketPublicWriteProhibited:\n    Properties:\n      ConfigRuleName: s3-bucket-public-write-prohibited\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::S3::Bucket\n      Source:\n        Owner: AWS\n        SourceIdentifier: S3_BUCKET_PUBLIC_WRITE_PROHIBITED\n    Type: AWS::Config::ConfigRule\n  S3BucketReplicationEnabled:\n    Properties:\n      ConfigRuleName: s3-bucket-replication-enabled\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::S3::Bucket\n      Source:\n        Owner: AWS\n        SourceIdentifier: S3_BUCKET_REPLICATION_ENABLED\n    Type: AWS::Config::ConfigRule\n  S3BucketBlacklistedActionsProhibited:\n    Properties:\n      ConfigRuleName: s3-bucket-blacklisted-actions-prohibited\n      InputParameters:\n        blacklistedActionPattern:\n          Ref: S3BucketBlacklistedActionsProhibitedParamBlacklistedActionPattern\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::S3::Bucket\n      Source:\n        Owner: AWS\n        SourceIdentifier: S3_BUCKET_BLACKLISTED_ACTIONS_PROHIBITED\n    Type: AWS::Config::ConfigRule\n  S3BucketSslRequestsOnly:\n    Properties:\n      ConfigRuleName: s3-bucket-ssl-requests-only\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::S3::Bucket\n      Source:\n        Owner: AWS\n        SourceIdentifier: S3_BUCKET_SSL_REQUESTS_ONLY\n    Type: AWS::Config::ConfigRule\n  S3BucketVersioningEnabled:\n    Properties:\n      ConfigRuleName: s3-bucket-versioning-enabled\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::S3::Bucket\n      Source:\n        Owner: AWS\n        SourceIdentifier: S3_BUCKET_VERSIONING_ENABLED\n    Type: AWS::Config::ConfigRule\n  S3DefaultEncryptionKms:\n    Properties:\n      ConfigRuleName: s3-default-encryption-kms\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::S3::Bucket\n      Source:\n        Owner: AWS\n        SourceIdentifier: S3_DEFAULT_ENCRYPTION_KMS\n    Type: AWS::Config::ConfigRule\n  S3EventNotificationsEnabled:\n    Properties:\n      ConfigRuleName: s3-event-notifications-enabled\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::S3::Bucket\n      Source:\n        Owner: AWS\n        SourceIdentifier: S3_EVENT_NOTIFICATIONS_ENABLED\n    Type: AWS::Config::ConfigRule\n  S3VersionLifecyclePolicyCheck:\n    Properties:\n      ConfigRuleName: s3-version-lifecycle-policy-check\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::S3::Bucket\n      Source:\n        Owner: AWS\n        SourceIdentifier: S3_VERSION_LIFECYCLE_POLICY_CHECK\n    Type: AWS::Config::ConfigRule\nConditions:\n  s3AccountLevelPublicAccessBlocksPeriodicParamBlockPublicAcls:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: S3AccountLevelPublicAccessBlocksPeriodicParamBlockPublicAcls\n  s3AccountLevelPublicAccessBlocksPeriodicParamBlockPublicPolicy:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: S3AccountLevelPublicAccessBlocksPeriodicParamBlockPublicPolicy\n  s3AccountLevelPublicAccessBlocksPeriodicParamIgnorePublicAcls:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: S3AccountLevelPublicAccessBlocksPeriodicParamIgnorePublicAcls\n  s3AccountLevelPublicAccessBlocksPeriodicParamRestrictPublicBuckets:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: S3AccountLevelPublicAccessBlocksPeriodicParamRestrictPublicBuckets\n",
            "response_body_base64": "",
            "response_headers": {
              "Accept-Ranges": "bytes",
              "Access-Control-Allow-Origin": "*",
              "Cache-Control": "max-age=300",
              "Content-Security-Policy": "default-src 'none'; style-src 'unsafe-inline'; sandbox",
              "Content-Type": "text/plain; charset=utf-8",
              "Cross-Origin-Resource-Policy": "cross-origin",
              "Date": "Mon, 18 Nov 2024 08:23:03 GMT",
              "Etag": "W/\"23448c57d1f5338277221db7f7f420310e6678033af610ae6eeee8499ac070fd\"",
              "Expires": "Mon, 18 Nov 2024 08:28:03 GMT",
              "Source-Age": "0",
              "Strict-Transport-Security": "max-age=31536000",
              "Vary": "Authorization,Accept-Encoding,Origin",
              "Via": "1.1 varnish",
              "X-Cache": "MISS",
              "X-Cache-Hits": "0",
              "X-Content-Type-Options": "nosniff",
              "X-Fastly-Request-Id": "e48c8d9089bb3a181d475e27e8c22152187c0a54",
              "X-Frame-Options": "deny",
              "X-Github-Request-Id": "5C61:144280:325112A:34AF74E:673AF966",
              "X-Served-By": "cache-fra-eddf8230084-FRA",
              "X-Timer": "S1731918184.532572,VS0,VE183",
              "X-Xss-Protection": "1; mode=block"
            },
            "retry": null,
            "status_code": 200,
            "url": "https://raw.githubusercontent.com/awslabs/aws-config-rules/refs/heads/master/aws-config-conformance-packs/Operational-Best-Practices-for-Amazon-S3.yaml"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.aws_config",
      "mode": "data",
      "type": "http",
      "name": "conformance_pack_wasp",
      "provider": "provider[\"registry.terraform.io/hashicorp/http\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "body": "##################################################################################\n#\n#   Conformance Pack:\n#     Operational Best Practices for AWS Well Architected (WA) Security Pillar\n#\n#   This conformance pack helps verify compliance with the AWS WA Security Pillar\n#   (https://docs.aws.amazon.com/wellarchitected/latest/security-pillar/welcome.html)\n#   requirements.\n#\n#   This Conformance Pack has been designed for compatibility with the majority of AWS\n#   regions and to not require setting of any Parameters. Additional managed rules that\n#   require parameters to be set for your environment and/or for your specific region can\n#   be found at https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html\n#\n#   See Parameters section for names and descriptions of required parameters.\n#\n##################################################################################\n\nParameters:\n  AccessKeysRotatedParamMaxAccessKeyAge:\n    Default: '90'\n    Type: String\n  AcmCertificateExpirationCheckParamDaysToExpiration:\n    Default: '90'\n    Type: String\n  CloudwatchAlarmActionCheckParamAlarmActionRequired:\n    Default: 'true'\n    Type: String\n  CloudwatchAlarmActionCheckParamInsufficientDataActionRequired:\n    Default: 'true'\n    Type: String\n  CloudwatchAlarmActionCheckParamOkActionRequired:\n    Default: 'true'\n    Type: String\n  IamCustomerPolicyBlockedKmsActionsParamBlockedActionsPatterns:\n    Default: kms:Decrypt,kms:ReEncryptFrom\n    Type: String\n  IamPasswordPolicyParamMaxPasswordAge:\n    Default: '90'\n    Type: String\n  IamPasswordPolicyParamMinimumPasswordLength:\n    Default: '14'\n    Type: String\n  IamPasswordPolicyParamPasswordReusePrevention:\n    Default: '24'\n    Type: String\n  IamPasswordPolicyParamRequireLowercaseCharacters:\n    Default: 'true'\n    Type: String\n  IamPasswordPolicyParamRequireNumbers:\n    Default: 'true'\n    Type: String\n  IamPasswordPolicyParamRequireSymbols:\n    Default: 'true'\n    Type: String\n  IamPasswordPolicyParamRequireUppercaseCharacters:\n    Default: 'true'\n    Type: String\n  IamUserUnusedCredentialsCheckParamMaxCredentialUsageAge:\n    Default: '90'\n    Type: String\n  RedshiftClusterConfigurationCheckParamClusterDbEncrypted:\n    Default: 'true'\n    Type: String\n  RedshiftClusterConfigurationCheckParamLoggingEnabled:\n    Default: 'true'\n    Type: String\n  RedshiftClusterMaintenancesettingsCheckParamAllowVersionUpgrade:\n    Default: 'true'\n    Type: String\n  RestrictedIncomingTrafficParamBlockedPort1:\n    Default: '20'\n    Type: String\n  RestrictedIncomingTrafficParamBlockedPort2:\n    Default: '21'\n    Type: String\n  RestrictedIncomingTrafficParamBlockedPort3:\n    Default: '3389'\n    Type: String\n  RestrictedIncomingTrafficParamBlockedPort4:\n    Default: '3306'\n    Type: String\n  RestrictedIncomingTrafficParamBlockedPort5:\n    Default: '4333'\n    Type: String\n  S3AccountLevelPublicAccessBlocksPeriodicParamBlockPublicAcls:\n    Default: 'true'\n    Type: String\n  S3AccountLevelPublicAccessBlocksPeriodicParamBlockPublicPolicy:\n    Default: 'true'\n    Type: String\n  S3AccountLevelPublicAccessBlocksPeriodicParamIgnorePublicAcls:\n    Default: 'true'\n    Type: String\n  S3AccountLevelPublicAccessBlocksPeriodicParamRestrictPublicBuckets:\n    Default: 'true'\n    Type: String\n  SecretsmanagerSecretPeriodicRotationParamMaxDaysSinceRotation:\n    Default: '90'\n    Type: String\n  SecretsmanagerSecretUnusedParamUnusedForDays:\n    Default: '90'\n    Type: String\n  VpcSgOpenOnlyToAuthorizedPortsParamAuthorizedTcpPorts:\n    Default: '443'\n    Type: String\nResources:\n  AccessKeysRotated:\n    Properties:\n      ConfigRuleName: access-keys-rotated\n      InputParameters:\n        maxAccessKeyAge:\n          Fn::If:\n          - accessKeysRotatedParamMaxAccessKeyAge\n          - Ref: AccessKeysRotatedParamMaxAccessKeyAge\n          - Ref: AWS::NoValue\n      Source:\n        Owner: AWS\n        SourceIdentifier: ACCESS_KEYS_ROTATED\n    Type: AWS::Config::ConfigRule\n  AccountPartOfOrganizations:\n    Properties:\n      ConfigRuleName: account-part-of-organizations\n      Source:\n        Owner: AWS\n        SourceIdentifier: ACCOUNT_PART_OF_ORGANIZATIONS\n    Type: AWS::Config::ConfigRule\n  AcmCertificateExpirationCheck:\n    Properties:\n      ConfigRuleName: acm-certificate-expiration-check\n      InputParameters:\n        daysToExpiration:\n          Fn::If:\n          - acmCertificateExpirationCheckParamDaysToExpiration\n          - Ref: AcmCertificateExpirationCheckParamDaysToExpiration\n          - Ref: AWS::NoValue\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::ACM::Certificate\n      Source:\n        Owner: AWS\n        SourceIdentifier: ACM_CERTIFICATE_EXPIRATION_CHECK\n    Type: AWS::Config::ConfigRule\n  AlbHttpDropInvalidHeaderEnabled:\n    Properties:\n      ConfigRuleName: alb-http-drop-invalid-header-enabled\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::ElasticLoadBalancingV2::LoadBalancer\n      Source:\n        Owner: AWS\n        SourceIdentifier: ALB_HTTP_DROP_INVALID_HEADER_ENABLED\n    Type: AWS::Config::ConfigRule\n  AlbHttpToHttpsRedirectionCheck:\n    Properties:\n      ConfigRuleName: alb-http-to-https-redirection-check\n      Source:\n        Owner: AWS\n        SourceIdentifier: ALB_HTTP_TO_HTTPS_REDIRECTION_CHECK\n    Type: AWS::Config::ConfigRule\n  AlbWafEnabled:\n    Properties:\n      ConfigRuleName: alb-waf-enabled\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::ElasticLoadBalancingV2::LoadBalancer\n      Source:\n        Owner: AWS\n        SourceIdentifier: ALB_WAF_ENABLED\n    Type: AWS::Config::ConfigRule\n  ApiGwAssociatedWithWaf:\n    Properties:\n      ConfigRuleName: api-gw-associated-with-waf\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::ApiGateway::Stage\n      Source:\n        Owner: AWS\n        SourceIdentifier: API_GW_ASSOCIATED_WITH_WAF\n    Type: AWS::Config::ConfigRule\n  ApiGwCacheEnabledAndEncrypted:\n    Properties:\n      ConfigRuleName: api-gw-cache-enabled-and-encrypted\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::ApiGateway::Stage\n      Source:\n        Owner: AWS\n        SourceIdentifier: API_GW_CACHE_ENABLED_AND_ENCRYPTED\n    Type: AWS::Config::ConfigRule\n  ApiGwExecutionLoggingEnabled:\n    Properties:\n      ConfigRuleName: api-gw-execution-logging-enabled\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::ApiGateway::Stage\n        - AWS::ApiGatewayV2::Stage\n      Source:\n        Owner: AWS\n        SourceIdentifier: API_GW_EXECUTION_LOGGING_ENABLED\n    Type: AWS::Config::ConfigRule\n  ApiGwSslEnabled:\n    Properties:\n      ConfigRuleName: api-gw-ssl-enabled\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::ApiGateway::Stage\n      Source:\n        Owner: AWS\n        SourceIdentifier: API_GW_SSL_ENABLED\n    Type: AWS::Config::ConfigRule\n  AutoscalingLaunchConfigPublicIpDisabled:\n    Properties:\n      ConfigRuleName: autoscaling-launch-config-public-ip-disabled\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::AutoScaling::LaunchConfiguration\n      Source:\n        Owner: AWS\n        SourceIdentifier: AUTOSCALING_LAUNCH_CONFIG_PUBLIC_IP_DISABLED\n    Type: AWS::Config::ConfigRule\n  BackupRecoveryPointEncrypted:\n    Properties:\n      ConfigRuleName: backup-recovery-point-encrypted\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::Backup::RecoveryPoint\n      Source:\n        Owner: AWS\n        SourceIdentifier: BACKUP_RECOVERY_POINT_ENCRYPTED\n    Type: AWS::Config::ConfigRule\n  CloudTrailCloudWatchLogsEnabled:\n    Properties:\n      ConfigRuleName: cloud-trail-cloud-watch-logs-enabled\n      Source:\n        Owner: AWS\n        SourceIdentifier: CLOUD_TRAIL_CLOUD_WATCH_LOGS_ENABLED\n    Type: AWS::Config::ConfigRule\n  CloudTrailEncryptionEnabled:\n    Properties:\n      ConfigRuleName: cloud-trail-encryption-enabled\n      Source:\n        Owner: AWS\n        SourceIdentifier: CLOUD_TRAIL_ENCRYPTION_ENABLED\n    Type: AWS::Config::ConfigRule\n  CloudTrailLogFileValidationEnabled:\n    Properties:\n      ConfigRuleName: cloud-trail-log-file-validation-enabled\n      Source:\n        Owner: AWS\n        SourceIdentifier: CLOUD_TRAIL_LOG_FILE_VALIDATION_ENABLED\n    Type: AWS::Config::ConfigRule\n  CloudtrailS3DataeventsEnabled:\n    Properties:\n      ConfigRuleName: cloudtrail-s3-dataevents-enabled\n      Source:\n        Owner: AWS\n        SourceIdentifier: CLOUDTRAIL_S3_DATAEVENTS_ENABLED\n    Type: AWS::Config::ConfigRule\n  CloudtrailSecurityTrailEnabled:\n    Properties:\n      ConfigRuleName: cloudtrail-security-trail-enabled\n      Source:\n        Owner: AWS\n        SourceIdentifier: CLOUDTRAIL_SECURITY_TRAIL_ENABLED\n    Type: AWS::Config::ConfigRule\n  CloudwatchAlarmActionCheck:\n    Properties:\n      ConfigRuleName: cloudwatch-alarm-action-check\n      InputParameters:\n        alarmActionRequired:\n          Fn::If:\n          - cloudwatchAlarmActionCheckParamAlarmActionRequired\n          - Ref: CloudwatchAlarmActionCheckParamAlarmActionRequired\n          - Ref: AWS::NoValue\n        insufficientDataActionRequired:\n          Fn::If:\n          - cloudwatchAlarmActionCheckParamInsufficientDataActionRequired\n          - Ref: CloudwatchAlarmActionCheckParamInsufficientDataActionRequired\n          - Ref: AWS::NoValue\n        okActionRequired:\n          Fn::If:\n          - cloudwatchAlarmActionCheckParamOkActionRequired\n          - Ref: CloudwatchAlarmActionCheckParamOkActionRequired\n          - Ref: AWS::NoValue\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::CloudWatch::Alarm\n      Source:\n        Owner: AWS\n        SourceIdentifier: CLOUDWATCH_ALARM_ACTION_CHECK\n    Type: AWS::Config::ConfigRule\n  CloudwatchLogGroupEncrypted:\n    Properties:\n      ConfigRuleName: cloudwatch-log-group-encrypted\n      Source:\n        Owner: AWS\n        SourceIdentifier: CLOUDWATCH_LOG_GROUP_ENCRYPTED\n    Type: AWS::Config::ConfigRule\n  CodebuildProjectArtifactEncryption:\n    Properties:\n      ConfigRuleName: codebuild-project-artifact-encryption\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::CodeBuild::Project\n      Source:\n        Owner: AWS\n        SourceIdentifier: CODEBUILD_PROJECT_ARTIFACT_ENCRYPTION\n    Type: AWS::Config::ConfigRule\n  CodebuildProjectEnvvarAwscredCheck:\n    Properties:\n      ConfigRuleName: codebuild-project-envvar-awscred-check\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::CodeBuild::Project\n      Source:\n        Owner: AWS\n        SourceIdentifier: CODEBUILD_PROJECT_ENVVAR_AWSCRED_CHECK\n    Type: AWS::Config::ConfigRule\n  CodebuildProjectS3LogsEncrypted:\n    Properties:\n      ConfigRuleName: codebuild-project-s3-logs-encrypted\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::CodeBuild::Project\n      Source:\n        Owner: AWS\n        SourceIdentifier: CODEBUILD_PROJECT_S3_LOGS_ENCRYPTED\n    Type: AWS::Config::ConfigRule\n  CwLoggroupRetentionPeriodCheck:\n    Properties:\n      ConfigRuleName: cw-loggroup-retention-period-check\n      Source:\n        Owner: AWS\n        SourceIdentifier: CW_LOGGROUP_RETENTION_PERIOD_CHECK\n    Type: AWS::Config::ConfigRule\n  DmsReplicationNotPublic:\n    Properties:\n      ConfigRuleName: dms-replication-not-public\n      Scope:\n        ComplianceResourceTypes: []\n      Source:\n        Owner: AWS\n        SourceIdentifier: DMS_REPLICATION_NOT_PUBLIC\n    Type: AWS::Config::ConfigRule\n  DynamodbTableEncryptedKms:\n    Properties:\n      ConfigRuleName: dynamodb-table-encrypted-kms\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::DynamoDB::Table\n      Source:\n        Owner: AWS\n        SourceIdentifier: DYNAMODB_TABLE_ENCRYPTED_KMS\n    Type: AWS::Config::ConfigRule\n  EbsSnapshotPublicRestorableCheck:\n    Properties:\n      ConfigRuleName: ebs-snapshot-public-restorable-check\n      Source:\n        Owner: AWS\n        SourceIdentifier: EBS_SNAPSHOT_PUBLIC_RESTORABLE_CHECK\n    Type: AWS::Config::ConfigRule\n  Ec2EbsEncryptionByDefault:\n    Properties:\n      ConfigRuleName: ec2-ebs-encryption-by-default\n      Source:\n        Owner: AWS\n        SourceIdentifier: EC2_EBS_ENCRYPTION_BY_DEFAULT\n    Type: AWS::Config::ConfigRule\n  Ec2Imdsv2Check:\n    Properties:\n      ConfigRuleName: ec2-imdsv2-check\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::EC2::Instance\n      Source:\n        Owner: AWS\n        SourceIdentifier: EC2_IMDSV2_CHECK\n    Type: AWS::Config::ConfigRule\n  Ec2InstanceManagedBySsm:\n    Properties:\n      ConfigRuleName: ec2-instance-managed-by-systems-manager\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::EC2::Instance\n        - AWS::SSM::ManagedInstanceInventory\n      Source:\n        Owner: AWS\n        SourceIdentifier: EC2_INSTANCE_MANAGED_BY_SSM\n    Type: AWS::Config::ConfigRule\n  Ec2InstanceMultipleEniCheck:\n    Properties:\n      ConfigRuleName: ec2-instance-multiple-eni-check\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::EC2::Instance\n      Source:\n        Owner: AWS\n        SourceIdentifier: EC2_INSTANCE_MULTIPLE_ENI_CHECK\n    Type: AWS::Config::ConfigRule\n  Ec2InstanceNoPublicIp:\n    Properties:\n      ConfigRuleName: ec2-instance-no-public-ip\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::EC2::Instance\n      Source:\n        Owner: AWS\n        SourceIdentifier: EC2_INSTANCE_NO_PUBLIC_IP\n    Type: AWS::Config::ConfigRule\n  Ec2InstanceProfileAttached:\n    Properties:\n      ConfigRuleName: ec2-instance-profile-attached\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::EC2::Instance\n      Source:\n        Owner: AWS\n        SourceIdentifier: EC2_INSTANCE_PROFILE_ATTACHED\n    Type: AWS::Config::ConfigRule\n  Ec2ManagedinstanceAssociationComplianceStatusCheck:\n    Properties:\n      ConfigRuleName: ec2-managedinstance-association-compliance-status-check\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::SSM::AssociationCompliance\n      Source:\n        Owner: AWS\n        SourceIdentifier: EC2_MANAGEDINSTANCE_ASSOCIATION_COMPLIANCE_STATUS_CHECK\n    Type: AWS::Config::ConfigRule\n  Ec2ManagedinstancePatchComplianceStatusCheck:\n    Properties:\n      ConfigRuleName: ec2-managedinstance-patch-compliance-status-check\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::SSM::PatchCompliance\n      Source:\n        Owner: AWS\n        SourceIdentifier: EC2_MANAGEDINSTANCE_PATCH_COMPLIANCE_STATUS_CHECK\n    Type: AWS::Config::ConfigRule\n  Ec2SecurityGroupAttachedToEniPeriodic:\n    Properties:\n      ConfigRuleName: ec2-security-group-attached-to-eni-periodic\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::EC2::SecurityGroup\n      Source:\n        Owner: AWS\n        SourceIdentifier: EC2_SECURITY_GROUP_ATTACHED_TO_ENI_PERIODIC\n    Type: AWS::Config::ConfigRule\n  Ec2StoppedInstance:\n    Properties:\n      ConfigRuleName: ec2-stopped-instance\n      Source:\n        Owner: AWS\n        SourceIdentifier: EC2_STOPPED_INSTANCE\n    Type: AWS::Config::ConfigRule\n  Ec2VolumeInuseCheck:\n    Properties:\n      ConfigRuleName: ec2-volume-inuse-check\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::EC2::Volume\n      Source:\n        Owner: AWS\n        SourceIdentifier: EC2_VOLUME_INUSE_CHECK\n    Type: AWS::Config::ConfigRule\n  EcrPrivateImageScanningEnabled:\n    Properties:\n      ConfigRuleName: ecr-private-image-scanning-enabled\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::ECR::Repository\n      Source:\n        Owner: AWS\n        SourceIdentifier: ECR_PRIVATE_IMAGE_SCANNING_ENABLED\n    Type: AWS::Config::ConfigRule\n  EcsContainerInsightsEnabled:\n    Properties:\n      ConfigRuleName: ecs-container-insights-enabled\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::ECS::Cluster\n      Source:\n        Owner: AWS\n        SourceIdentifier: ECS_CONTAINER_INSIGHTS_ENABLED\n    Type: AWS::Config::ConfigRule\n  EcsContainersNonprivileged:\n    Properties:\n      ConfigRuleName: ecs-containers-nonprivileged\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::ECS::TaskDefinition\n      Source:\n        Owner: AWS\n        SourceIdentifier: ECS_CONTAINERS_NONPRIVILEGED\n    Type: AWS::Config::ConfigRule\n  EcsContainersReadonlyAccess:\n    Properties:\n      ConfigRuleName: ecs-containers-readonly-access\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::ECS::TaskDefinition\n      Source:\n        Owner: AWS\n        SourceIdentifier: ECS_CONTAINERS_READONLY_ACCESS\n    Type: AWS::Config::ConfigRule\n  EcsFargateLatestPlatformVersion:\n    Properties:\n      ConfigRuleName: ecs-fargate-latest-platform-version\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::ECS::Service\n      Source:\n        Owner: AWS\n        SourceIdentifier: ECS_FARGATE_LATEST_PLATFORM_VERSION\n    Type: AWS::Config::ConfigRule\n  EcsTaskDefinitionNonrootUser:\n    Properties:\n      ConfigRuleName: ecs-task-definition-nonroot-user\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::ECS::TaskDefinition\n      Source:\n        Owner: AWS\n        SourceIdentifier: ECS_TASK_DEFINITION_NONROOT_USER\n    Type: AWS::Config::ConfigRule\n  EcsTaskDefinitionUserForHostModeCheck:\n    Properties:\n      ConfigRuleName: ecs-task-definition-user-for-host-mode-check\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::ECS::TaskDefinition\n      Source:\n        Owner: AWS\n        SourceIdentifier: ECS_TASK_DEFINITION_USER_FOR_HOST_MODE_CHECK\n    Type: AWS::Config::ConfigRule\n  EfsAccessPointEnforceUserIdentity:\n    Properties:\n      ConfigRuleName: efs-access-point-enforce-user-identity\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::EFS::AccessPoint\n      Source:\n        Owner: AWS\n        SourceIdentifier: EFS_ACCESS_POINT_ENFORCE_USER_IDENTITY\n    Type: AWS::Config::ConfigRule\n  EfsEncryptedCheck:\n    Properties:\n      ConfigRuleName: efs-encrypted-check\n      Source:\n        Owner: AWS\n        SourceIdentifier: EFS_ENCRYPTED_CHECK\n    Type: AWS::Config::ConfigRule\n  ElasticBeanstalkManagedUpdatesEnabled:\n    Properties:\n      ConfigRuleName: elastic-beanstalk-managed-updates-enabled\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::ElasticBeanstalk::Environment\n      Source:\n        Owner: AWS\n        SourceIdentifier: ELASTIC_BEANSTALK_MANAGED_UPDATES_ENABLED\n    Type: AWS::Config::ConfigRule\n  ElasticsearchEncryptedAtRest:\n    Properties:\n      ConfigRuleName: elasticsearch-encrypted-at-rest\n      Source:\n        Owner: AWS\n        SourceIdentifier: ELASTICSEARCH_ENCRYPTED_AT_REST\n    Type: AWS::Config::ConfigRule\n  ElasticsearchInVpcOnly:\n    Properties:\n      ConfigRuleName: elasticsearch-in-vpc-only\n      Source:\n        Owner: AWS\n        SourceIdentifier: ELASTICSEARCH_IN_VPC_ONLY\n    Type: AWS::Config::ConfigRule\n  ElasticsearchLogsToCloudwatch:\n    Properties:\n      ConfigRuleName: elasticsearch-logs-to-cloudwatch\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::Elasticsearch::Domain\n      Source:\n        Owner: AWS\n        SourceIdentifier: ELASTICSEARCH_LOGS_TO_CLOUDWATCH\n    Type: AWS::Config::ConfigRule\n  ElasticsearchNodeToNodeEncryptionCheck:\n    Properties:\n      ConfigRuleName: elasticsearch-node-to-node-encryption-check\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::Elasticsearch::Domain\n      Source:\n        Owner: AWS\n        SourceIdentifier: ELASTICSEARCH_NODE_TO_NODE_ENCRYPTION_CHECK\n    Type: AWS::Config::ConfigRule\n  ElbAcmCertificateRequired:\n    Properties:\n      ConfigRuleName: elb-acm-certificate-required\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::ElasticLoadBalancing::LoadBalancer\n      Source:\n        Owner: AWS\n        SourceIdentifier: ELB_ACM_CERTIFICATE_REQUIRED\n    Type: AWS::Config::ConfigRule\n  ElbLoggingEnabled:\n    Properties:\n      ConfigRuleName: elb-logging-enabled\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::ElasticLoadBalancing::LoadBalancer\n        - AWS::ElasticLoadBalancingV2::LoadBalancer\n      Source:\n        Owner: AWS\n        SourceIdentifier: ELB_LOGGING_ENABLED\n    Type: AWS::Config::ConfigRule\n  ElbTlsHttpsListenersOnly:\n    Properties:\n      ConfigRuleName: elb-tls-https-listeners-only\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::ElasticLoadBalancing::LoadBalancer\n      Source:\n        Owner: AWS\n        SourceIdentifier: ELB_TLS_HTTPS_LISTENERS_ONLY\n    Type: AWS::Config::ConfigRule\n  Elbv2AcmCertificateRequired:\n    Properties:\n      ConfigRuleName: elbv2-acm-certificate-required\n      Source:\n        Owner: AWS\n        SourceIdentifier: ELBV2_ACM_CERTIFICATE_REQUIRED\n    Type: AWS::Config::ConfigRule\n  EmrKerberosEnabled:\n    Properties:\n      ConfigRuleName: emr-kerberos-enabled\n      Source:\n        Owner: AWS\n        SourceIdentifier: EMR_KERBEROS_ENABLED\n    Type: AWS::Config::ConfigRule\n  EmrMasterNoPublicIp:\n    Properties:\n      ConfigRuleName: emr-master-no-public-ip\n      Scope:\n        ComplianceResourceTypes: []\n      Source:\n        Owner: AWS\n        SourceIdentifier: EMR_MASTER_NO_PUBLIC_IP\n    Type: AWS::Config::ConfigRule\n  EncryptedVolumes:\n    Properties:\n      ConfigRuleName: encrypted-volumes\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::EC2::Volume\n      Source:\n        Owner: AWS\n        SourceIdentifier: ENCRYPTED_VOLUMES\n    Type: AWS::Config::ConfigRule\n  GuarddutyEnabledCentralized:\n    Properties:\n      ConfigRuleName: guardduty-enabled-centralized\n      Source:\n        Owner: AWS\n        SourceIdentifier: GUARDDUTY_ENABLED_CENTRALIZED\n    Type: AWS::Config::ConfigRule\n  IamCustomerPolicyBlockedKmsActions:\n    Properties:\n      ConfigRuleName: iam-customer-policy-blocked-kms-actions\n      InputParameters:\n        blockedActionsPatterns:\n          Fn::If:\n          - iamCustomerPolicyBlockedKmsActionsParamBlockedActionsPatterns\n          - Ref: IamCustomerPolicyBlockedKmsActionsParamBlockedActionsPatterns\n          - Ref: AWS::NoValue\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::IAM::Policy\n      Source:\n        Owner: AWS\n        SourceIdentifier: IAM_CUSTOMER_POLICY_BLOCKED_KMS_ACTIONS\n    Type: AWS::Config::ConfigRule\n  IamGroupHasUsersCheck:\n    Properties:\n      ConfigRuleName: iam-group-has-users-check\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::IAM::Group\n      Source:\n        Owner: AWS\n        SourceIdentifier: IAM_GROUP_HAS_USERS_CHECK\n    Type: AWS::Config::ConfigRule\n  IamNoInlinePolicyCheck:\n    Properties:\n      ConfigRuleName: iam-no-inline-policy-check\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::IAM::User\n        - AWS::IAM::Role\n        - AWS::IAM::Group\n      Source:\n        Owner: AWS\n        SourceIdentifier: IAM_NO_INLINE_POLICY_CHECK\n    Type: AWS::Config::ConfigRule\n  IamPasswordPolicy:\n    Properties:\n      ConfigRuleName: iam-password-policy\n      InputParameters:\n        MaxPasswordAge:\n          Fn::If:\n          - iamPasswordPolicyParamMaxPasswordAge\n          - Ref: IamPasswordPolicyParamMaxPasswordAge\n          - Ref: AWS::NoValue\n        MinimumPasswordLength:\n          Fn::If:\n          - iamPasswordPolicyParamMinimumPasswordLength\n          - Ref: IamPasswordPolicyParamMinimumPasswordLength\n          - Ref: AWS::NoValue\n        PasswordReusePrevention:\n          Fn::If:\n          - iamPasswordPolicyParamPasswordReusePrevention\n          - Ref: IamPasswordPolicyParamPasswordReusePrevention\n          - Ref: AWS::NoValue\n        RequireLowercaseCharacters:\n          Fn::If:\n          - iamPasswordPolicyParamRequireLowercaseCharacters\n          - Ref: IamPasswordPolicyParamRequireLowercaseCharacters\n          - Ref: AWS::NoValue\n        RequireNumbers:\n          Fn::If:\n          - iamPasswordPolicyParamRequireNumbers\n          - Ref: IamPasswordPolicyParamRequireNumbers\n          - Ref: AWS::NoValue\n        RequireSymbols:\n          Fn::If:\n          - iamPasswordPolicyParamRequireSymbols\n          - Ref: IamPasswordPolicyParamRequireSymbols\n          - Ref: AWS::NoValue\n        RequireUppercaseCharacters:\n          Fn::If:\n          - iamPasswordPolicyParamRequireUppercaseCharacters\n          - Ref: IamPasswordPolicyParamRequireUppercaseCharacters\n          - Ref: AWS::NoValue\n      Source:\n        Owner: AWS\n        SourceIdentifier: IAM_PASSWORD_POLICY\n    Type: AWS::Config::ConfigRule\n  IamPolicyNoStatementsWithAdminAccess:\n    Properties:\n      ConfigRuleName: iam-policy-no-statements-with-admin-access\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::IAM::Policy\n      Source:\n        Owner: AWS\n        SourceIdentifier: IAM_POLICY_NO_STATEMENTS_WITH_ADMIN_ACCESS\n    Type: AWS::Config::ConfigRule\n  IamPolicyNoStatementsWithFullAccess:\n    Properties:\n      ConfigRuleName: iam-policy-no-statements-with-full-access\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::IAM::Policy\n      Source:\n        Owner: AWS\n        SourceIdentifier: IAM_POLICY_NO_STATEMENTS_WITH_FULL_ACCESS\n    Type: AWS::Config::ConfigRule\n  IamRootAccessKeyCheck:\n    Properties:\n      ConfigRuleName: iam-root-access-key-check\n      Source:\n        Owner: AWS\n        SourceIdentifier: IAM_ROOT_ACCESS_KEY_CHECK\n    Type: AWS::Config::ConfigRule\n  IamUserGroupMembershipCheck:\n    Properties:\n      ConfigRuleName: iam-user-group-membership-check\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::IAM::User\n      Source:\n        Owner: AWS\n        SourceIdentifier: IAM_USER_GROUP_MEMBERSHIP_CHECK\n    Type: AWS::Config::ConfigRule\n  IamUserMfaEnabled:\n    Properties:\n      ConfigRuleName: iam-user-mfa-enabled\n      Source:\n        Owner: AWS\n        SourceIdentifier: IAM_USER_MFA_ENABLED\n    Type: AWS::Config::ConfigRule\n  IamUserUnusedCredentialsCheck:\n    Properties:\n      ConfigRuleName: iam-user-unused-credentials-check\n      InputParameters:\n        maxCredentialUsageAge:\n          Fn::If:\n          - iamUserUnusedCredentialsCheckParamMaxCredentialUsageAge\n          - Ref: IamUserUnusedCredentialsCheckParamMaxCredentialUsageAge\n          - Ref: AWS::NoValue\n      Source:\n        Owner: AWS\n        SourceIdentifier: IAM_USER_UNUSED_CREDENTIALS_CHECK\n    Type: AWS::Config::ConfigRule\n  IncomingSshDisabled:\n    Properties:\n      ConfigRuleName: restricted-ssh\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::EC2::SecurityGroup\n      Source:\n        Owner: AWS\n        SourceIdentifier: INCOMING_SSH_DISABLED\n    Type: AWS::Config::ConfigRule\n  InstancesInVpc:\n    Properties:\n      ConfigRuleName: ec2-instances-in-vpc\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::EC2::Instance\n      Source:\n        Owner: AWS\n        SourceIdentifier: INSTANCES_IN_VPC\n    Type: AWS::Config::ConfigRule\n  KmsCmkNotScheduledForDeletion:\n    Properties:\n      ConfigRuleName: kms-cmk-not-scheduled-for-deletion\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::KMS::Key\n      Source:\n        Owner: AWS\n        SourceIdentifier: KMS_CMK_NOT_SCHEDULED_FOR_DELETION\n    Type: AWS::Config::ConfigRule\n  LambdaFunctionPublicAccessProhibited:\n    Properties:\n      ConfigRuleName: lambda-function-public-access-prohibited\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::Lambda::Function\n      Source:\n        Owner: AWS\n        SourceIdentifier: LAMBDA_FUNCTION_PUBLIC_ACCESS_PROHIBITED\n    Type: AWS::Config::ConfigRule\n  LambdaInsideVpc:\n    Properties:\n      ConfigRuleName: lambda-inside-vpc\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::Lambda::Function\n      Source:\n        Owner: AWS\n        SourceIdentifier: LAMBDA_INSIDE_VPC\n    Type: AWS::Config::ConfigRule\n  MfaEnabledForIamConsoleAccess:\n    Properties:\n      ConfigRuleName: mfa-enabled-for-iam-console-access\n      Source:\n        Owner: AWS\n        SourceIdentifier: MFA_ENABLED_FOR_IAM_CONSOLE_ACCESS\n    Type: AWS::Config::ConfigRule\n  MultiRegionCloudTrailEnabled:\n    Properties:\n      ConfigRuleName: multi-region-cloudtrail-enabled\n      Source:\n        Owner: AWS\n        SourceIdentifier: MULTI_REGION_CLOUD_TRAIL_ENABLED\n    Type: AWS::Config::ConfigRule\n  NoUnrestrictedRouteToIgw:\n    Properties:\n      ConfigRuleName: no-unrestricted-route-to-igw\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::EC2::RouteTable\n      Source:\n        Owner: AWS\n        SourceIdentifier: NO_UNRESTRICTED_ROUTE_TO_IGW\n    Type: AWS::Config::ConfigRule\n  OpensearchAuditLoggingEnabled:\n    Properties:\n      ConfigRuleName: opensearch-audit-logging-enabled\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::OpenSearch::Domain\n      Source:\n        Owner: AWS\n        SourceIdentifier: OPENSEARCH_AUDIT_LOGGING_ENABLED\n    Type: AWS::Config::ConfigRule\n  OpensearchEncryptedAtRest:\n    Properties:\n      ConfigRuleName: opensearch-encrypted-at-rest\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::OpenSearch::Domain\n      Source:\n        Owner: AWS\n        SourceIdentifier: OPENSEARCH_ENCRYPTED_AT_REST\n    Type: AWS::Config::ConfigRule\n  OpensearchHttpsRequired:\n    Properties:\n      ConfigRuleName: opensearch-https-required\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::OpenSearch::Domain\n      Source:\n        Owner: AWS\n        SourceIdentifier: OPENSEARCH_HTTPS_REQUIRED\n    Type: AWS::Config::ConfigRule\n  OpensearchInVpcOnly:\n    Properties:\n      ConfigRuleName: opensearch-in-vpc-only\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::OpenSearch::Domain\n      Source:\n        Owner: AWS\n        SourceIdentifier: OPENSEARCH_IN_VPC_ONLY\n    Type: AWS::Config::ConfigRule\n  OpensearchLogsToCloudwatch:\n    Properties:\n      ConfigRuleName: opensearch-logs-to-cloudwatch\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::OpenSearch::Domain\n      Source:\n        Owner: AWS\n        SourceIdentifier: OPENSEARCH_LOGS_TO_CLOUDWATCH\n    Type: AWS::Config::ConfigRule\n  OpensearchNodeToNodeEncryptionCheck:\n    Properties:\n      ConfigRuleName: opensearch-node-to-node-encryption-check\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::OpenSearch::Domain\n      Source:\n        Owner: AWS\n        SourceIdentifier: OPENSEARCH_NODE_TO_NODE_ENCRYPTION_CHECK\n    Type: AWS::Config::ConfigRule\n  RdsAutomaticMinorVersionUpgradeEnabled:\n    Properties:\n      ConfigRuleName: rds-automatic-minor-version-upgrade-enabled\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::RDS::DBInstance\n      Source:\n        Owner: AWS\n        SourceIdentifier: RDS_AUTOMATIC_MINOR_VERSION_UPGRADE_ENABLED\n    Type: AWS::Config::ConfigRule\n  RdsInstancePublicAccessCheck:\n    Properties:\n      ConfigRuleName: rds-instance-public-access-check\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::RDS::DBInstance\n      Source:\n        Owner: AWS\n        SourceIdentifier: RDS_INSTANCE_PUBLIC_ACCESS_CHECK\n    Type: AWS::Config::ConfigRule\n  RdsLoggingEnabled:\n    Properties:\n      ConfigRuleName: rds-logging-enabled\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::RDS::DBInstance\n      Source:\n        Owner: AWS\n        SourceIdentifier: RDS_LOGGING_ENABLED\n    Type: AWS::Config::ConfigRule\n  RdsSnapshotEncrypted:\n    Properties:\n      ConfigRuleName: rds-snapshot-encrypted\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::RDS::DBSnapshot\n        - AWS::RDS::DBClusterSnapshot\n      Source:\n        Owner: AWS\n        SourceIdentifier: RDS_SNAPSHOT_ENCRYPTED\n    Type: AWS::Config::ConfigRule\n  RdsSnapshotsPublicProhibited:\n    Properties:\n      ConfigRuleName: rds-snapshots-public-prohibited\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::RDS::DBSnapshot\n        - AWS::RDS::DBClusterSnapshot\n      Source:\n        Owner: AWS\n        SourceIdentifier: RDS_SNAPSHOTS_PUBLIC_PROHIBITED\n    Type: AWS::Config::ConfigRule\n  RdsStorageEncrypted:\n    Properties:\n      ConfigRuleName: rds-storage-encrypted\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::RDS::DBInstance\n      Source:\n        Owner: AWS\n        SourceIdentifier: RDS_STORAGE_ENCRYPTED\n    Type: AWS::Config::ConfigRule\n  RedshiftClusterConfigurationCheck:\n    Properties:\n      ConfigRuleName: redshift-cluster-configuration-check\n      InputParameters:\n        clusterDbEncrypted:\n          Fn::If:\n          - redshiftClusterConfigurationCheckParamClusterDbEncrypted\n          - Ref: RedshiftClusterConfigurationCheckParamClusterDbEncrypted\n          - Ref: AWS::NoValue\n        loggingEnabled:\n          Fn::If:\n          - redshiftClusterConfigurationCheckParamLoggingEnabled\n          - Ref: RedshiftClusterConfigurationCheckParamLoggingEnabled\n          - Ref: AWS::NoValue\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::Redshift::Cluster\n      Source:\n        Owner: AWS\n        SourceIdentifier: REDSHIFT_CLUSTER_CONFIGURATION_CHECK\n    Type: AWS::Config::ConfigRule\n  RedshiftClusterKmsEnabled:\n    Properties:\n      ConfigRuleName: redshift-cluster-kms-enabled\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::Redshift::Cluster\n      Source:\n        Owner: AWS\n        SourceIdentifier: REDSHIFT_CLUSTER_KMS_ENABLED\n    Type: AWS::Config::ConfigRule\n  RedshiftClusterMaintenancesettingsCheck:\n    Properties:\n      ConfigRuleName: redshift-cluster-maintenancesettings-check\n      InputParameters:\n        allowVersionUpgrade:\n          Fn::If:\n          - redshiftClusterMaintenancesettingsCheckParamAllowVersionUpgrade\n          - Ref: RedshiftClusterMaintenancesettingsCheckParamAllowVersionUpgrade\n          - Ref: AWS::NoValue\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::Redshift::Cluster\n      Source:\n        Owner: AWS\n        SourceIdentifier: REDSHIFT_CLUSTER_MAINTENANCESETTINGS_CHECK\n    Type: AWS::Config::ConfigRule\n  RedshiftClusterPublicAccessCheck:\n    Properties:\n      ConfigRuleName: redshift-cluster-public-access-check\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::Redshift::Cluster\n      Source:\n        Owner: AWS\n        SourceIdentifier: REDSHIFT_CLUSTER_PUBLIC_ACCESS_CHECK\n    Type: AWS::Config::ConfigRule\n  RedshiftEnhancedVpcRoutingEnabled:\n    Properties:\n      ConfigRuleName: redshift-enhanced-vpc-routing-enabled\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::Redshift::Cluster\n      Source:\n        Owner: AWS\n        SourceIdentifier: REDSHIFT_ENHANCED_VPC_ROUTING_ENABLED\n    Type: AWS::Config::ConfigRule\n  RedshiftRequireTlsSsl:\n    Properties:\n      ConfigRuleName: redshift-require-tls-ssl\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::Redshift::Cluster\n      Source:\n        Owner: AWS\n        SourceIdentifier: REDSHIFT_REQUIRE_TLS_SSL\n    Type: AWS::Config::ConfigRule\n  RestrictedIncomingTraffic:\n    Properties:\n      ConfigRuleName: restricted-common-ports\n      InputParameters:\n        blockedPort1:\n          Fn::If:\n          - restrictedIncomingTrafficParamBlockedPort1\n          - Ref: RestrictedIncomingTrafficParamBlockedPort1\n          - Ref: AWS::NoValue\n        blockedPort2:\n          Fn::If:\n          - restrictedIncomingTrafficParamBlockedPort2\n          - Ref: RestrictedIncomingTrafficParamBlockedPort2\n          - Ref: AWS::NoValue\n        blockedPort3:\n          Fn::If:\n          - restrictedIncomingTrafficParamBlockedPort3\n          - Ref: RestrictedIncomingTrafficParamBlockedPort3\n          - Ref: AWS::NoValue\n        blockedPort4:\n          Fn::If:\n          - restrictedIncomingTrafficParamBlockedPort4\n          - Ref: RestrictedIncomingTrafficParamBlockedPort4\n          - Ref: AWS::NoValue\n        blockedPort5:\n          Fn::If:\n          - restrictedIncomingTrafficParamBlockedPort5\n          - Ref: RestrictedIncomingTrafficParamBlockedPort5\n          - Ref: AWS::NoValue\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::EC2::SecurityGroup\n      Source:\n        Owner: AWS\n        SourceIdentifier: RESTRICTED_INCOMING_TRAFFIC\n    Type: AWS::Config::ConfigRule\n  RootAccountHardwareMfaEnabled:\n    Properties:\n      ConfigRuleName: root-account-hardware-mfa-enabled\n      Source:\n        Owner: AWS\n        SourceIdentifier: ROOT_ACCOUNT_HARDWARE_MFA_ENABLED\n    Type: AWS::Config::ConfigRule\n  RootAccountMfaEnabled:\n    Properties:\n      ConfigRuleName: root-account-mfa-enabled\n      Source:\n        Owner: AWS\n        SourceIdentifier: ROOT_ACCOUNT_MFA_ENABLED\n    Type: AWS::Config::ConfigRule\n  S3AccountLevelPublicAccessBlocksPeriodic:\n    Properties:\n      ConfigRuleName: s3-account-level-public-access-blocks-periodic\n      InputParameters:\n        BlockPublicAcls:\n          Fn::If:\n          - s3AccountLevelPublicAccessBlocksPeriodicParamBlockPublicAcls\n          - Ref: S3AccountLevelPublicAccessBlocksPeriodicParamBlockPublicAcls\n          - Ref: AWS::NoValue\n        BlockPublicPolicy:\n          Fn::If:\n          - s3AccountLevelPublicAccessBlocksPeriodicParamBlockPublicPolicy\n          - Ref: S3AccountLevelPublicAccessBlocksPeriodicParamBlockPublicPolicy\n          - Ref: AWS::NoValue\n        IgnorePublicAcls:\n          Fn::If:\n          - s3AccountLevelPublicAccessBlocksPeriodicParamIgnorePublicAcls\n          - Ref: S3AccountLevelPublicAccessBlocksPeriodicParamIgnorePublicAcls\n          - Ref: AWS::NoValue\n        RestrictPublicBuckets:\n          Fn::If:\n          - s3AccountLevelPublicAccessBlocksPeriodicParamRestrictPublicBuckets\n          - Ref: S3AccountLevelPublicAccessBlocksPeriodicParamRestrictPublicBuckets\n          - Ref: AWS::NoValue\n      Source:\n        Owner: AWS\n        SourceIdentifier: S3_ACCOUNT_LEVEL_PUBLIC_ACCESS_BLOCKS_PERIODIC\n    Type: AWS::Config::ConfigRule\n  S3BucketLevelPublicAccessProhibited:\n    Properties:\n      ConfigRuleName: s3-bucket-level-public-access-prohibited\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::S3::Bucket\n      Source:\n        Owner: AWS\n        SourceIdentifier: S3_BUCKET_LEVEL_PUBLIC_ACCESS_PROHIBITED\n    Type: AWS::Config::ConfigRule\n  S3BucketLoggingEnabled:\n    Properties:\n      ConfigRuleName: s3-bucket-logging-enabled\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::S3::Bucket\n      Source:\n        Owner: AWS\n        SourceIdentifier: S3_BUCKET_LOGGING_ENABLED\n    Type: AWS::Config::ConfigRule\n  S3BucketPublicReadProhibited:\n    Properties:\n      ConfigRuleName: s3-bucket-public-read-prohibited\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::S3::Bucket\n      Source:\n        Owner: AWS\n        SourceIdentifier: S3_BUCKET_PUBLIC_READ_PROHIBITED\n    Type: AWS::Config::ConfigRule\n  S3BucketPublicWriteProhibited:\n    Properties:\n      ConfigRuleName: s3-bucket-public-write-prohibited\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::S3::Bucket\n      Source:\n        Owner: AWS\n        SourceIdentifier: S3_BUCKET_PUBLIC_WRITE_PROHIBITED\n    Type: AWS::Config::ConfigRule\n  S3BucketServerSideEncryptionEnabled:\n    Properties:\n      ConfigRuleName: s3-bucket-server-side-encryption-enabled\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::S3::Bucket\n      Source:\n        Owner: AWS\n        SourceIdentifier: S3_BUCKET_SERVER_SIDE_ENCRYPTION_ENABLED\n    Type: AWS::Config::ConfigRule\n  S3BucketSslRequestsOnly:\n    Properties:\n      ConfigRuleName: s3-bucket-ssl-requests-only\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::S3::Bucket\n      Source:\n        Owner: AWS\n        SourceIdentifier: S3_BUCKET_SSL_REQUESTS_ONLY\n    Type: AWS::Config::ConfigRule\n  S3BucketVersioningEnabled:\n    Properties:\n      ConfigRuleName: s3-bucket-versioning-enabled\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::S3::Bucket\n      Source:\n        Owner: AWS\n        SourceIdentifier: S3_BUCKET_VERSIONING_ENABLED\n    Type: AWS::Config::ConfigRule\n  S3DefaultEncryptionKms:\n    Properties:\n      ConfigRuleName: s3-default-encryption-kms\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::S3::Bucket\n      Source:\n        Owner: AWS\n        SourceIdentifier: S3_DEFAULT_ENCRYPTION_KMS\n    Type: AWS::Config::ConfigRule\n  SagemakerEndpointConfigurationKmsKeyConfigured:\n    Properties:\n      ConfigRuleName: sagemaker-endpoint-configuration-kms-key-configured\n      Source:\n        Owner: AWS\n        SourceIdentifier: SAGEMAKER_ENDPOINT_CONFIGURATION_KMS_KEY_CONFIGURED\n    Type: AWS::Config::ConfigRule\n  SagemakerNotebookInstanceKmsKeyConfigured:\n    Properties:\n      ConfigRuleName: sagemaker-notebook-instance-kms-key-configured\n      Source:\n        Owner: AWS\n        SourceIdentifier: SAGEMAKER_NOTEBOOK_INSTANCE_KMS_KEY_CONFIGURED\n    Type: AWS::Config::ConfigRule\n  SagemakerNotebookNoDirectInternetAccess:\n    Properties:\n      ConfigRuleName: sagemaker-notebook-no-direct-internet-access\n      Source:\n        Owner: AWS\n        SourceIdentifier: SAGEMAKER_NOTEBOOK_NO_DIRECT_INTERNET_ACCESS\n    Type: AWS::Config::ConfigRule\n  SecretsmanagerRotationEnabledCheck:\n    Properties:\n      ConfigRuleName: secretsmanager-rotation-enabled-check\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::SecretsManager::Secret\n      Source:\n        Owner: AWS\n        SourceIdentifier: SECRETSMANAGER_ROTATION_ENABLED_CHECK\n    Type: AWS::Config::ConfigRule\n  SecretsmanagerScheduledRotationSuccessCheck:\n    Properties:\n      ConfigRuleName: secretsmanager-scheduled-rotation-success-check\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::SecretsManager::Secret\n      Source:\n        Owner: AWS\n        SourceIdentifier: SECRETSMANAGER_SCHEDULED_ROTATION_SUCCESS_CHECK\n    Type: AWS::Config::ConfigRule\n  SecretsmanagerSecretPeriodicRotation:\n    Properties:\n      ConfigRuleName: secretsmanager-secret-periodic-rotation\n      InputParameters:\n        maxDaysSinceRotation:\n          Fn::If:\n          - secretsmanagerSecretPeriodicRotationParamMaxDaysSinceRotation\n          - Ref: SecretsmanagerSecretPeriodicRotationParamMaxDaysSinceRotation\n          - Ref: AWS::NoValue\n      Source:\n        Owner: AWS\n        SourceIdentifier: SECRETSMANAGER_SECRET_PERIODIC_ROTATION\n    Type: AWS::Config::ConfigRule\n  SecretsmanagerSecretUnused:\n    Properties:\n      ConfigRuleName: secretsmanager-secret-unused\n      InputParameters:\n        unusedForDays:\n          Fn::If:\n          - secretsmanagerSecretUnusedParamUnusedForDays\n          - Ref: SecretsmanagerSecretUnusedParamUnusedForDays\n          - Ref: AWS::NoValue\n      Source:\n        Owner: AWS\n        SourceIdentifier: SECRETSMANAGER_SECRET_UNUSED\n    Type: AWS::Config::ConfigRule\n  SecretsmanagerSecretUnused2:\n    Properties:\n      ConfigRuleName: secretsmanager-secret-unused-2\n      Source:\n        Owner: AWS\n        SourceIdentifier: SECRETSMANAGER_SECRET_UNUSED\n    Type: AWS::Config::ConfigRule\n  SecretsmanagerUsingCmk:\n    Properties:\n      ConfigRuleName: secretsmanager-using-cmk\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::SecretsManager::Secret\n      Source:\n        Owner: AWS\n        SourceIdentifier: SECRETSMANAGER_USING_CMK\n    Type: AWS::Config::ConfigRule\n  SecurityhubEnabled:\n    Properties:\n      ConfigRuleName: securityhub-enabled\n      Source:\n        Owner: AWS\n        SourceIdentifier: SECURITYHUB_ENABLED\n    Type: AWS::Config::ConfigRule\n  SnsEncryptedKms:\n    Properties:\n      ConfigRuleName: sns-encrypted-kms\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::SNS::Topic\n      Source:\n        Owner: AWS\n        SourceIdentifier: SNS_ENCRYPTED_KMS\n    Type: AWS::Config::ConfigRule\n  SsmDocumentNotPublic:\n    Properties:\n      ConfigRuleName: ssm-document-not-public\n      Source:\n        Owner: AWS\n        SourceIdentifier: SSM_DOCUMENT_NOT_PUBLIC\n    Type: AWS::Config::ConfigRule\n  SubnetAutoAssignPublicIpDisabled:\n    Properties:\n      ConfigRuleName: subnet-auto-assign-public-ip-disabled\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::EC2::Subnet\n      Source:\n        Owner: AWS\n        SourceIdentifier: SUBNET_AUTO_ASSIGN_PUBLIC_IP_DISABLED\n    Type: AWS::Config::ConfigRule\n  VpcDefaultSecurityGroupClosed:\n    Properties:\n      ConfigRuleName: vpc-default-security-group-closed\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::EC2::SecurityGroup\n      Source:\n        Owner: AWS\n        SourceIdentifier: VPC_DEFAULT_SECURITY_GROUP_CLOSED\n    Type: AWS::Config::ConfigRule\n  VpcFlowLogsEnabled:\n    Properties:\n      ConfigRuleName: vpc-flow-logs-enabled\n      Source:\n        Owner: AWS\n        SourceIdentifier: VPC_FLOW_LOGS_ENABLED\n    Type: AWS::Config::ConfigRule\n  VpcNetworkAclUnusedCheck:\n    Properties:\n      ConfigRuleName: vpc-network-acl-unused-check\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::EC2::NetworkAcl\n      Source:\n        Owner: AWS\n        SourceIdentifier: VPC_NETWORK_ACL_UNUSED_CHECK\n    Type: AWS::Config::ConfigRule\n  VpcSgOpenOnlyToAuthorizedPorts:\n    Properties:\n      ConfigRuleName: vpc-sg-open-only-to-authorized-ports\n      InputParameters:\n        authorizedTcpPorts:\n          Fn::If:\n          - vpcSgOpenOnlyToAuthorizedPortsParamAuthorizedTcpPorts\n          - Ref: VpcSgOpenOnlyToAuthorizedPortsParamAuthorizedTcpPorts\n          - Ref: AWS::NoValue\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::EC2::SecurityGroup\n      Source:\n        Owner: AWS\n        SourceIdentifier: VPC_SG_OPEN_ONLY_TO_AUTHORIZED_PORTS\n    Type: AWS::Config::ConfigRule\n  WafRegionalRuleNotEmpty:\n    Properties:\n      ConfigRuleName: waf-regional-rule-not-empty\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::WAFRegional::Rule\n      Source:\n        Owner: AWS\n        SourceIdentifier: WAF_REGIONAL_RULE_NOT_EMPTY\n    Type: AWS::Config::ConfigRule\n  WafRegionalRulegroupNotEmpty:\n    Properties:\n      ConfigRuleName: waf-regional-rulegroup-not-empty\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::WAFRegional::RuleGroup\n      Source:\n        Owner: AWS\n        SourceIdentifier: WAF_REGIONAL_RULEGROUP_NOT_EMPTY\n    Type: AWS::Config::ConfigRule\n  WafRegionalWebaclNotEmpty:\n    Properties:\n      ConfigRuleName: waf-regional-webacl-not-empty\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::WAFRegional::WebACL\n      Source:\n        Owner: AWS\n        SourceIdentifier: WAF_REGIONAL_WEBACL_NOT_EMPTY\n    Type: AWS::Config::ConfigRule\n  Wafv2LoggingEnabled:\n    Properties:\n      ConfigRuleName: wafv2-logging-enabled\n      Source:\n        Owner: AWS\n        SourceIdentifier: WAFV2_LOGGING_ENABLED\n    Type: AWS::Config::ConfigRule\nConditions:\n  accessKeysRotatedParamMaxAccessKeyAge:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: AccessKeysRotatedParamMaxAccessKeyAge\n  acmCertificateExpirationCheckParamDaysToExpiration:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: AcmCertificateExpirationCheckParamDaysToExpiration\n  cloudwatchAlarmActionCheckParamAlarmActionRequired:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: CloudwatchAlarmActionCheckParamAlarmActionRequired\n  cloudwatchAlarmActionCheckParamInsufficientDataActionRequired:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: CloudwatchAlarmActionCheckParamInsufficientDataActionRequired\n  cloudwatchAlarmActionCheckParamOkActionRequired:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: CloudwatchAlarmActionCheckParamOkActionRequired\n  iamCustomerPolicyBlockedKmsActionsParamBlockedActionsPatterns:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: IamCustomerPolicyBlockedKmsActionsParamBlockedActionsPatterns\n  iamPasswordPolicyParamMaxPasswordAge:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: IamPasswordPolicyParamMaxPasswordAge\n  iamPasswordPolicyParamMinimumPasswordLength:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: IamPasswordPolicyParamMinimumPasswordLength\n  iamPasswordPolicyParamPasswordReusePrevention:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: IamPasswordPolicyParamPasswordReusePrevention\n  iamPasswordPolicyParamRequireLowercaseCharacters:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: IamPasswordPolicyParamRequireLowercaseCharacters\n  iamPasswordPolicyParamRequireNumbers:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: IamPasswordPolicyParamRequireNumbers\n  iamPasswordPolicyParamRequireSymbols:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: IamPasswordPolicyParamRequireSymbols\n  iamPasswordPolicyParamRequireUppercaseCharacters:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: IamPasswordPolicyParamRequireUppercaseCharacters\n  iamUserUnusedCredentialsCheckParamMaxCredentialUsageAge:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: IamUserUnusedCredentialsCheckParamMaxCredentialUsageAge\n  redshiftClusterConfigurationCheckParamClusterDbEncrypted:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: RedshiftClusterConfigurationCheckParamClusterDbEncrypted\n  redshiftClusterConfigurationCheckParamLoggingEnabled:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: RedshiftClusterConfigurationCheckParamLoggingEnabled\n  redshiftClusterMaintenancesettingsCheckParamAllowVersionUpgrade:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: RedshiftClusterMaintenancesettingsCheckParamAllowVersionUpgrade\n  restrictedIncomingTrafficParamBlockedPort1:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: RestrictedIncomingTrafficParamBlockedPort1\n  restrictedIncomingTrafficParamBlockedPort2:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: RestrictedIncomingTrafficParamBlockedPort2\n  restrictedIncomingTrafficParamBlockedPort3:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: RestrictedIncomingTrafficParamBlockedPort3\n  restrictedIncomingTrafficParamBlockedPort4:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: RestrictedIncomingTrafficParamBlockedPort4\n  restrictedIncomingTrafficParamBlockedPort5:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: RestrictedIncomingTrafficParamBlockedPort5\n  s3AccountLevelPublicAccessBlocksPeriodicParamBlockPublicAcls:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: S3AccountLevelPublicAccessBlocksPeriodicParamBlockPublicAcls\n  s3AccountLevelPublicAccessBlocksPeriodicParamBlockPublicPolicy:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: S3AccountLevelPublicAccessBlocksPeriodicParamBlockPublicPolicy\n  s3AccountLevelPublicAccessBlocksPeriodicParamIgnorePublicAcls:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: S3AccountLevelPublicAccessBlocksPeriodicParamIgnorePublicAcls\n  s3AccountLevelPublicAccessBlocksPeriodicParamRestrictPublicBuckets:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: S3AccountLevelPublicAccessBlocksPeriodicParamRestrictPublicBuckets\n  secretsmanagerSecretPeriodicRotationParamMaxDaysSinceRotation:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: SecretsmanagerSecretPeriodicRotationParamMaxDaysSinceRotation\n  secretsmanagerSecretUnusedParamUnusedForDays:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: SecretsmanagerSecretUnusedParamUnusedForDays\n  vpcSgOpenOnlyToAuthorizedPortsParamAuthorizedTcpPorts:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: VpcSgOpenOnlyToAuthorizedPortsParamAuthorizedTcpPorts\n",
            "ca_cert_pem": null,
            "id": "https://raw.githubusercontent.com/awslabs/aws-config-rules/refs/heads/master/aws-config-conformance-packs/Operational-Best-Practices-for-AWS-Well-Architected-Security-Pillar.yaml",
            "insecure": null,
            "method": null,
            "request_body": null,
            "request_headers": null,
            "request_timeout_ms": null,
            "response_body": "##################################################################################\n#\n#   Conformance Pack:\n#     Operational Best Practices for AWS Well Architected (WA) Security Pillar\n#\n#   This conformance pack helps verify compliance with the AWS WA Security Pillar\n#   (https://docs.aws.amazon.com/wellarchitected/latest/security-pillar/welcome.html)\n#   requirements.\n#\n#   This Conformance Pack has been designed for compatibility with the majority of AWS\n#   regions and to not require setting of any Parameters. Additional managed rules that\n#   require parameters to be set for your environment and/or for your specific region can\n#   be found at https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html\n#\n#   See Parameters section for names and descriptions of required parameters.\n#\n##################################################################################\n\nParameters:\n  AccessKeysRotatedParamMaxAccessKeyAge:\n    Default: '90'\n    Type: String\n  AcmCertificateExpirationCheckParamDaysToExpiration:\n    Default: '90'\n    Type: String\n  CloudwatchAlarmActionCheckParamAlarmActionRequired:\n    Default: 'true'\n    Type: String\n  CloudwatchAlarmActionCheckParamInsufficientDataActionRequired:\n    Default: 'true'\n    Type: String\n  CloudwatchAlarmActionCheckParamOkActionRequired:\n    Default: 'true'\n    Type: String\n  IamCustomerPolicyBlockedKmsActionsParamBlockedActionsPatterns:\n    Default: kms:Decrypt,kms:ReEncryptFrom\n    Type: String\n  IamPasswordPolicyParamMaxPasswordAge:\n    Default: '90'\n    Type: String\n  IamPasswordPolicyParamMinimumPasswordLength:\n    Default: '14'\n    Type: String\n  IamPasswordPolicyParamPasswordReusePrevention:\n    Default: '24'\n    Type: String\n  IamPasswordPolicyParamRequireLowercaseCharacters:\n    Default: 'true'\n    Type: String\n  IamPasswordPolicyParamRequireNumbers:\n    Default: 'true'\n    Type: String\n  IamPasswordPolicyParamRequireSymbols:\n    Default: 'true'\n    Type: String\n  IamPasswordPolicyParamRequireUppercaseCharacters:\n    Default: 'true'\n    Type: String\n  IamUserUnusedCredentialsCheckParamMaxCredentialUsageAge:\n    Default: '90'\n    Type: String\n  RedshiftClusterConfigurationCheckParamClusterDbEncrypted:\n    Default: 'true'\n    Type: String\n  RedshiftClusterConfigurationCheckParamLoggingEnabled:\n    Default: 'true'\n    Type: String\n  RedshiftClusterMaintenancesettingsCheckParamAllowVersionUpgrade:\n    Default: 'true'\n    Type: String\n  RestrictedIncomingTrafficParamBlockedPort1:\n    Default: '20'\n    Type: String\n  RestrictedIncomingTrafficParamBlockedPort2:\n    Default: '21'\n    Type: String\n  RestrictedIncomingTrafficParamBlockedPort3:\n    Default: '3389'\n    Type: String\n  RestrictedIncomingTrafficParamBlockedPort4:\n    Default: '3306'\n    Type: String\n  RestrictedIncomingTrafficParamBlockedPort5:\n    Default: '4333'\n    Type: String\n  S3AccountLevelPublicAccessBlocksPeriodicParamBlockPublicAcls:\n    Default: 'true'\n    Type: String\n  S3AccountLevelPublicAccessBlocksPeriodicParamBlockPublicPolicy:\n    Default: 'true'\n    Type: String\n  S3AccountLevelPublicAccessBlocksPeriodicParamIgnorePublicAcls:\n    Default: 'true'\n    Type: String\n  S3AccountLevelPublicAccessBlocksPeriodicParamRestrictPublicBuckets:\n    Default: 'true'\n    Type: String\n  SecretsmanagerSecretPeriodicRotationParamMaxDaysSinceRotation:\n    Default: '90'\n    Type: String\n  SecretsmanagerSecretUnusedParamUnusedForDays:\n    Default: '90'\n    Type: String\n  VpcSgOpenOnlyToAuthorizedPortsParamAuthorizedTcpPorts:\n    Default: '443'\n    Type: String\nResources:\n  AccessKeysRotated:\n    Properties:\n      ConfigRuleName: access-keys-rotated\n      InputParameters:\n        maxAccessKeyAge:\n          Fn::If:\n          - accessKeysRotatedParamMaxAccessKeyAge\n          - Ref: AccessKeysRotatedParamMaxAccessKeyAge\n          - Ref: AWS::NoValue\n      Source:\n        Owner: AWS\n        SourceIdentifier: ACCESS_KEYS_ROTATED\n    Type: AWS::Config::ConfigRule\n  AccountPartOfOrganizations:\n    Properties:\n      ConfigRuleName: account-part-of-organizations\n      Source:\n        Owner: AWS\n        SourceIdentifier: ACCOUNT_PART_OF_ORGANIZATIONS\n    Type: AWS::Config::ConfigRule\n  AcmCertificateExpirationCheck:\n    Properties:\n      ConfigRuleName: acm-certificate-expiration-check\n      InputParameters:\n        daysToExpiration:\n          Fn::If:\n          - acmCertificateExpirationCheckParamDaysToExpiration\n          - Ref: AcmCertificateExpirationCheckParamDaysToExpiration\n          - Ref: AWS::NoValue\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::ACM::Certificate\n      Source:\n        Owner: AWS\n        SourceIdentifier: ACM_CERTIFICATE_EXPIRATION_CHECK\n    Type: AWS::Config::ConfigRule\n  AlbHttpDropInvalidHeaderEnabled:\n    Properties:\n      ConfigRuleName: alb-http-drop-invalid-header-enabled\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::ElasticLoadBalancingV2::LoadBalancer\n      Source:\n        Owner: AWS\n        SourceIdentifier: ALB_HTTP_DROP_INVALID_HEADER_ENABLED\n    Type: AWS::Config::ConfigRule\n  AlbHttpToHttpsRedirectionCheck:\n    Properties:\n      ConfigRuleName: alb-http-to-https-redirection-check\n      Source:\n        Owner: AWS\n        SourceIdentifier: ALB_HTTP_TO_HTTPS_REDIRECTION_CHECK\n    Type: AWS::Config::ConfigRule\n  AlbWafEnabled:\n    Properties:\n      ConfigRuleName: alb-waf-enabled\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::ElasticLoadBalancingV2::LoadBalancer\n      Source:\n        Owner: AWS\n        SourceIdentifier: ALB_WAF_ENABLED\n    Type: AWS::Config::ConfigRule\n  ApiGwAssociatedWithWaf:\n    Properties:\n      ConfigRuleName: api-gw-associated-with-waf\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::ApiGateway::Stage\n      Source:\n        Owner: AWS\n        SourceIdentifier: API_GW_ASSOCIATED_WITH_WAF\n    Type: AWS::Config::ConfigRule\n  ApiGwCacheEnabledAndEncrypted:\n    Properties:\n      ConfigRuleName: api-gw-cache-enabled-and-encrypted\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::ApiGateway::Stage\n      Source:\n        Owner: AWS\n        SourceIdentifier: API_GW_CACHE_ENABLED_AND_ENCRYPTED\n    Type: AWS::Config::ConfigRule\n  ApiGwExecutionLoggingEnabled:\n    Properties:\n      ConfigRuleName: api-gw-execution-logging-enabled\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::ApiGateway::Stage\n        - AWS::ApiGatewayV2::Stage\n      Source:\n        Owner: AWS\n        SourceIdentifier: API_GW_EXECUTION_LOGGING_ENABLED\n    Type: AWS::Config::ConfigRule\n  ApiGwSslEnabled:\n    Properties:\n      ConfigRuleName: api-gw-ssl-enabled\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::ApiGateway::Stage\n      Source:\n        Owner: AWS\n        SourceIdentifier: API_GW_SSL_ENABLED\n    Type: AWS::Config::ConfigRule\n  AutoscalingLaunchConfigPublicIpDisabled:\n    Properties:\n      ConfigRuleName: autoscaling-launch-config-public-ip-disabled\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::AutoScaling::LaunchConfiguration\n      Source:\n        Owner: AWS\n        SourceIdentifier: AUTOSCALING_LAUNCH_CONFIG_PUBLIC_IP_DISABLED\n    Type: AWS::Config::ConfigRule\n  BackupRecoveryPointEncrypted:\n    Properties:\n      ConfigRuleName: backup-recovery-point-encrypted\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::Backup::RecoveryPoint\n      Source:\n        Owner: AWS\n        SourceIdentifier: BACKUP_RECOVERY_POINT_ENCRYPTED\n    Type: AWS::Config::ConfigRule\n  CloudTrailCloudWatchLogsEnabled:\n    Properties:\n      ConfigRuleName: cloud-trail-cloud-watch-logs-enabled\n      Source:\n        Owner: AWS\n        SourceIdentifier: CLOUD_TRAIL_CLOUD_WATCH_LOGS_ENABLED\n    Type: AWS::Config::ConfigRule\n  CloudTrailEncryptionEnabled:\n    Properties:\n      ConfigRuleName: cloud-trail-encryption-enabled\n      Source:\n        Owner: AWS\n        SourceIdentifier: CLOUD_TRAIL_ENCRYPTION_ENABLED\n    Type: AWS::Config::ConfigRule\n  CloudTrailLogFileValidationEnabled:\n    Properties:\n      ConfigRuleName: cloud-trail-log-file-validation-enabled\n      Source:\n        Owner: AWS\n        SourceIdentifier: CLOUD_TRAIL_LOG_FILE_VALIDATION_ENABLED\n    Type: AWS::Config::ConfigRule\n  CloudtrailS3DataeventsEnabled:\n    Properties:\n      ConfigRuleName: cloudtrail-s3-dataevents-enabled\n      Source:\n        Owner: AWS\n        SourceIdentifier: CLOUDTRAIL_S3_DATAEVENTS_ENABLED\n    Type: AWS::Config::ConfigRule\n  CloudtrailSecurityTrailEnabled:\n    Properties:\n      ConfigRuleName: cloudtrail-security-trail-enabled\n      Source:\n        Owner: AWS\n        SourceIdentifier: CLOUDTRAIL_SECURITY_TRAIL_ENABLED\n    Type: AWS::Config::ConfigRule\n  CloudwatchAlarmActionCheck:\n    Properties:\n      ConfigRuleName: cloudwatch-alarm-action-check\n      InputParameters:\n        alarmActionRequired:\n          Fn::If:\n          - cloudwatchAlarmActionCheckParamAlarmActionRequired\n          - Ref: CloudwatchAlarmActionCheckParamAlarmActionRequired\n          - Ref: AWS::NoValue\n        insufficientDataActionRequired:\n          Fn::If:\n          - cloudwatchAlarmActionCheckParamInsufficientDataActionRequired\n          - Ref: CloudwatchAlarmActionCheckParamInsufficientDataActionRequired\n          - Ref: AWS::NoValue\n        okActionRequired:\n          Fn::If:\n          - cloudwatchAlarmActionCheckParamOkActionRequired\n          - Ref: CloudwatchAlarmActionCheckParamOkActionRequired\n          - Ref: AWS::NoValue\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::CloudWatch::Alarm\n      Source:\n        Owner: AWS\n        SourceIdentifier: CLOUDWATCH_ALARM_ACTION_CHECK\n    Type: AWS::Config::ConfigRule\n  CloudwatchLogGroupEncrypted:\n    Properties:\n      ConfigRuleName: cloudwatch-log-group-encrypted\n      Source:\n        Owner: AWS\n        SourceIdentifier: CLOUDWATCH_LOG_GROUP_ENCRYPTED\n    Type: AWS::Config::ConfigRule\n  CodebuildProjectArtifactEncryption:\n    Properties:\n      ConfigRuleName: codebuild-project-artifact-encryption\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::CodeBuild::Project\n      Source:\n        Owner: AWS\n        SourceIdentifier: CODEBUILD_PROJECT_ARTIFACT_ENCRYPTION\n    Type: AWS::Config::ConfigRule\n  CodebuildProjectEnvvarAwscredCheck:\n    Properties:\n      ConfigRuleName: codebuild-project-envvar-awscred-check\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::CodeBuild::Project\n      Source:\n        Owner: AWS\n        SourceIdentifier: CODEBUILD_PROJECT_ENVVAR_AWSCRED_CHECK\n    Type: AWS::Config::ConfigRule\n  CodebuildProjectS3LogsEncrypted:\n    Properties:\n      ConfigRuleName: codebuild-project-s3-logs-encrypted\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::CodeBuild::Project\n      Source:\n        Owner: AWS\n        SourceIdentifier: CODEBUILD_PROJECT_S3_LOGS_ENCRYPTED\n    Type: AWS::Config::ConfigRule\n  CwLoggroupRetentionPeriodCheck:\n    Properties:\n      ConfigRuleName: cw-loggroup-retention-period-check\n      Source:\n        Owner: AWS\n        SourceIdentifier: CW_LOGGROUP_RETENTION_PERIOD_CHECK\n    Type: AWS::Config::ConfigRule\n  DmsReplicationNotPublic:\n    Properties:\n      ConfigRuleName: dms-replication-not-public\n      Scope:\n        ComplianceResourceTypes: []\n      Source:\n        Owner: AWS\n        SourceIdentifier: DMS_REPLICATION_NOT_PUBLIC\n    Type: AWS::Config::ConfigRule\n  DynamodbTableEncryptedKms:\n    Properties:\n      ConfigRuleName: dynamodb-table-encrypted-kms\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::DynamoDB::Table\n      Source:\n        Owner: AWS\n        SourceIdentifier: DYNAMODB_TABLE_ENCRYPTED_KMS\n    Type: AWS::Config::ConfigRule\n  EbsSnapshotPublicRestorableCheck:\n    Properties:\n      ConfigRuleName: ebs-snapshot-public-restorable-check\n      Source:\n        Owner: AWS\n        SourceIdentifier: EBS_SNAPSHOT_PUBLIC_RESTORABLE_CHECK\n    Type: AWS::Config::ConfigRule\n  Ec2EbsEncryptionByDefault:\n    Properties:\n      ConfigRuleName: ec2-ebs-encryption-by-default\n      Source:\n        Owner: AWS\n        SourceIdentifier: EC2_EBS_ENCRYPTION_BY_DEFAULT\n    Type: AWS::Config::ConfigRule\n  Ec2Imdsv2Check:\n    Properties:\n      ConfigRuleName: ec2-imdsv2-check\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::EC2::Instance\n      Source:\n        Owner: AWS\n        SourceIdentifier: EC2_IMDSV2_CHECK\n    Type: AWS::Config::ConfigRule\n  Ec2InstanceManagedBySsm:\n    Properties:\n      ConfigRuleName: ec2-instance-managed-by-systems-manager\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::EC2::Instance\n        - AWS::SSM::ManagedInstanceInventory\n      Source:\n        Owner: AWS\n        SourceIdentifier: EC2_INSTANCE_MANAGED_BY_SSM\n    Type: AWS::Config::ConfigRule\n  Ec2InstanceMultipleEniCheck:\n    Properties:\n      ConfigRuleName: ec2-instance-multiple-eni-check\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::EC2::Instance\n      Source:\n        Owner: AWS\n        SourceIdentifier: EC2_INSTANCE_MULTIPLE_ENI_CHECK\n    Type: AWS::Config::ConfigRule\n  Ec2InstanceNoPublicIp:\n    Properties:\n      ConfigRuleName: ec2-instance-no-public-ip\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::EC2::Instance\n      Source:\n        Owner: AWS\n        SourceIdentifier: EC2_INSTANCE_NO_PUBLIC_IP\n    Type: AWS::Config::ConfigRule\n  Ec2InstanceProfileAttached:\n    Properties:\n      ConfigRuleName: ec2-instance-profile-attached\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::EC2::Instance\n      Source:\n        Owner: AWS\n        SourceIdentifier: EC2_INSTANCE_PROFILE_ATTACHED\n    Type: AWS::Config::ConfigRule\n  Ec2ManagedinstanceAssociationComplianceStatusCheck:\n    Properties:\n      ConfigRuleName: ec2-managedinstance-association-compliance-status-check\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::SSM::AssociationCompliance\n      Source:\n        Owner: AWS\n        SourceIdentifier: EC2_MANAGEDINSTANCE_ASSOCIATION_COMPLIANCE_STATUS_CHECK\n    Type: AWS::Config::ConfigRule\n  Ec2ManagedinstancePatchComplianceStatusCheck:\n    Properties:\n      ConfigRuleName: ec2-managedinstance-patch-compliance-status-check\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::SSM::PatchCompliance\n      Source:\n        Owner: AWS\n        SourceIdentifier: EC2_MANAGEDINSTANCE_PATCH_COMPLIANCE_STATUS_CHECK\n    Type: AWS::Config::ConfigRule\n  Ec2SecurityGroupAttachedToEniPeriodic:\n    Properties:\n      ConfigRuleName: ec2-security-group-attached-to-eni-periodic\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::EC2::SecurityGroup\n      Source:\n        Owner: AWS\n        SourceIdentifier: EC2_SECURITY_GROUP_ATTACHED_TO_ENI_PERIODIC\n    Type: AWS::Config::ConfigRule\n  Ec2StoppedInstance:\n    Properties:\n      ConfigRuleName: ec2-stopped-instance\n      Source:\n        Owner: AWS\n        SourceIdentifier: EC2_STOPPED_INSTANCE\n    Type: AWS::Config::ConfigRule\n  Ec2VolumeInuseCheck:\n    Properties:\n      ConfigRuleName: ec2-volume-inuse-check\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::EC2::Volume\n      Source:\n        Owner: AWS\n        SourceIdentifier: EC2_VOLUME_INUSE_CHECK\n    Type: AWS::Config::ConfigRule\n  EcrPrivateImageScanningEnabled:\n    Properties:\n      ConfigRuleName: ecr-private-image-scanning-enabled\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::ECR::Repository\n      Source:\n        Owner: AWS\n        SourceIdentifier: ECR_PRIVATE_IMAGE_SCANNING_ENABLED\n    Type: AWS::Config::ConfigRule\n  EcsContainerInsightsEnabled:\n    Properties:\n      ConfigRuleName: ecs-container-insights-enabled\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::ECS::Cluster\n      Source:\n        Owner: AWS\n        SourceIdentifier: ECS_CONTAINER_INSIGHTS_ENABLED\n    Type: AWS::Config::ConfigRule\n  EcsContainersNonprivileged:\n    Properties:\n      ConfigRuleName: ecs-containers-nonprivileged\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::ECS::TaskDefinition\n      Source:\n        Owner: AWS\n        SourceIdentifier: ECS_CONTAINERS_NONPRIVILEGED\n    Type: AWS::Config::ConfigRule\n  EcsContainersReadonlyAccess:\n    Properties:\n      ConfigRuleName: ecs-containers-readonly-access\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::ECS::TaskDefinition\n      Source:\n        Owner: AWS\n        SourceIdentifier: ECS_CONTAINERS_READONLY_ACCESS\n    Type: AWS::Config::ConfigRule\n  EcsFargateLatestPlatformVersion:\n    Properties:\n      ConfigRuleName: ecs-fargate-latest-platform-version\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::ECS::Service\n      Source:\n        Owner: AWS\n        SourceIdentifier: ECS_FARGATE_LATEST_PLATFORM_VERSION\n    Type: AWS::Config::ConfigRule\n  EcsTaskDefinitionNonrootUser:\n    Properties:\n      ConfigRuleName: ecs-task-definition-nonroot-user\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::ECS::TaskDefinition\n      Source:\n        Owner: AWS\n        SourceIdentifier: ECS_TASK_DEFINITION_NONROOT_USER\n    Type: AWS::Config::ConfigRule\n  EcsTaskDefinitionUserForHostModeCheck:\n    Properties:\n      ConfigRuleName: ecs-task-definition-user-for-host-mode-check\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::ECS::TaskDefinition\n      Source:\n        Owner: AWS\n        SourceIdentifier: ECS_TASK_DEFINITION_USER_FOR_HOST_MODE_CHECK\n    Type: AWS::Config::ConfigRule\n  EfsAccessPointEnforceUserIdentity:\n    Properties:\n      ConfigRuleName: efs-access-point-enforce-user-identity\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::EFS::AccessPoint\n      Source:\n        Owner: AWS\n        SourceIdentifier: EFS_ACCESS_POINT_ENFORCE_USER_IDENTITY\n    Type: AWS::Config::ConfigRule\n  EfsEncryptedCheck:\n    Properties:\n      ConfigRuleName: efs-encrypted-check\n      Source:\n        Owner: AWS\n        SourceIdentifier: EFS_ENCRYPTED_CHECK\n    Type: AWS::Config::ConfigRule\n  ElasticBeanstalkManagedUpdatesEnabled:\n    Properties:\n      ConfigRuleName: elastic-beanstalk-managed-updates-enabled\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::ElasticBeanstalk::Environment\n      Source:\n        Owner: AWS\n        SourceIdentifier: ELASTIC_BEANSTALK_MANAGED_UPDATES_ENABLED\n    Type: AWS::Config::ConfigRule\n  ElasticsearchEncryptedAtRest:\n    Properties:\n      ConfigRuleName: elasticsearch-encrypted-at-rest\n      Source:\n        Owner: AWS\n        SourceIdentifier: ELASTICSEARCH_ENCRYPTED_AT_REST\n    Type: AWS::Config::ConfigRule\n  ElasticsearchInVpcOnly:\n    Properties:\n      ConfigRuleName: elasticsearch-in-vpc-only\n      Source:\n        Owner: AWS\n        SourceIdentifier: ELASTICSEARCH_IN_VPC_ONLY\n    Type: AWS::Config::ConfigRule\n  ElasticsearchLogsToCloudwatch:\n    Properties:\n      ConfigRuleName: elasticsearch-logs-to-cloudwatch\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::Elasticsearch::Domain\n      Source:\n        Owner: AWS\n        SourceIdentifier: ELASTICSEARCH_LOGS_TO_CLOUDWATCH\n    Type: AWS::Config::ConfigRule\n  ElasticsearchNodeToNodeEncryptionCheck:\n    Properties:\n      ConfigRuleName: elasticsearch-node-to-node-encryption-check\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::Elasticsearch::Domain\n      Source:\n        Owner: AWS\n        SourceIdentifier: ELASTICSEARCH_NODE_TO_NODE_ENCRYPTION_CHECK\n    Type: AWS::Config::ConfigRule\n  ElbAcmCertificateRequired:\n    Properties:\n      ConfigRuleName: elb-acm-certificate-required\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::ElasticLoadBalancing::LoadBalancer\n      Source:\n        Owner: AWS\n        SourceIdentifier: ELB_ACM_CERTIFICATE_REQUIRED\n    Type: AWS::Config::ConfigRule\n  ElbLoggingEnabled:\n    Properties:\n      ConfigRuleName: elb-logging-enabled\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::ElasticLoadBalancing::LoadBalancer\n        - AWS::ElasticLoadBalancingV2::LoadBalancer\n      Source:\n        Owner: AWS\n        SourceIdentifier: ELB_LOGGING_ENABLED\n    Type: AWS::Config::ConfigRule\n  ElbTlsHttpsListenersOnly:\n    Properties:\n      ConfigRuleName: elb-tls-https-listeners-only\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::ElasticLoadBalancing::LoadBalancer\n      Source:\n        Owner: AWS\n        SourceIdentifier: ELB_TLS_HTTPS_LISTENERS_ONLY\n    Type: AWS::Config::ConfigRule\n  Elbv2AcmCertificateRequired:\n    Properties:\n      ConfigRuleName: elbv2-acm-certificate-required\n      Source:\n        Owner: AWS\n        SourceIdentifier: ELBV2_ACM_CERTIFICATE_REQUIRED\n    Type: AWS::Config::ConfigRule\n  EmrKerberosEnabled:\n    Properties:\n      ConfigRuleName: emr-kerberos-enabled\n      Source:\n        Owner: AWS\n        SourceIdentifier: EMR_KERBEROS_ENABLED\n    Type: AWS::Config::ConfigRule\n  EmrMasterNoPublicIp:\n    Properties:\n      ConfigRuleName: emr-master-no-public-ip\n      Scope:\n        ComplianceResourceTypes: []\n      Source:\n        Owner: AWS\n        SourceIdentifier: EMR_MASTER_NO_PUBLIC_IP\n    Type: AWS::Config::ConfigRule\n  EncryptedVolumes:\n    Properties:\n      ConfigRuleName: encrypted-volumes\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::EC2::Volume\n      Source:\n        Owner: AWS\n        SourceIdentifier: ENCRYPTED_VOLUMES\n    Type: AWS::Config::ConfigRule\n  GuarddutyEnabledCentralized:\n    Properties:\n      ConfigRuleName: guardduty-enabled-centralized\n      Source:\n        Owner: AWS\n        SourceIdentifier: GUARDDUTY_ENABLED_CENTRALIZED\n    Type: AWS::Config::ConfigRule\n  IamCustomerPolicyBlockedKmsActions:\n    Properties:\n      ConfigRuleName: iam-customer-policy-blocked-kms-actions\n      InputParameters:\n        blockedActionsPatterns:\n          Fn::If:\n          - iamCustomerPolicyBlockedKmsActionsParamBlockedActionsPatterns\n          - Ref: IamCustomerPolicyBlockedKmsActionsParamBlockedActionsPatterns\n          - Ref: AWS::NoValue\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::IAM::Policy\n      Source:\n        Owner: AWS\n        SourceIdentifier: IAM_CUSTOMER_POLICY_BLOCKED_KMS_ACTIONS\n    Type: AWS::Config::ConfigRule\n  IamGroupHasUsersCheck:\n    Properties:\n      ConfigRuleName: iam-group-has-users-check\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::IAM::Group\n      Source:\n        Owner: AWS\n        SourceIdentifier: IAM_GROUP_HAS_USERS_CHECK\n    Type: AWS::Config::ConfigRule\n  IamNoInlinePolicyCheck:\n    Properties:\n      ConfigRuleName: iam-no-inline-policy-check\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::IAM::User\n        - AWS::IAM::Role\n        - AWS::IAM::Group\n      Source:\n        Owner: AWS\n        SourceIdentifier: IAM_NO_INLINE_POLICY_CHECK\n    Type: AWS::Config::ConfigRule\n  IamPasswordPolicy:\n    Properties:\n      ConfigRuleName: iam-password-policy\n      InputParameters:\n        MaxPasswordAge:\n          Fn::If:\n          - iamPasswordPolicyParamMaxPasswordAge\n          - Ref: IamPasswordPolicyParamMaxPasswordAge\n          - Ref: AWS::NoValue\n        MinimumPasswordLength:\n          Fn::If:\n          - iamPasswordPolicyParamMinimumPasswordLength\n          - Ref: IamPasswordPolicyParamMinimumPasswordLength\n          - Ref: AWS::NoValue\n        PasswordReusePrevention:\n          Fn::If:\n          - iamPasswordPolicyParamPasswordReusePrevention\n          - Ref: IamPasswordPolicyParamPasswordReusePrevention\n          - Ref: AWS::NoValue\n        RequireLowercaseCharacters:\n          Fn::If:\n          - iamPasswordPolicyParamRequireLowercaseCharacters\n          - Ref: IamPasswordPolicyParamRequireLowercaseCharacters\n          - Ref: AWS::NoValue\n        RequireNumbers:\n          Fn::If:\n          - iamPasswordPolicyParamRequireNumbers\n          - Ref: IamPasswordPolicyParamRequireNumbers\n          - Ref: AWS::NoValue\n        RequireSymbols:\n          Fn::If:\n          - iamPasswordPolicyParamRequireSymbols\n          - Ref: IamPasswordPolicyParamRequireSymbols\n          - Ref: AWS::NoValue\n        RequireUppercaseCharacters:\n          Fn::If:\n          - iamPasswordPolicyParamRequireUppercaseCharacters\n          - Ref: IamPasswordPolicyParamRequireUppercaseCharacters\n          - Ref: AWS::NoValue\n      Source:\n        Owner: AWS\n        SourceIdentifier: IAM_PASSWORD_POLICY\n    Type: AWS::Config::ConfigRule\n  IamPolicyNoStatementsWithAdminAccess:\n    Properties:\n      ConfigRuleName: iam-policy-no-statements-with-admin-access\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::IAM::Policy\n      Source:\n        Owner: AWS\n        SourceIdentifier: IAM_POLICY_NO_STATEMENTS_WITH_ADMIN_ACCESS\n    Type: AWS::Config::ConfigRule\n  IamPolicyNoStatementsWithFullAccess:\n    Properties:\n      ConfigRuleName: iam-policy-no-statements-with-full-access\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::IAM::Policy\n      Source:\n        Owner: AWS\n        SourceIdentifier: IAM_POLICY_NO_STATEMENTS_WITH_FULL_ACCESS\n    Type: AWS::Config::ConfigRule\n  IamRootAccessKeyCheck:\n    Properties:\n      ConfigRuleName: iam-root-access-key-check\n      Source:\n        Owner: AWS\n        SourceIdentifier: IAM_ROOT_ACCESS_KEY_CHECK\n    Type: AWS::Config::ConfigRule\n  IamUserGroupMembershipCheck:\n    Properties:\n      ConfigRuleName: iam-user-group-membership-check\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::IAM::User\n      Source:\n        Owner: AWS\n        SourceIdentifier: IAM_USER_GROUP_MEMBERSHIP_CHECK\n    Type: AWS::Config::ConfigRule\n  IamUserMfaEnabled:\n    Properties:\n      ConfigRuleName: iam-user-mfa-enabled\n      Source:\n        Owner: AWS\n        SourceIdentifier: IAM_USER_MFA_ENABLED\n    Type: AWS::Config::ConfigRule\n  IamUserUnusedCredentialsCheck:\n    Properties:\n      ConfigRuleName: iam-user-unused-credentials-check\n      InputParameters:\n        maxCredentialUsageAge:\n          Fn::If:\n          - iamUserUnusedCredentialsCheckParamMaxCredentialUsageAge\n          - Ref: IamUserUnusedCredentialsCheckParamMaxCredentialUsageAge\n          - Ref: AWS::NoValue\n      Source:\n        Owner: AWS\n        SourceIdentifier: IAM_USER_UNUSED_CREDENTIALS_CHECK\n    Type: AWS::Config::ConfigRule\n  IncomingSshDisabled:\n    Properties:\n      ConfigRuleName: restricted-ssh\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::EC2::SecurityGroup\n      Source:\n        Owner: AWS\n        SourceIdentifier: INCOMING_SSH_DISABLED\n    Type: AWS::Config::ConfigRule\n  InstancesInVpc:\n    Properties:\n      ConfigRuleName: ec2-instances-in-vpc\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::EC2::Instance\n      Source:\n        Owner: AWS\n        SourceIdentifier: INSTANCES_IN_VPC\n    Type: AWS::Config::ConfigRule\n  KmsCmkNotScheduledForDeletion:\n    Properties:\n      ConfigRuleName: kms-cmk-not-scheduled-for-deletion\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::KMS::Key\n      Source:\n        Owner: AWS\n        SourceIdentifier: KMS_CMK_NOT_SCHEDULED_FOR_DELETION\n    Type: AWS::Config::ConfigRule\n  LambdaFunctionPublicAccessProhibited:\n    Properties:\n      ConfigRuleName: lambda-function-public-access-prohibited\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::Lambda::Function\n      Source:\n        Owner: AWS\n        SourceIdentifier: LAMBDA_FUNCTION_PUBLIC_ACCESS_PROHIBITED\n    Type: AWS::Config::ConfigRule\n  LambdaInsideVpc:\n    Properties:\n      ConfigRuleName: lambda-inside-vpc\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::Lambda::Function\n      Source:\n        Owner: AWS\n        SourceIdentifier: LAMBDA_INSIDE_VPC\n    Type: AWS::Config::ConfigRule\n  MfaEnabledForIamConsoleAccess:\n    Properties:\n      ConfigRuleName: mfa-enabled-for-iam-console-access\n      Source:\n        Owner: AWS\n        SourceIdentifier: MFA_ENABLED_FOR_IAM_CONSOLE_ACCESS\n    Type: AWS::Config::ConfigRule\n  MultiRegionCloudTrailEnabled:\n    Properties:\n      ConfigRuleName: multi-region-cloudtrail-enabled\n      Source:\n        Owner: AWS\n        SourceIdentifier: MULTI_REGION_CLOUD_TRAIL_ENABLED\n    Type: AWS::Config::ConfigRule\n  NoUnrestrictedRouteToIgw:\n    Properties:\n      ConfigRuleName: no-unrestricted-route-to-igw\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::EC2::RouteTable\n      Source:\n        Owner: AWS\n        SourceIdentifier: NO_UNRESTRICTED_ROUTE_TO_IGW\n    Type: AWS::Config::ConfigRule\n  OpensearchAuditLoggingEnabled:\n    Properties:\n      ConfigRuleName: opensearch-audit-logging-enabled\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::OpenSearch::Domain\n      Source:\n        Owner: AWS\n        SourceIdentifier: OPENSEARCH_AUDIT_LOGGING_ENABLED\n    Type: AWS::Config::ConfigRule\n  OpensearchEncryptedAtRest:\n    Properties:\n      ConfigRuleName: opensearch-encrypted-at-rest\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::OpenSearch::Domain\n      Source:\n        Owner: AWS\n        SourceIdentifier: OPENSEARCH_ENCRYPTED_AT_REST\n    Type: AWS::Config::ConfigRule\n  OpensearchHttpsRequired:\n    Properties:\n      ConfigRuleName: opensearch-https-required\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::OpenSearch::Domain\n      Source:\n        Owner: AWS\n        SourceIdentifier: OPENSEARCH_HTTPS_REQUIRED\n    Type: AWS::Config::ConfigRule\n  OpensearchInVpcOnly:\n    Properties:\n      ConfigRuleName: opensearch-in-vpc-only\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::OpenSearch::Domain\n      Source:\n        Owner: AWS\n        SourceIdentifier: OPENSEARCH_IN_VPC_ONLY\n    Type: AWS::Config::ConfigRule\n  OpensearchLogsToCloudwatch:\n    Properties:\n      ConfigRuleName: opensearch-logs-to-cloudwatch\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::OpenSearch::Domain\n      Source:\n        Owner: AWS\n        SourceIdentifier: OPENSEARCH_LOGS_TO_CLOUDWATCH\n    Type: AWS::Config::ConfigRule\n  OpensearchNodeToNodeEncryptionCheck:\n    Properties:\n      ConfigRuleName: opensearch-node-to-node-encryption-check\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::OpenSearch::Domain\n      Source:\n        Owner: AWS\n        SourceIdentifier: OPENSEARCH_NODE_TO_NODE_ENCRYPTION_CHECK\n    Type: AWS::Config::ConfigRule\n  RdsAutomaticMinorVersionUpgradeEnabled:\n    Properties:\n      ConfigRuleName: rds-automatic-minor-version-upgrade-enabled\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::RDS::DBInstance\n      Source:\n        Owner: AWS\n        SourceIdentifier: RDS_AUTOMATIC_MINOR_VERSION_UPGRADE_ENABLED\n    Type: AWS::Config::ConfigRule\n  RdsInstancePublicAccessCheck:\n    Properties:\n      ConfigRuleName: rds-instance-public-access-check\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::RDS::DBInstance\n      Source:\n        Owner: AWS\n        SourceIdentifier: RDS_INSTANCE_PUBLIC_ACCESS_CHECK\n    Type: AWS::Config::ConfigRule\n  RdsLoggingEnabled:\n    Properties:\n      ConfigRuleName: rds-logging-enabled\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::RDS::DBInstance\n      Source:\n        Owner: AWS\n        SourceIdentifier: RDS_LOGGING_ENABLED\n    Type: AWS::Config::ConfigRule\n  RdsSnapshotEncrypted:\n    Properties:\n      ConfigRuleName: rds-snapshot-encrypted\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::RDS::DBSnapshot\n        - AWS::RDS::DBClusterSnapshot\n      Source:\n        Owner: AWS\n        SourceIdentifier: RDS_SNAPSHOT_ENCRYPTED\n    Type: AWS::Config::ConfigRule\n  RdsSnapshotsPublicProhibited:\n    Properties:\n      ConfigRuleName: rds-snapshots-public-prohibited\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::RDS::DBSnapshot\n        - AWS::RDS::DBClusterSnapshot\n      Source:\n        Owner: AWS\n        SourceIdentifier: RDS_SNAPSHOTS_PUBLIC_PROHIBITED\n    Type: AWS::Config::ConfigRule\n  RdsStorageEncrypted:\n    Properties:\n      ConfigRuleName: rds-storage-encrypted\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::RDS::DBInstance\n      Source:\n        Owner: AWS\n        SourceIdentifier: RDS_STORAGE_ENCRYPTED\n    Type: AWS::Config::ConfigRule\n  RedshiftClusterConfigurationCheck:\n    Properties:\n      ConfigRuleName: redshift-cluster-configuration-check\n      InputParameters:\n        clusterDbEncrypted:\n          Fn::If:\n          - redshiftClusterConfigurationCheckParamClusterDbEncrypted\n          - Ref: RedshiftClusterConfigurationCheckParamClusterDbEncrypted\n          - Ref: AWS::NoValue\n        loggingEnabled:\n          Fn::If:\n          - redshiftClusterConfigurationCheckParamLoggingEnabled\n          - Ref: RedshiftClusterConfigurationCheckParamLoggingEnabled\n          - Ref: AWS::NoValue\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::Redshift::Cluster\n      Source:\n        Owner: AWS\n        SourceIdentifier: REDSHIFT_CLUSTER_CONFIGURATION_CHECK\n    Type: AWS::Config::ConfigRule\n  RedshiftClusterKmsEnabled:\n    Properties:\n      ConfigRuleName: redshift-cluster-kms-enabled\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::Redshift::Cluster\n      Source:\n        Owner: AWS\n        SourceIdentifier: REDSHIFT_CLUSTER_KMS_ENABLED\n    Type: AWS::Config::ConfigRule\n  RedshiftClusterMaintenancesettingsCheck:\n    Properties:\n      ConfigRuleName: redshift-cluster-maintenancesettings-check\n      InputParameters:\n        allowVersionUpgrade:\n          Fn::If:\n          - redshiftClusterMaintenancesettingsCheckParamAllowVersionUpgrade\n          - Ref: RedshiftClusterMaintenancesettingsCheckParamAllowVersionUpgrade\n          - Ref: AWS::NoValue\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::Redshift::Cluster\n      Source:\n        Owner: AWS\n        SourceIdentifier: REDSHIFT_CLUSTER_MAINTENANCESETTINGS_CHECK\n    Type: AWS::Config::ConfigRule\n  RedshiftClusterPublicAccessCheck:\n    Properties:\n      ConfigRuleName: redshift-cluster-public-access-check\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::Redshift::Cluster\n      Source:\n        Owner: AWS\n        SourceIdentifier: REDSHIFT_CLUSTER_PUBLIC_ACCESS_CHECK\n    Type: AWS::Config::ConfigRule\n  RedshiftEnhancedVpcRoutingEnabled:\n    Properties:\n      ConfigRuleName: redshift-enhanced-vpc-routing-enabled\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::Redshift::Cluster\n      Source:\n        Owner: AWS\n        SourceIdentifier: REDSHIFT_ENHANCED_VPC_ROUTING_ENABLED\n    Type: AWS::Config::ConfigRule\n  RedshiftRequireTlsSsl:\n    Properties:\n      ConfigRuleName: redshift-require-tls-ssl\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::Redshift::Cluster\n      Source:\n        Owner: AWS\n        SourceIdentifier: REDSHIFT_REQUIRE_TLS_SSL\n    Type: AWS::Config::ConfigRule\n  RestrictedIncomingTraffic:\n    Properties:\n      ConfigRuleName: restricted-common-ports\n      InputParameters:\n        blockedPort1:\n          Fn::If:\n          - restrictedIncomingTrafficParamBlockedPort1\n          - Ref: RestrictedIncomingTrafficParamBlockedPort1\n          - Ref: AWS::NoValue\n        blockedPort2:\n          Fn::If:\n          - restrictedIncomingTrafficParamBlockedPort2\n          - Ref: RestrictedIncomingTrafficParamBlockedPort2\n          - Ref: AWS::NoValue\n        blockedPort3:\n          Fn::If:\n          - restrictedIncomingTrafficParamBlockedPort3\n          - Ref: RestrictedIncomingTrafficParamBlockedPort3\n          - Ref: AWS::NoValue\n        blockedPort4:\n          Fn::If:\n          - restrictedIncomingTrafficParamBlockedPort4\n          - Ref: RestrictedIncomingTrafficParamBlockedPort4\n          - Ref: AWS::NoValue\n        blockedPort5:\n          Fn::If:\n          - restrictedIncomingTrafficParamBlockedPort5\n          - Ref: RestrictedIncomingTrafficParamBlockedPort5\n          - Ref: AWS::NoValue\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::EC2::SecurityGroup\n      Source:\n        Owner: AWS\n        SourceIdentifier: RESTRICTED_INCOMING_TRAFFIC\n    Type: AWS::Config::ConfigRule\n  RootAccountHardwareMfaEnabled:\n    Properties:\n      ConfigRuleName: root-account-hardware-mfa-enabled\n      Source:\n        Owner: AWS\n        SourceIdentifier: ROOT_ACCOUNT_HARDWARE_MFA_ENABLED\n    Type: AWS::Config::ConfigRule\n  RootAccountMfaEnabled:\n    Properties:\n      ConfigRuleName: root-account-mfa-enabled\n      Source:\n        Owner: AWS\n        SourceIdentifier: ROOT_ACCOUNT_MFA_ENABLED\n    Type: AWS::Config::ConfigRule\n  S3AccountLevelPublicAccessBlocksPeriodic:\n    Properties:\n      ConfigRuleName: s3-account-level-public-access-blocks-periodic\n      InputParameters:\n        BlockPublicAcls:\n          Fn::If:\n          - s3AccountLevelPublicAccessBlocksPeriodicParamBlockPublicAcls\n          - Ref: S3AccountLevelPublicAccessBlocksPeriodicParamBlockPublicAcls\n          - Ref: AWS::NoValue\n        BlockPublicPolicy:\n          Fn::If:\n          - s3AccountLevelPublicAccessBlocksPeriodicParamBlockPublicPolicy\n          - Ref: S3AccountLevelPublicAccessBlocksPeriodicParamBlockPublicPolicy\n          - Ref: AWS::NoValue\n        IgnorePublicAcls:\n          Fn::If:\n          - s3AccountLevelPublicAccessBlocksPeriodicParamIgnorePublicAcls\n          - Ref: S3AccountLevelPublicAccessBlocksPeriodicParamIgnorePublicAcls\n          - Ref: AWS::NoValue\n        RestrictPublicBuckets:\n          Fn::If:\n          - s3AccountLevelPublicAccessBlocksPeriodicParamRestrictPublicBuckets\n          - Ref: S3AccountLevelPublicAccessBlocksPeriodicParamRestrictPublicBuckets\n          - Ref: AWS::NoValue\n      Source:\n        Owner: AWS\n        SourceIdentifier: S3_ACCOUNT_LEVEL_PUBLIC_ACCESS_BLOCKS_PERIODIC\n    Type: AWS::Config::ConfigRule\n  S3BucketLevelPublicAccessProhibited:\n    Properties:\n      ConfigRuleName: s3-bucket-level-public-access-prohibited\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::S3::Bucket\n      Source:\n        Owner: AWS\n        SourceIdentifier: S3_BUCKET_LEVEL_PUBLIC_ACCESS_PROHIBITED\n    Type: AWS::Config::ConfigRule\n  S3BucketLoggingEnabled:\n    Properties:\n      ConfigRuleName: s3-bucket-logging-enabled\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::S3::Bucket\n      Source:\n        Owner: AWS\n        SourceIdentifier: S3_BUCKET_LOGGING_ENABLED\n    Type: AWS::Config::ConfigRule\n  S3BucketPublicReadProhibited:\n    Properties:\n      ConfigRuleName: s3-bucket-public-read-prohibited\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::S3::Bucket\n      Source:\n        Owner: AWS\n        SourceIdentifier: S3_BUCKET_PUBLIC_READ_PROHIBITED\n    Type: AWS::Config::ConfigRule\n  S3BucketPublicWriteProhibited:\n    Properties:\n      ConfigRuleName: s3-bucket-public-write-prohibited\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::S3::Bucket\n      Source:\n        Owner: AWS\n        SourceIdentifier: S3_BUCKET_PUBLIC_WRITE_PROHIBITED\n    Type: AWS::Config::ConfigRule\n  S3BucketServerSideEncryptionEnabled:\n    Properties:\n      ConfigRuleName: s3-bucket-server-side-encryption-enabled\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::S3::Bucket\n      Source:\n        Owner: AWS\n        SourceIdentifier: S3_BUCKET_SERVER_SIDE_ENCRYPTION_ENABLED\n    Type: AWS::Config::ConfigRule\n  S3BucketSslRequestsOnly:\n    Properties:\n      ConfigRuleName: s3-bucket-ssl-requests-only\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::S3::Bucket\n      Source:\n        Owner: AWS\n        SourceIdentifier: S3_BUCKET_SSL_REQUESTS_ONLY\n    Type: AWS::Config::ConfigRule\n  S3BucketVersioningEnabled:\n    Properties:\n      ConfigRuleName: s3-bucket-versioning-enabled\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::S3::Bucket\n      Source:\n        Owner: AWS\n        SourceIdentifier: S3_BUCKET_VERSIONING_ENABLED\n    Type: AWS::Config::ConfigRule\n  S3DefaultEncryptionKms:\n    Properties:\n      ConfigRuleName: s3-default-encryption-kms\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::S3::Bucket\n      Source:\n        Owner: AWS\n        SourceIdentifier: S3_DEFAULT_ENCRYPTION_KMS\n    Type: AWS::Config::ConfigRule\n  SagemakerEndpointConfigurationKmsKeyConfigured:\n    Properties:\n      ConfigRuleName: sagemaker-endpoint-configuration-kms-key-configured\n      Source:\n        Owner: AWS\n        SourceIdentifier: SAGEMAKER_ENDPOINT_CONFIGURATION_KMS_KEY_CONFIGURED\n    Type: AWS::Config::ConfigRule\n  SagemakerNotebookInstanceKmsKeyConfigured:\n    Properties:\n      ConfigRuleName: sagemaker-notebook-instance-kms-key-configured\n      Source:\n        Owner: AWS\n        SourceIdentifier: SAGEMAKER_NOTEBOOK_INSTANCE_KMS_KEY_CONFIGURED\n    Type: AWS::Config::ConfigRule\n  SagemakerNotebookNoDirectInternetAccess:\n    Properties:\n      ConfigRuleName: sagemaker-notebook-no-direct-internet-access\n      Source:\n        Owner: AWS\n        SourceIdentifier: SAGEMAKER_NOTEBOOK_NO_DIRECT_INTERNET_ACCESS\n    Type: AWS::Config::ConfigRule\n  SecretsmanagerRotationEnabledCheck:\n    Properties:\n      ConfigRuleName: secretsmanager-rotation-enabled-check\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::SecretsManager::Secret\n      Source:\n        Owner: AWS\n        SourceIdentifier: SECRETSMANAGER_ROTATION_ENABLED_CHECK\n    Type: AWS::Config::ConfigRule\n  SecretsmanagerScheduledRotationSuccessCheck:\n    Properties:\n      ConfigRuleName: secretsmanager-scheduled-rotation-success-check\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::SecretsManager::Secret\n      Source:\n        Owner: AWS\n        SourceIdentifier: SECRETSMANAGER_SCHEDULED_ROTATION_SUCCESS_CHECK\n    Type: AWS::Config::ConfigRule\n  SecretsmanagerSecretPeriodicRotation:\n    Properties:\n      ConfigRuleName: secretsmanager-secret-periodic-rotation\n      InputParameters:\n        maxDaysSinceRotation:\n          Fn::If:\n          - secretsmanagerSecretPeriodicRotationParamMaxDaysSinceRotation\n          - Ref: SecretsmanagerSecretPeriodicRotationParamMaxDaysSinceRotation\n          - Ref: AWS::NoValue\n      Source:\n        Owner: AWS\n        SourceIdentifier: SECRETSMANAGER_SECRET_PERIODIC_ROTATION\n    Type: AWS::Config::ConfigRule\n  SecretsmanagerSecretUnused:\n    Properties:\n      ConfigRuleName: secretsmanager-secret-unused\n      InputParameters:\n        unusedForDays:\n          Fn::If:\n          - secretsmanagerSecretUnusedParamUnusedForDays\n          - Ref: SecretsmanagerSecretUnusedParamUnusedForDays\n          - Ref: AWS::NoValue\n      Source:\n        Owner: AWS\n        SourceIdentifier: SECRETSMANAGER_SECRET_UNUSED\n    Type: AWS::Config::ConfigRule\n  SecretsmanagerSecretUnused2:\n    Properties:\n      ConfigRuleName: secretsmanager-secret-unused-2\n      Source:\n        Owner: AWS\n        SourceIdentifier: SECRETSMANAGER_SECRET_UNUSED\n    Type: AWS::Config::ConfigRule\n  SecretsmanagerUsingCmk:\n    Properties:\n      ConfigRuleName: secretsmanager-using-cmk\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::SecretsManager::Secret\n      Source:\n        Owner: AWS\n        SourceIdentifier: SECRETSMANAGER_USING_CMK\n    Type: AWS::Config::ConfigRule\n  SecurityhubEnabled:\n    Properties:\n      ConfigRuleName: securityhub-enabled\n      Source:\n        Owner: AWS\n        SourceIdentifier: SECURITYHUB_ENABLED\n    Type: AWS::Config::ConfigRule\n  SnsEncryptedKms:\n    Properties:\n      ConfigRuleName: sns-encrypted-kms\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::SNS::Topic\n      Source:\n        Owner: AWS\n        SourceIdentifier: SNS_ENCRYPTED_KMS\n    Type: AWS::Config::ConfigRule\n  SsmDocumentNotPublic:\n    Properties:\n      ConfigRuleName: ssm-document-not-public\n      Source:\n        Owner: AWS\n        SourceIdentifier: SSM_DOCUMENT_NOT_PUBLIC\n    Type: AWS::Config::ConfigRule\n  SubnetAutoAssignPublicIpDisabled:\n    Properties:\n      ConfigRuleName: subnet-auto-assign-public-ip-disabled\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::EC2::Subnet\n      Source:\n        Owner: AWS\n        SourceIdentifier: SUBNET_AUTO_ASSIGN_PUBLIC_IP_DISABLED\n    Type: AWS::Config::ConfigRule\n  VpcDefaultSecurityGroupClosed:\n    Properties:\n      ConfigRuleName: vpc-default-security-group-closed\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::EC2::SecurityGroup\n      Source:\n        Owner: AWS\n        SourceIdentifier: VPC_DEFAULT_SECURITY_GROUP_CLOSED\n    Type: AWS::Config::ConfigRule\n  VpcFlowLogsEnabled:\n    Properties:\n      ConfigRuleName: vpc-flow-logs-enabled\n      Source:\n        Owner: AWS\n        SourceIdentifier: VPC_FLOW_LOGS_ENABLED\n    Type: AWS::Config::ConfigRule\n  VpcNetworkAclUnusedCheck:\n    Properties:\n      ConfigRuleName: vpc-network-acl-unused-check\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::EC2::NetworkAcl\n      Source:\n        Owner: AWS\n        SourceIdentifier: VPC_NETWORK_ACL_UNUSED_CHECK\n    Type: AWS::Config::ConfigRule\n  VpcSgOpenOnlyToAuthorizedPorts:\n    Properties:\n      ConfigRuleName: vpc-sg-open-only-to-authorized-ports\n      InputParameters:\n        authorizedTcpPorts:\n          Fn::If:\n          - vpcSgOpenOnlyToAuthorizedPortsParamAuthorizedTcpPorts\n          - Ref: VpcSgOpenOnlyToAuthorizedPortsParamAuthorizedTcpPorts\n          - Ref: AWS::NoValue\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::EC2::SecurityGroup\n      Source:\n        Owner: AWS\n        SourceIdentifier: VPC_SG_OPEN_ONLY_TO_AUTHORIZED_PORTS\n    Type: AWS::Config::ConfigRule\n  WafRegionalRuleNotEmpty:\n    Properties:\n      ConfigRuleName: waf-regional-rule-not-empty\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::WAFRegional::Rule\n      Source:\n        Owner: AWS\n        SourceIdentifier: WAF_REGIONAL_RULE_NOT_EMPTY\n    Type: AWS::Config::ConfigRule\n  WafRegionalRulegroupNotEmpty:\n    Properties:\n      ConfigRuleName: waf-regional-rulegroup-not-empty\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::WAFRegional::RuleGroup\n      Source:\n        Owner: AWS\n        SourceIdentifier: WAF_REGIONAL_RULEGROUP_NOT_EMPTY\n    Type: AWS::Config::ConfigRule\n  WafRegionalWebaclNotEmpty:\n    Properties:\n      ConfigRuleName: waf-regional-webacl-not-empty\n      Scope:\n        ComplianceResourceTypes:\n        - AWS::WAFRegional::WebACL\n      Source:\n        Owner: AWS\n        SourceIdentifier: WAF_REGIONAL_WEBACL_NOT_EMPTY\n    Type: AWS::Config::ConfigRule\n  Wafv2LoggingEnabled:\n    Properties:\n      ConfigRuleName: wafv2-logging-enabled\n      Source:\n        Owner: AWS\n        SourceIdentifier: WAFV2_LOGGING_ENABLED\n    Type: AWS::Config::ConfigRule\nConditions:\n  accessKeysRotatedParamMaxAccessKeyAge:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: AccessKeysRotatedParamMaxAccessKeyAge\n  acmCertificateExpirationCheckParamDaysToExpiration:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: AcmCertificateExpirationCheckParamDaysToExpiration\n  cloudwatchAlarmActionCheckParamAlarmActionRequired:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: CloudwatchAlarmActionCheckParamAlarmActionRequired\n  cloudwatchAlarmActionCheckParamInsufficientDataActionRequired:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: CloudwatchAlarmActionCheckParamInsufficientDataActionRequired\n  cloudwatchAlarmActionCheckParamOkActionRequired:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: CloudwatchAlarmActionCheckParamOkActionRequired\n  iamCustomerPolicyBlockedKmsActionsParamBlockedActionsPatterns:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: IamCustomerPolicyBlockedKmsActionsParamBlockedActionsPatterns\n  iamPasswordPolicyParamMaxPasswordAge:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: IamPasswordPolicyParamMaxPasswordAge\n  iamPasswordPolicyParamMinimumPasswordLength:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: IamPasswordPolicyParamMinimumPasswordLength\n  iamPasswordPolicyParamPasswordReusePrevention:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: IamPasswordPolicyParamPasswordReusePrevention\n  iamPasswordPolicyParamRequireLowercaseCharacters:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: IamPasswordPolicyParamRequireLowercaseCharacters\n  iamPasswordPolicyParamRequireNumbers:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: IamPasswordPolicyParamRequireNumbers\n  iamPasswordPolicyParamRequireSymbols:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: IamPasswordPolicyParamRequireSymbols\n  iamPasswordPolicyParamRequireUppercaseCharacters:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: IamPasswordPolicyParamRequireUppercaseCharacters\n  iamUserUnusedCredentialsCheckParamMaxCredentialUsageAge:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: IamUserUnusedCredentialsCheckParamMaxCredentialUsageAge\n  redshiftClusterConfigurationCheckParamClusterDbEncrypted:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: RedshiftClusterConfigurationCheckParamClusterDbEncrypted\n  redshiftClusterConfigurationCheckParamLoggingEnabled:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: RedshiftClusterConfigurationCheckParamLoggingEnabled\n  redshiftClusterMaintenancesettingsCheckParamAllowVersionUpgrade:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: RedshiftClusterMaintenancesettingsCheckParamAllowVersionUpgrade\n  restrictedIncomingTrafficParamBlockedPort1:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: RestrictedIncomingTrafficParamBlockedPort1\n  restrictedIncomingTrafficParamBlockedPort2:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: RestrictedIncomingTrafficParamBlockedPort2\n  restrictedIncomingTrafficParamBlockedPort3:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: RestrictedIncomingTrafficParamBlockedPort3\n  restrictedIncomingTrafficParamBlockedPort4:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: RestrictedIncomingTrafficParamBlockedPort4\n  restrictedIncomingTrafficParamBlockedPort5:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: RestrictedIncomingTrafficParamBlockedPort5\n  s3AccountLevelPublicAccessBlocksPeriodicParamBlockPublicAcls:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: S3AccountLevelPublicAccessBlocksPeriodicParamBlockPublicAcls\n  s3AccountLevelPublicAccessBlocksPeriodicParamBlockPublicPolicy:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: S3AccountLevelPublicAccessBlocksPeriodicParamBlockPublicPolicy\n  s3AccountLevelPublicAccessBlocksPeriodicParamIgnorePublicAcls:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: S3AccountLevelPublicAccessBlocksPeriodicParamIgnorePublicAcls\n  s3AccountLevelPublicAccessBlocksPeriodicParamRestrictPublicBuckets:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: S3AccountLevelPublicAccessBlocksPeriodicParamRestrictPublicBuckets\n  secretsmanagerSecretPeriodicRotationParamMaxDaysSinceRotation:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: SecretsmanagerSecretPeriodicRotationParamMaxDaysSinceRotation\n  secretsmanagerSecretUnusedParamUnusedForDays:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: SecretsmanagerSecretUnusedParamUnusedForDays\n  vpcSgOpenOnlyToAuthorizedPortsParamAuthorizedTcpPorts:\n    Fn::Not:\n    - Fn::Equals:\n      - ''\n      - Ref: VpcSgOpenOnlyToAuthorizedPortsParamAuthorizedTcpPorts\n",
            "response_body_base64": "IyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIwojCiMgICBDb25mb3JtYW5jZSBQYWNrOgojICAgICBPcGVyYXRpb25hbCBCZXN0IFByYWN0aWNlcyBmb3IgQVdTIFdlbGwgQXJjaGl0ZWN0ZWQgKFdBKSBTZWN1cml0eSBQaWxsYXIKIwojICAgVGhpcyBjb25mb3JtYW5jZSBwYWNrIGhlbHBzIHZlcmlmeSBjb21wbGlhbmNlIHdpdGggdGhlIEFXUyBXQSBTZWN1cml0eSBQaWxsYXIKIyAgIChodHRwczovL2RvY3MuYXdzLmFtYXpvbi5jb20vd2VsbGFyY2hpdGVjdGVkL2xhdGVzdC9zZWN1cml0eS1waWxsYXIvd2VsY29tZS5odG1sKQojICAgcmVxdWlyZW1lbnRzLgojCiMgICBUaGlzIENvbmZvcm1hbmNlIFBhY2sgaGFzIGJlZW4gZGVzaWduZWQgZm9yIGNvbXBhdGliaWxpdHkgd2l0aCB0aGUgbWFqb3JpdHkgb2YgQVdTCiMgICByZWdpb25zIGFuZCB0byBub3QgcmVxdWlyZSBzZXR0aW5nIG9mIGFueSBQYXJhbWV0ZXJzLiBBZGRpdGlvbmFsIG1hbmFnZWQgcnVsZXMgdGhhdAojICAgcmVxdWlyZSBwYXJhbWV0ZXJzIHRvIGJlIHNldCBmb3IgeW91ciBlbnZpcm9ubWVudCBhbmQvb3IgZm9yIHlvdXIgc3BlY2lmaWMgcmVnaW9uIGNhbgojICAgYmUgZm91bmQgYXQgaHR0cHM6Ly9kb2NzLmF3cy5hbWF6b24uY29tL2NvbmZpZy9sYXRlc3QvZGV2ZWxvcGVyZ3VpZGUvbWFuYWdlZC1ydWxlcy1ieS1hd3MtY29uZmlnLmh0bWwKIwojICAgU2VlIFBhcmFtZXRlcnMgc2VjdGlvbiBmb3IgbmFtZXMgYW5kIGRlc2NyaXB0aW9ucyBvZiByZXF1aXJlZCBwYXJhbWV0ZXJzLgojCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKClBhcmFtZXRlcnM6CiAgQWNjZXNzS2V5c1JvdGF0ZWRQYXJhbU1heEFjY2Vzc0tleUFnZToKICAgIERlZmF1bHQ6ICc5MCcKICAgIFR5cGU6IFN0cmluZwogIEFjbUNlcnRpZmljYXRlRXhwaXJhdGlvbkNoZWNrUGFyYW1EYXlzVG9FeHBpcmF0aW9uOgogICAgRGVmYXVsdDogJzkwJwogICAgVHlwZTogU3RyaW5nCiAgQ2xvdWR3YXRjaEFsYXJtQWN0aW9uQ2hlY2tQYXJhbUFsYXJtQWN0aW9uUmVxdWlyZWQ6CiAgICBEZWZhdWx0OiAndHJ1ZScKICAgIFR5cGU6IFN0cmluZwogIENsb3Vkd2F0Y2hBbGFybUFjdGlvbkNoZWNrUGFyYW1JbnN1ZmZpY2llbnREYXRhQWN0aW9uUmVxdWlyZWQ6CiAgICBEZWZhdWx0OiAndHJ1ZScKICAgIFR5cGU6IFN0cmluZwogIENsb3Vkd2F0Y2hBbGFybUFjdGlvbkNoZWNrUGFyYW1Pa0FjdGlvblJlcXVpcmVkOgogICAgRGVmYXVsdDogJ3RydWUnCiAgICBUeXBlOiBTdHJpbmcKICBJYW1DdXN0b21lclBvbGljeUJsb2NrZWRLbXNBY3Rpb25zUGFyYW1CbG9ja2VkQWN0aW9uc1BhdHRlcm5zOgogICAgRGVmYXVsdDoga21zOkRlY3J5cHQsa21zOlJlRW5jcnlwdEZyb20KICAgIFR5cGU6IFN0cmluZwogIElhbVBhc3N3b3JkUG9saWN5UGFyYW1NYXhQYXNzd29yZEFnZToKICAgIERlZmF1bHQ6ICc5MCcKICAgIFR5cGU6IFN0cmluZwogIElhbVBhc3N3b3JkUG9saWN5UGFyYW1NaW5pbXVtUGFzc3dvcmRMZW5ndGg6CiAgICBEZWZhdWx0OiAnMTQnCiAgICBUeXBlOiBTdHJpbmcKICBJYW1QYXNzd29yZFBvbGljeVBhcmFtUGFzc3dvcmRSZXVzZVByZXZlbnRpb246CiAgICBEZWZhdWx0OiAnMjQnCiAgICBUeXBlOiBTdHJpbmcKICBJYW1QYXNzd29yZFBvbGljeVBhcmFtUmVxdWlyZUxvd2VyY2FzZUNoYXJhY3RlcnM6CiAgICBEZWZhdWx0OiAndHJ1ZScKICAgIFR5cGU6IFN0cmluZwogIElhbVBhc3N3b3JkUG9saWN5UGFyYW1SZXF1aXJlTnVtYmVyczoKICAgIERlZmF1bHQ6ICd0cnVlJwogICAgVHlwZTogU3RyaW5nCiAgSWFtUGFzc3dvcmRQb2xpY3lQYXJhbVJlcXVpcmVTeW1ib2xzOgogICAgRGVmYXVsdDogJ3RydWUnCiAgICBUeXBlOiBTdHJpbmcKICBJYW1QYXNzd29yZFBvbGljeVBhcmFtUmVxdWlyZVVwcGVyY2FzZUNoYXJhY3RlcnM6CiAgICBEZWZhdWx0OiAndHJ1ZScKICAgIFR5cGU6IFN0cmluZwogIElhbVVzZXJVbnVzZWRDcmVkZW50aWFsc0NoZWNrUGFyYW1NYXhDcmVkZW50aWFsVXNhZ2VBZ2U6CiAgICBEZWZhdWx0OiAnOTAnCiAgICBUeXBlOiBTdHJpbmcKICBSZWRzaGlmdENsdXN0ZXJDb25maWd1cmF0aW9uQ2hlY2tQYXJhbUNsdXN0ZXJEYkVuY3J5cHRlZDoKICAgIERlZmF1bHQ6ICd0cnVlJwogICAgVHlwZTogU3RyaW5nCiAgUmVkc2hpZnRDbHVzdGVyQ29uZmlndXJhdGlvbkNoZWNrUGFyYW1Mb2dnaW5nRW5hYmxlZDoKICAgIERlZmF1bHQ6ICd0cnVlJwogICAgVHlwZTogU3RyaW5nCiAgUmVkc2hpZnRDbHVzdGVyTWFpbnRlbmFuY2VzZXR0aW5nc0NoZWNrUGFyYW1BbGxvd1ZlcnNpb25VcGdyYWRlOgogICAgRGVmYXVsdDogJ3RydWUnCiAgICBUeXBlOiBTdHJpbmcKICBSZXN0cmljdGVkSW5jb21pbmdUcmFmZmljUGFyYW1CbG9ja2VkUG9ydDE6CiAgICBEZWZhdWx0OiAnMjAnCiAgICBUeXBlOiBTdHJpbmcKICBSZXN0cmljdGVkSW5jb21pbmdUcmFmZmljUGFyYW1CbG9ja2VkUG9ydDI6CiAgICBEZWZhdWx0OiAnMjEnCiAgICBUeXBlOiBTdHJpbmcKICBSZXN0cmljdGVkSW5jb21pbmdUcmFmZmljUGFyYW1CbG9ja2VkUG9ydDM6CiAgICBEZWZhdWx0OiAnMzM4OScKICAgIFR5cGU6IFN0cmluZwogIFJlc3RyaWN0ZWRJbmNvbWluZ1RyYWZmaWNQYXJhbUJsb2NrZWRQb3J0NDoKICAgIERlZmF1bHQ6ICczMzA2JwogICAgVHlwZTogU3RyaW5nCiAgUmVzdHJpY3RlZEluY29taW5nVHJhZmZpY1BhcmFtQmxvY2tlZFBvcnQ1OgogICAgRGVmYXVsdDogJzQzMzMnCiAgICBUeXBlOiBTdHJpbmcKICBTM0FjY291bnRMZXZlbFB1YmxpY0FjY2Vzc0Jsb2Nrc1BlcmlvZGljUGFyYW1CbG9ja1B1YmxpY0FjbHM6CiAgICBEZWZhdWx0OiAndHJ1ZScKICAgIFR5cGU6IFN0cmluZwogIFMzQWNjb3VudExldmVsUHVibGljQWNjZXNzQmxvY2tzUGVyaW9kaWNQYXJhbUJsb2NrUHVibGljUG9saWN5OgogICAgRGVmYXVsdDogJ3RydWUnCiAgICBUeXBlOiBTdHJpbmcKICBTM0FjY291bnRMZXZlbFB1YmxpY0FjY2Vzc0Jsb2Nrc1BlcmlvZGljUGFyYW1JZ25vcmVQdWJsaWNBY2xzOgogICAgRGVmYXVsdDogJ3RydWUnCiAgICBUeXBlOiBTdHJpbmcKICBTM0FjY291bnRMZXZlbFB1YmxpY0FjY2Vzc0Jsb2Nrc1BlcmlvZGljUGFyYW1SZXN0cmljdFB1YmxpY0J1Y2tldHM6CiAgICBEZWZhdWx0OiAndHJ1ZScKICAgIFR5cGU6IFN0cmluZwogIFNlY3JldHNtYW5hZ2VyU2VjcmV0UGVyaW9kaWNSb3RhdGlvblBhcmFtTWF4RGF5c1NpbmNlUm90YXRpb246CiAgICBEZWZhdWx0OiAnOTAnCiAgICBUeXBlOiBTdHJpbmcKICBTZWNyZXRzbWFuYWdlclNlY3JldFVudXNlZFBhcmFtVW51c2VkRm9yRGF5czoKICAgIERlZmF1bHQ6ICc5MCcKICAgIFR5cGU6IFN0cmluZwogIFZwY1NnT3Blbk9ubHlUb0F1dGhvcml6ZWRQb3J0c1BhcmFtQXV0aG9yaXplZFRjcFBvcnRzOgogICAgRGVmYXVsdDogJzQ0MycKICAgIFR5cGU6IFN0cmluZwpSZXNvdXJjZXM6CiAgQWNjZXNzS2V5c1JvdGF0ZWQ6CiAgICBQcm9wZXJ0aWVzOgogICAgICBDb25maWdSdWxlTmFtZTogYWNjZXNzLWtleXMtcm90YXRlZAogICAgICBJbnB1dFBhcmFtZXRlcnM6CiAgICAgICAgbWF4QWNjZXNzS2V5QWdlOgogICAgICAgICAgRm46OklmOgogICAgICAgICAgLSBhY2Nlc3NLZXlzUm90YXRlZFBhcmFtTWF4QWNjZXNzS2V5QWdlCiAgICAgICAgICAtIFJlZjogQWNjZXNzS2V5c1JvdGF0ZWRQYXJhbU1heEFjY2Vzc0tleUFnZQogICAgICAgICAgLSBSZWY6IEFXUzo6Tm9WYWx1ZQogICAgICBTb3VyY2U6CiAgICAgICAgT3duZXI6IEFXUwogICAgICAgIFNvdXJjZUlkZW50aWZpZXI6IEFDQ0VTU19LRVlTX1JPVEFURUQKICAgIFR5cGU6IEFXUzo6Q29uZmlnOjpDb25maWdSdWxlCiAgQWNjb3VudFBhcnRPZk9yZ2FuaXphdGlvbnM6CiAgICBQcm9wZXJ0aWVzOgogICAgICBDb25maWdSdWxlTmFtZTogYWNjb3VudC1wYXJ0LW9mLW9yZ2FuaXphdGlvbnMKICAgICAgU291cmNlOgogICAgICAgIE93bmVyOiBBV1MKICAgICAgICBTb3VyY2VJZGVudGlmaWVyOiBBQ0NPVU5UX1BBUlRfT0ZfT1JHQU5JWkFUSU9OUwogICAgVHlwZTogQVdTOjpDb25maWc6OkNvbmZpZ1J1bGUKICBBY21DZXJ0aWZpY2F0ZUV4cGlyYXRpb25DaGVjazoKICAgIFByb3BlcnRpZXM6CiAgICAgIENvbmZpZ1J1bGVOYW1lOiBhY20tY2VydGlmaWNhdGUtZXhwaXJhdGlvbi1jaGVjawogICAgICBJbnB1dFBhcmFtZXRlcnM6CiAgICAgICAgZGF5c1RvRXhwaXJhdGlvbjoKICAgICAgICAgIEZuOjpJZjoKICAgICAgICAgIC0gYWNtQ2VydGlmaWNhdGVFeHBpcmF0aW9uQ2hlY2tQYXJhbURheXNUb0V4cGlyYXRpb24KICAgICAgICAgIC0gUmVmOiBBY21DZXJ0aWZpY2F0ZUV4cGlyYXRpb25DaGVja1BhcmFtRGF5c1RvRXhwaXJhdGlvbgogICAgICAgICAgLSBSZWY6IEFXUzo6Tm9WYWx1ZQogICAgICBTY29wZToKICAgICAgICBDb21wbGlhbmNlUmVzb3VyY2VUeXBlczoKICAgICAgICAtIEFXUzo6QUNNOjpDZXJ0aWZpY2F0ZQogICAgICBTb3VyY2U6CiAgICAgICAgT3duZXI6IEFXUwogICAgICAgIFNvdXJjZUlkZW50aWZpZXI6IEFDTV9DRVJUSUZJQ0FURV9FWFBJUkFUSU9OX0NIRUNLCiAgICBUeXBlOiBBV1M6OkNvbmZpZzo6Q29uZmlnUnVsZQogIEFsYkh0dHBEcm9wSW52YWxpZEhlYWRlckVuYWJsZWQ6CiAgICBQcm9wZXJ0aWVzOgogICAgICBDb25maWdSdWxlTmFtZTogYWxiLWh0dHAtZHJvcC1pbnZhbGlkLWhlYWRlci1lbmFibGVkCiAgICAgIFNjb3BlOgogICAgICAgIENvbXBsaWFuY2VSZXNvdXJjZVR5cGVzOgogICAgICAgIC0gQVdTOjpFbGFzdGljTG9hZEJhbGFuY2luZ1YyOjpMb2FkQmFsYW5jZXIKICAgICAgU291cmNlOgogICAgICAgIE93bmVyOiBBV1MKICAgICAgICBTb3VyY2VJZGVudGlmaWVyOiBBTEJfSFRUUF9EUk9QX0lOVkFMSURfSEVBREVSX0VOQUJMRUQKICAgIFR5cGU6IEFXUzo6Q29uZmlnOjpDb25maWdSdWxlCiAgQWxiSHR0cFRvSHR0cHNSZWRpcmVjdGlvbkNoZWNrOgogICAgUHJvcGVydGllczoKICAgICAgQ29uZmlnUnVsZU5hbWU6IGFsYi1odHRwLXRvLWh0dHBzLXJlZGlyZWN0aW9uLWNoZWNrCiAgICAgIFNvdXJjZToKICAgICAgICBPd25lcjogQVdTCiAgICAgICAgU291cmNlSWRlbnRpZmllcjogQUxCX0hUVFBfVE9fSFRUUFNfUkVESVJFQ1RJT05fQ0hFQ0sKICAgIFR5cGU6IEFXUzo6Q29uZmlnOjpDb25maWdSdWxlCiAgQWxiV2FmRW5hYmxlZDoKICAgIFByb3BlcnRpZXM6CiAgICAgIENvbmZpZ1J1bGVOYW1lOiBhbGItd2FmLWVuYWJsZWQKICAgICAgU2NvcGU6CiAgICAgICAgQ29tcGxpYW5jZVJlc291cmNlVHlwZXM6CiAgICAgICAgLSBBV1M6OkVsYXN0aWNMb2FkQmFsYW5jaW5nVjI6OkxvYWRCYWxhbmNlcgogICAgICBTb3VyY2U6CiAgICAgICAgT3duZXI6IEFXUwogICAgICAgIFNvdXJjZUlkZW50aWZpZXI6IEFMQl9XQUZfRU5BQkxFRAogICAgVHlwZTogQVdTOjpDb25maWc6OkNvbmZpZ1J1bGUKICBBcGlHd0Fzc29jaWF0ZWRXaXRoV2FmOgogICAgUHJvcGVydGllczoKICAgICAgQ29uZmlnUnVsZU5hbWU6IGFwaS1ndy1hc3NvY2lhdGVkLXdpdGgtd2FmCiAgICAgIFNjb3BlOgogICAgICAgIENvbXBsaWFuY2VSZXNvdXJjZVR5cGVzOgogICAgICAgIC0gQVdTOjpBcGlHYXRld2F5OjpTdGFnZQogICAgICBTb3VyY2U6CiAgICAgICAgT3duZXI6IEFXUwogICAgICAgIFNvdXJjZUlkZW50aWZpZXI6IEFQSV9HV19BU1NPQ0lBVEVEX1dJVEhfV0FGCiAgICBUeXBlOiBBV1M6OkNvbmZpZzo6Q29uZmlnUnVsZQogIEFwaUd3Q2FjaGVFbmFibGVkQW5kRW5jcnlwdGVkOgogICAgUHJvcGVydGllczoKICAgICAgQ29uZmlnUnVsZU5hbWU6IGFwaS1ndy1jYWNoZS1lbmFibGVkLWFuZC1lbmNyeXB0ZWQKICAgICAgU2NvcGU6CiAgICAgICAgQ29tcGxpYW5jZVJlc291cmNlVHlwZXM6CiAgICAgICAgLSBBV1M6OkFwaUdhdGV3YXk6OlN0YWdlCiAgICAgIFNvdXJjZToKICAgICAgICBPd25lcjogQVdTCiAgICAgICAgU291cmNlSWRlbnRpZmllcjogQVBJX0dXX0NBQ0hFX0VOQUJMRURfQU5EX0VOQ1JZUFRFRAogICAgVHlwZTogQVdTOjpDb25maWc6OkNvbmZpZ1J1bGUKICBBcGlHd0V4ZWN1dGlvbkxvZ2dpbmdFbmFibGVkOgogICAgUHJvcGVydGllczoKICAgICAgQ29uZmlnUnVsZU5hbWU6IGFwaS1ndy1leGVjdXRpb24tbG9nZ2luZy1lbmFibGVkCiAgICAgIFNjb3BlOgogICAgICAgIENvbXBsaWFuY2VSZXNvdXJjZVR5cGVzOgogICAgICAgIC0gQVdTOjpBcGlHYXRld2F5OjpTdGFnZQogICAgICAgIC0gQVdTOjpBcGlHYXRld2F5VjI6OlN0YWdlCiAgICAgIFNvdXJjZToKICAgICAgICBPd25lcjogQVdTCiAgICAgICAgU291cmNlSWRlbnRpZmllcjogQVBJX0dXX0VYRUNVVElPTl9MT0dHSU5HX0VOQUJMRUQKICAgIFR5cGU6IEFXUzo6Q29uZmlnOjpDb25maWdSdWxlCiAgQXBpR3dTc2xFbmFibGVkOgogICAgUHJvcGVydGllczoKICAgICAgQ29uZmlnUnVsZU5hbWU6IGFwaS1ndy1zc2wtZW5hYmxlZAogICAgICBTY29wZToKICAgICAgICBDb21wbGlhbmNlUmVzb3VyY2VUeXBlczoKICAgICAgICAtIEFXUzo6QXBpR2F0ZXdheTo6U3RhZ2UKICAgICAgU291cmNlOgogICAgICAgIE93bmVyOiBBV1MKICAgICAgICBTb3VyY2VJZGVudGlmaWVyOiBBUElfR1dfU1NMX0VOQUJMRUQKICAgIFR5cGU6IEFXUzo6Q29uZmlnOjpDb25maWdSdWxlCiAgQXV0b3NjYWxpbmdMYXVuY2hDb25maWdQdWJsaWNJcERpc2FibGVkOgogICAgUHJvcGVydGllczoKICAgICAgQ29uZmlnUnVsZU5hbWU6IGF1dG9zY2FsaW5nLWxhdW5jaC1jb25maWctcHVibGljLWlwLWRpc2FibGVkCiAgICAgIFNjb3BlOgogICAgICAgIENvbXBsaWFuY2VSZXNvdXJjZVR5cGVzOgogICAgICAgIC0gQVdTOjpBdXRvU2NhbGluZzo6TGF1bmNoQ29uZmlndXJhdGlvbgogICAgICBTb3VyY2U6CiAgICAgICAgT3duZXI6IEFXUwogICAgICAgIFNvdXJjZUlkZW50aWZpZXI6IEFVVE9TQ0FMSU5HX0xBVU5DSF9DT05GSUdfUFVCTElDX0lQX0RJU0FCTEVECiAgICBUeXBlOiBBV1M6OkNvbmZpZzo6Q29uZmlnUnVsZQogIEJhY2t1cFJlY292ZXJ5UG9pbnRFbmNyeXB0ZWQ6CiAgICBQcm9wZXJ0aWVzOgogICAgICBDb25maWdSdWxlTmFtZTogYmFja3VwLXJlY292ZXJ5LXBvaW50LWVuY3J5cHRlZAogICAgICBTY29wZToKICAgICAgICBDb21wbGlhbmNlUmVzb3VyY2VUeXBlczoKICAgICAgICAtIEFXUzo6QmFja3VwOjpSZWNvdmVyeVBvaW50CiAgICAgIFNvdXJjZToKICAgICAgICBPd25lcjogQVdTCiAgICAgICAgU291cmNlSWRlbnRpZmllcjogQkFDS1VQX1JFQ09WRVJZX1BPSU5UX0VOQ1JZUFRFRAogICAgVHlwZTogQVdTOjpDb25maWc6OkNvbmZpZ1J1bGUKICBDbG91ZFRyYWlsQ2xvdWRXYXRjaExvZ3NFbmFibGVkOgogICAgUHJvcGVydGllczoKICAgICAgQ29uZmlnUnVsZU5hbWU6IGNsb3VkLXRyYWlsLWNsb3VkLXdhdGNoLWxvZ3MtZW5hYmxlZAogICAgICBTb3VyY2U6CiAgICAgICAgT3duZXI6IEFXUwogICAgICAgIFNvdXJjZUlkZW50aWZpZXI6IENMT1VEX1RSQUlMX0NMT1VEX1dBVENIX0xPR1NfRU5BQkxFRAogICAgVHlwZTogQVdTOjpDb25maWc6OkNvbmZpZ1J1bGUKICBDbG91ZFRyYWlsRW5jcnlwdGlvbkVuYWJsZWQ6CiAgICBQcm9wZXJ0aWVzOgogICAgICBDb25maWdSdWxlTmFtZTogY2xvdWQtdHJhaWwtZW5jcnlwdGlvbi1lbmFibGVkCiAgICAgIFNvdXJjZToKICAgICAgICBPd25lcjogQVdTCiAgICAgICAgU291cmNlSWRlbnRpZmllcjogQ0xPVURfVFJBSUxfRU5DUllQVElPTl9FTkFCTEVECiAgICBUeXBlOiBBV1M6OkNvbmZpZzo6Q29uZmlnUnVsZQogIENsb3VkVHJhaWxMb2dGaWxlVmFsaWRhdGlvbkVuYWJsZWQ6CiAgICBQcm9wZXJ0aWVzOgogICAgICBDb25maWdSdWxlTmFtZTogY2xvdWQtdHJhaWwtbG9nLWZpbGUtdmFsaWRhdGlvbi1lbmFibGVkCiAgICAgIFNvdXJjZToKICAgICAgICBPd25lcjogQVdTCiAgICAgICAgU291cmNlSWRlbnRpZmllcjogQ0xPVURfVFJBSUxfTE9HX0ZJTEVfVkFMSURBVElPTl9FTkFCTEVECiAgICBUeXBlOiBBV1M6OkNvbmZpZzo6Q29uZmlnUnVsZQogIENsb3VkdHJhaWxTM0RhdGFldmVudHNFbmFibGVkOgogICAgUHJvcGVydGllczoKICAgICAgQ29uZmlnUnVsZU5hbWU6IGNsb3VkdHJhaWwtczMtZGF0YWV2ZW50cy1lbmFibGVkCiAgICAgIFNvdXJjZToKICAgICAgICBPd25lcjogQVdTCiAgICAgICAgU291cmNlSWRlbnRpZmllcjogQ0xPVURUUkFJTF9TM19EQVRBRVZFTlRTX0VOQUJMRUQKICAgIFR5cGU6IEFXUzo6Q29uZmlnOjpDb25maWdSdWxlCiAgQ2xvdWR0cmFpbFNlY3VyaXR5VHJhaWxFbmFibGVkOgogICAgUHJvcGVydGllczoKICAgICAgQ29uZmlnUnVsZU5hbWU6IGNsb3VkdHJhaWwtc2VjdXJpdHktdHJhaWwtZW5hYmxlZAogICAgICBTb3VyY2U6CiAgICAgICAgT3duZXI6IEFXUwogICAgICAgIFNvdXJjZUlkZW50aWZpZXI6IENMT1VEVFJBSUxfU0VDVVJJVFlfVFJBSUxfRU5BQkxFRAogICAgVHlwZTogQVdTOjpDb25maWc6OkNvbmZpZ1J1bGUKICBDbG91ZHdhdGNoQWxhcm1BY3Rpb25DaGVjazoKICAgIFByb3BlcnRpZXM6CiAgICAgIENvbmZpZ1J1bGVOYW1lOiBjbG91ZHdhdGNoLWFsYXJtLWFjdGlvbi1jaGVjawogICAgICBJbnB1dFBhcmFtZXRlcnM6CiAgICAgICAgYWxhcm1BY3Rpb25SZXF1aXJlZDoKICAgICAgICAgIEZuOjpJZjoKICAgICAgICAgIC0gY2xvdWR3YXRjaEFsYXJtQWN0aW9uQ2hlY2tQYXJhbUFsYXJtQWN0aW9uUmVxdWlyZWQKICAgICAgICAgIC0gUmVmOiBDbG91ZHdhdGNoQWxhcm1BY3Rpb25DaGVja1BhcmFtQWxhcm1BY3Rpb25SZXF1aXJlZAogICAgICAgICAgLSBSZWY6IEFXUzo6Tm9WYWx1ZQogICAgICAgIGluc3VmZmljaWVudERhdGFBY3Rpb25SZXF1aXJlZDoKICAgICAgICAgIEZuOjpJZjoKICAgICAgICAgIC0gY2xvdWR3YXRjaEFsYXJtQWN0aW9uQ2hlY2tQYXJhbUluc3VmZmljaWVudERhdGFBY3Rpb25SZXF1aXJlZAogICAgICAgICAgLSBSZWY6IENsb3Vkd2F0Y2hBbGFybUFjdGlvbkNoZWNrUGFyYW1JbnN1ZmZpY2llbnREYXRhQWN0aW9uUmVxdWlyZWQKICAgICAgICAgIC0gUmVmOiBBV1M6Ok5vVmFsdWUKICAgICAgICBva0FjdGlvblJlcXVpcmVkOgogICAgICAgICAgRm46OklmOgogICAgICAgICAgLSBjbG91ZHdhdGNoQWxhcm1BY3Rpb25DaGVja1BhcmFtT2tBY3Rpb25SZXF1aXJlZAogICAgICAgICAgLSBSZWY6IENsb3Vkd2F0Y2hBbGFybUFjdGlvbkNoZWNrUGFyYW1Pa0FjdGlvblJlcXVpcmVkCiAgICAgICAgICAtIFJlZjogQVdTOjpOb1ZhbHVlCiAgICAgIFNjb3BlOgogICAgICAgIENvbXBsaWFuY2VSZXNvdXJjZVR5cGVzOgogICAgICAgIC0gQVdTOjpDbG91ZFdhdGNoOjpBbGFybQogICAgICBTb3VyY2U6CiAgICAgICAgT3duZXI6IEFXUwogICAgICAgIFNvdXJjZUlkZW50aWZpZXI6IENMT1VEV0FUQ0hfQUxBUk1fQUNUSU9OX0NIRUNLCiAgICBUeXBlOiBBV1M6OkNvbmZpZzo6Q29uZmlnUnVsZQogIENsb3Vkd2F0Y2hMb2dHcm91cEVuY3J5cHRlZDoKICAgIFByb3BlcnRpZXM6CiAgICAgIENvbmZpZ1J1bGVOYW1lOiBjbG91ZHdhdGNoLWxvZy1ncm91cC1lbmNyeXB0ZWQKICAgICAgU291cmNlOgogICAgICAgIE93bmVyOiBBV1MKICAgICAgICBTb3VyY2VJZGVudGlmaWVyOiBDTE9VRFdBVENIX0xPR19HUk9VUF9FTkNSWVBURUQKICAgIFR5cGU6IEFXUzo6Q29uZmlnOjpDb25maWdSdWxlCiAgQ29kZWJ1aWxkUHJvamVjdEFydGlmYWN0RW5jcnlwdGlvbjoKICAgIFByb3BlcnRpZXM6CiAgICAgIENvbmZpZ1J1bGVOYW1lOiBjb2RlYnVpbGQtcHJvamVjdC1hcnRpZmFjdC1lbmNyeXB0aW9uCiAgICAgIFNjb3BlOgogICAgICAgIENvbXBsaWFuY2VSZXNvdXJjZVR5cGVzOgogICAgICAgIC0gQVdTOjpDb2RlQnVpbGQ6OlByb2plY3QKICAgICAgU291cmNlOgogICAgICAgIE93bmVyOiBBV1MKICAgICAgICBTb3VyY2VJZGVudGlmaWVyOiBDT0RFQlVJTERfUFJPSkVDVF9BUlRJRkFDVF9FTkNSWVBUSU9OCiAgICBUeXBlOiBBV1M6OkNvbmZpZzo6Q29uZmlnUnVsZQogIENvZGVidWlsZFByb2plY3RFbnZ2YXJBd3NjcmVkQ2hlY2s6CiAgICBQcm9wZXJ0aWVzOgogICAgICBDb25maWdSdWxlTmFtZTogY29kZWJ1aWxkLXByb2plY3QtZW52dmFyLWF3c2NyZWQtY2hlY2sKICAgICAgU2NvcGU6CiAgICAgICAgQ29tcGxpYW5jZVJlc291cmNlVHlwZXM6CiAgICAgICAgLSBBV1M6OkNvZGVCdWlsZDo6UHJvamVjdAogICAgICBTb3VyY2U6CiAgICAgICAgT3duZXI6IEFXUwogICAgICAgIFNvdXJjZUlkZW50aWZpZXI6IENPREVCVUlMRF9QUk9KRUNUX0VOVlZBUl9BV1NDUkVEX0NIRUNLCiAgICBUeXBlOiBBV1M6OkNvbmZpZzo6Q29uZmlnUnVsZQogIENvZGVidWlsZFByb2plY3RTM0xvZ3NFbmNyeXB0ZWQ6CiAgICBQcm9wZXJ0aWVzOgogICAgICBDb25maWdSdWxlTmFtZTogY29kZWJ1aWxkLXByb2plY3QtczMtbG9ncy1lbmNyeXB0ZWQKICAgICAgU2NvcGU6CiAgICAgICAgQ29tcGxpYW5jZVJlc291cmNlVHlwZXM6CiAgICAgICAgLSBBV1M6OkNvZGVCdWlsZDo6UHJvamVjdAogICAgICBTb3VyY2U6CiAgICAgICAgT3duZXI6IEFXUwogICAgICAgIFNvdXJjZUlkZW50aWZpZXI6IENPREVCVUlMRF9QUk9KRUNUX1MzX0xPR1NfRU5DUllQVEVECiAgICBUeXBlOiBBV1M6OkNvbmZpZzo6Q29uZmlnUnVsZQogIEN3TG9nZ3JvdXBSZXRlbnRpb25QZXJpb2RDaGVjazoKICAgIFByb3BlcnRpZXM6CiAgICAgIENvbmZpZ1J1bGVOYW1lOiBjdy1sb2dncm91cC1yZXRlbnRpb24tcGVyaW9kLWNoZWNrCiAgICAgIFNvdXJjZToKICAgICAgICBPd25lcjogQVdTCiAgICAgICAgU291cmNlSWRlbnRpZmllcjogQ1dfTE9HR1JPVVBfUkVURU5USU9OX1BFUklPRF9DSEVDSwogICAgVHlwZTogQVdTOjpDb25maWc6OkNvbmZpZ1J1bGUKICBEbXNSZXBsaWNhdGlvbk5vdFB1YmxpYzoKICAgIFByb3BlcnRpZXM6CiAgICAgIENvbmZpZ1J1bGVOYW1lOiBkbXMtcmVwbGljYXRpb24tbm90LXB1YmxpYwogICAgICBTY29wZToKICAgICAgICBDb21wbGlhbmNlUmVzb3VyY2VUeXBlczogW10KICAgICAgU291cmNlOgogICAgICAgIE93bmVyOiBBV1MKICAgICAgICBTb3VyY2VJZGVudGlmaWVyOiBETVNfUkVQTElDQVRJT05fTk9UX1BVQkxJQwogICAgVHlwZTogQVdTOjpDb25maWc6OkNvbmZpZ1J1bGUKICBEeW5hbW9kYlRhYmxlRW5jcnlwdGVkS21zOgogICAgUHJvcGVydGllczoKICAgICAgQ29uZmlnUnVsZU5hbWU6IGR5bmFtb2RiLXRhYmxlLWVuY3J5cHRlZC1rbXMKICAgICAgU2NvcGU6CiAgICAgICAgQ29tcGxpYW5jZVJlc291cmNlVHlwZXM6CiAgICAgICAgLSBBV1M6OkR5bmFtb0RCOjpUYWJsZQogICAgICBTb3VyY2U6CiAgICAgICAgT3duZXI6IEFXUwogICAgICAgIFNvdXJjZUlkZW50aWZpZXI6IERZTkFNT0RCX1RBQkxFX0VOQ1JZUFRFRF9LTVMKICAgIFR5cGU6IEFXUzo6Q29uZmlnOjpDb25maWdSdWxlCiAgRWJzU25hcHNob3RQdWJsaWNSZXN0b3JhYmxlQ2hlY2s6CiAgICBQcm9wZXJ0aWVzOgogICAgICBDb25maWdSdWxlTmFtZTogZWJzLXNuYXBzaG90LXB1YmxpYy1yZXN0b3JhYmxlLWNoZWNrCiAgICAgIFNvdXJjZToKICAgICAgICBPd25lcjogQVdTCiAgICAgICAgU291cmNlSWRlbnRpZmllcjogRUJTX1NOQVBTSE9UX1BVQkxJQ19SRVNUT1JBQkxFX0NIRUNLCiAgICBUeXBlOiBBV1M6OkNvbmZpZzo6Q29uZmlnUnVsZQogIEVjMkVic0VuY3J5cHRpb25CeURlZmF1bHQ6CiAgICBQcm9wZXJ0aWVzOgogICAgICBDb25maWdSdWxlTmFtZTogZWMyLWVicy1lbmNyeXB0aW9uLWJ5LWRlZmF1bHQKICAgICAgU291cmNlOgogICAgICAgIE93bmVyOiBBV1MKICAgICAgICBTb3VyY2VJZGVudGlmaWVyOiBFQzJfRUJTX0VOQ1JZUFRJT05fQllfREVGQVVMVAogICAgVHlwZTogQVdTOjpDb25maWc6OkNvbmZpZ1J1bGUKICBFYzJJbWRzdjJDaGVjazoKICAgIFByb3BlcnRpZXM6CiAgICAgIENvbmZpZ1J1bGVOYW1lOiBlYzItaW1kc3YyLWNoZWNrCiAgICAgIFNjb3BlOgogICAgICAgIENvbXBsaWFuY2VSZXNvdXJjZVR5cGVzOgogICAgICAgIC0gQVdTOjpFQzI6Okluc3RhbmNlCiAgICAgIFNvdXJjZToKICAgICAgICBPd25lcjogQVdTCiAgICAgICAgU291cmNlSWRlbnRpZmllcjogRUMyX0lNRFNWMl9DSEVDSwogICAgVHlwZTogQVdTOjpDb25maWc6OkNvbmZpZ1J1bGUKICBFYzJJbnN0YW5jZU1hbmFnZWRCeVNzbToKICAgIFByb3BlcnRpZXM6CiAgICAgIENvbmZpZ1J1bGVOYW1lOiBlYzItaW5zdGFuY2UtbWFuYWdlZC1ieS1zeXN0ZW1zLW1hbmFnZXIKICAgICAgU2NvcGU6CiAgICAgICAgQ29tcGxpYW5jZVJlc291cmNlVHlwZXM6CiAgICAgICAgLSBBV1M6OkVDMjo6SW5zdGFuY2UKICAgICAgICAtIEFXUzo6U1NNOjpNYW5hZ2VkSW5zdGFuY2VJbnZlbnRvcnkKICAgICAgU291cmNlOgogICAgICAgIE93bmVyOiBBV1MKICAgICAgICBTb3VyY2VJZGVudGlmaWVyOiBFQzJfSU5TVEFOQ0VfTUFOQUdFRF9CWV9TU00KICAgIFR5cGU6IEFXUzo6Q29uZmlnOjpDb25maWdSdWxlCiAgRWMySW5zdGFuY2VNdWx0aXBsZUVuaUNoZWNrOgogICAgUHJvcGVydGllczoKICAgICAgQ29uZmlnUnVsZU5hbWU6IGVjMi1pbnN0YW5jZS1tdWx0aXBsZS1lbmktY2hlY2sKICAgICAgU2NvcGU6CiAgICAgICAgQ29tcGxpYW5jZVJlc291cmNlVHlwZXM6CiAgICAgICAgLSBBV1M6OkVDMjo6SW5zdGFuY2UKICAgICAgU291cmNlOgogICAgICAgIE93bmVyOiBBV1MKICAgICAgICBTb3VyY2VJZGVudGlmaWVyOiBFQzJfSU5TVEFOQ0VfTVVMVElQTEVfRU5JX0NIRUNLCiAgICBUeXBlOiBBV1M6OkNvbmZpZzo6Q29uZmlnUnVsZQogIEVjMkluc3RhbmNlTm9QdWJsaWNJcDoKICAgIFByb3BlcnRpZXM6CiAgICAgIENvbmZpZ1J1bGVOYW1lOiBlYzItaW5zdGFuY2Utbm8tcHVibGljLWlwCiAgICAgIFNjb3BlOgogICAgICAgIENvbXBsaWFuY2VSZXNvdXJjZVR5cGVzOgogICAgICAgIC0gQVdTOjpFQzI6Okluc3RhbmNlCiAgICAgIFNvdXJjZToKICAgICAgICBPd25lcjogQVdTCiAgICAgICAgU291cmNlSWRlbnRpZmllcjogRUMyX0lOU1RBTkNFX05PX1BVQkxJQ19JUAogICAgVHlwZTogQVdTOjpDb25maWc6OkNvbmZpZ1J1bGUKICBFYzJJbnN0YW5jZVByb2ZpbGVBdHRhY2hlZDoKICAgIFByb3BlcnRpZXM6CiAgICAgIENvbmZpZ1J1bGVOYW1lOiBlYzItaW5zdGFuY2UtcHJvZmlsZS1hdHRhY2hlZAogICAgICBTY29wZToKICAgICAgICBDb21wbGlhbmNlUmVzb3VyY2VUeXBlczoKICAgICAgICAtIEFXUzo6RUMyOjpJbnN0YW5jZQogICAgICBTb3VyY2U6CiAgICAgICAgT3duZXI6IEFXUwogICAgICAgIFNvdXJjZUlkZW50aWZpZXI6IEVDMl9JTlNUQU5DRV9QUk9GSUxFX0FUVEFDSEVECiAgICBUeXBlOiBBV1M6OkNvbmZpZzo6Q29uZmlnUnVsZQogIEVjMk1hbmFnZWRpbnN0YW5jZUFzc29jaWF0aW9uQ29tcGxpYW5jZVN0YXR1c0NoZWNrOgogICAgUHJvcGVydGllczoKICAgICAgQ29uZmlnUnVsZU5hbWU6IGVjMi1tYW5hZ2VkaW5zdGFuY2UtYXNzb2NpYXRpb24tY29tcGxpYW5jZS1zdGF0dXMtY2hlY2sKICAgICAgU2NvcGU6CiAgICAgICAgQ29tcGxpYW5jZVJlc291cmNlVHlwZXM6CiAgICAgICAgLSBBV1M6OlNTTTo6QXNzb2NpYXRpb25Db21wbGlhbmNlCiAgICAgIFNvdXJjZToKICAgICAgICBPd25lcjogQVdTCiAgICAgICAgU291cmNlSWRlbnRpZmllcjogRUMyX01BTkFHRURJTlNUQU5DRV9BU1NPQ0lBVElPTl9DT01QTElBTkNFX1NUQVRVU19DSEVDSwogICAgVHlwZTogQVdTOjpDb25maWc6OkNvbmZpZ1J1bGUKICBFYzJNYW5hZ2VkaW5zdGFuY2VQYXRjaENvbXBsaWFuY2VTdGF0dXNDaGVjazoKICAgIFByb3BlcnRpZXM6CiAgICAgIENvbmZpZ1J1bGVOYW1lOiBlYzItbWFuYWdlZGluc3RhbmNlLXBhdGNoLWNvbXBsaWFuY2Utc3RhdHVzLWNoZWNrCiAgICAgIFNjb3BlOgogICAgICAgIENvbXBsaWFuY2VSZXNvdXJjZVR5cGVzOgogICAgICAgIC0gQVdTOjpTU006OlBhdGNoQ29tcGxpYW5jZQogICAgICBTb3VyY2U6CiAgICAgICAgT3duZXI6IEFXUwogICAgICAgIFNvdXJjZUlkZW50aWZpZXI6IEVDMl9NQU5BR0VESU5TVEFOQ0VfUEFUQ0hfQ09NUExJQU5DRV9TVEFUVVNfQ0hFQ0sKICAgIFR5cGU6IEFXUzo6Q29uZmlnOjpDb25maWdSdWxlCiAgRWMyU2VjdXJpdHlHcm91cEF0dGFjaGVkVG9FbmlQZXJpb2RpYzoKICAgIFByb3BlcnRpZXM6CiAgICAgIENvbmZpZ1J1bGVOYW1lOiBlYzItc2VjdXJpdHktZ3JvdXAtYXR0YWNoZWQtdG8tZW5pLXBlcmlvZGljCiAgICAgIFNjb3BlOgogICAgICAgIENvbXBsaWFuY2VSZXNvdXJjZVR5cGVzOgogICAgICAgIC0gQVdTOjpFQzI6OlNlY3VyaXR5R3JvdXAKICAgICAgU291cmNlOgogICAgICAgIE93bmVyOiBBV1MKICAgICAgICBTb3VyY2VJZGVudGlmaWVyOiBFQzJfU0VDVVJJVFlfR1JPVVBfQVRUQUNIRURfVE9fRU5JX1BFUklPRElDCiAgICBUeXBlOiBBV1M6OkNvbmZpZzo6Q29uZmlnUnVsZQogIEVjMlN0b3BwZWRJbnN0YW5jZToKICAgIFByb3BlcnRpZXM6CiAgICAgIENvbmZpZ1J1bGVOYW1lOiBlYzItc3RvcHBlZC1pbnN0YW5jZQogICAgICBTb3VyY2U6CiAgICAgICAgT3duZXI6IEFXUwogICAgICAgIFNvdXJjZUlkZW50aWZpZXI6IEVDMl9TVE9QUEVEX0lOU1RBTkNFCiAgICBUeXBlOiBBV1M6OkNvbmZpZzo6Q29uZmlnUnVsZQogIEVjMlZvbHVtZUludXNlQ2hlY2s6CiAgICBQcm9wZXJ0aWVzOgogICAgICBDb25maWdSdWxlTmFtZTogZWMyLXZvbHVtZS1pbnVzZS1jaGVjawogICAgICBTY29wZToKICAgICAgICBDb21wbGlhbmNlUmVzb3VyY2VUeXBlczoKICAgICAgICAtIEFXUzo6RUMyOjpWb2x1bWUKICAgICAgU291cmNlOgogICAgICAgIE93bmVyOiBBV1MKICAgICAgICBTb3VyY2VJZGVudGlmaWVyOiBFQzJfVk9MVU1FX0lOVVNFX0NIRUNLCiAgICBUeXBlOiBBV1M6OkNvbmZpZzo6Q29uZmlnUnVsZQogIEVjclByaXZhdGVJbWFnZVNjYW5uaW5nRW5hYmxlZDoKICAgIFByb3BlcnRpZXM6CiAgICAgIENvbmZpZ1J1bGVOYW1lOiBlY3ItcHJpdmF0ZS1pbWFnZS1zY2FubmluZy1lbmFibGVkCiAgICAgIFNjb3BlOgogICAgICAgIENvbXBsaWFuY2VSZXNvdXJjZVR5cGVzOgogICAgICAgIC0gQVdTOjpFQ1I6OlJlcG9zaXRvcnkKICAgICAgU291cmNlOgogICAgICAgIE93bmVyOiBBV1MKICAgICAgICBTb3VyY2VJZGVudGlmaWVyOiBFQ1JfUFJJVkFURV9JTUFHRV9TQ0FOTklOR19FTkFCTEVECiAgICBUeXBlOiBBV1M6OkNvbmZpZzo6Q29uZmlnUnVsZQogIEVjc0NvbnRhaW5lckluc2lnaHRzRW5hYmxlZDoKICAgIFByb3BlcnRpZXM6CiAgICAgIENvbmZpZ1J1bGVOYW1lOiBlY3MtY29udGFpbmVyLWluc2lnaHRzLWVuYWJsZWQKICAgICAgU2NvcGU6CiAgICAgICAgQ29tcGxpYW5jZVJlc291cmNlVHlwZXM6CiAgICAgICAgLSBBV1M6OkVDUzo6Q2x1c3RlcgogICAgICBTb3VyY2U6CiAgICAgICAgT3duZXI6IEFXUwogICAgICAgIFNvdXJjZUlkZW50aWZpZXI6IEVDU19DT05UQUlORVJfSU5TSUdIVFNfRU5BQkxFRAogICAgVHlwZTogQVdTOjpDb25maWc6OkNvbmZpZ1J1bGUKICBFY3NDb250YWluZXJzTm9ucHJpdmlsZWdlZDoKICAgIFByb3BlcnRpZXM6CiAgICAgIENvbmZpZ1J1bGVOYW1lOiBlY3MtY29udGFpbmVycy1ub25wcml2aWxlZ2VkCiAgICAgIFNjb3BlOgogICAgICAgIENvbXBsaWFuY2VSZXNvdXJjZVR5cGVzOgogICAgICAgIC0gQVdTOjpFQ1M6OlRhc2tEZWZpbml0aW9uCiAgICAgIFNvdXJjZToKICAgICAgICBPd25lcjogQVdTCiAgICAgICAgU291cmNlSWRlbnRpZmllcjogRUNTX0NPTlRBSU5FUlNfTk9OUFJJVklMRUdFRAogICAgVHlwZTogQVdTOjpDb25maWc6OkNvbmZpZ1J1bGUKICBFY3NDb250YWluZXJzUmVhZG9ubHlBY2Nlc3M6CiAgICBQcm9wZXJ0aWVzOgogICAgICBDb25maWdSdWxlTmFtZTogZWNzLWNvbnRhaW5lcnMtcmVhZG9ubHktYWNjZXNzCiAgICAgIFNjb3BlOgogICAgICAgIENvbXBsaWFuY2VSZXNvdXJjZVR5cGVzOgogICAgICAgIC0gQVdTOjpFQ1M6OlRhc2tEZWZpbml0aW9uCiAgICAgIFNvdXJjZToKICAgICAgICBPd25lcjogQVdTCiAgICAgICAgU291cmNlSWRlbnRpZmllcjogRUNTX0NPTlRBSU5FUlNfUkVBRE9OTFlfQUNDRVNTCiAgICBUeXBlOiBBV1M6OkNvbmZpZzo6Q29uZmlnUnVsZQogIEVjc0ZhcmdhdGVMYXRlc3RQbGF0Zm9ybVZlcnNpb246CiAgICBQcm9wZXJ0aWVzOgogICAgICBDb25maWdSdWxlTmFtZTogZWNzLWZhcmdhdGUtbGF0ZXN0LXBsYXRmb3JtLXZlcnNpb24KICAgICAgU2NvcGU6CiAgICAgICAgQ29tcGxpYW5jZVJlc291cmNlVHlwZXM6CiAgICAgICAgLSBBV1M6OkVDUzo6U2VydmljZQogICAgICBTb3VyY2U6CiAgICAgICAgT3duZXI6IEFXUwogICAgICAgIFNvdXJjZUlkZW50aWZpZXI6IEVDU19GQVJHQVRFX0xBVEVTVF9QTEFURk9STV9WRVJTSU9OCiAgICBUeXBlOiBBV1M6OkNvbmZpZzo6Q29uZmlnUnVsZQogIEVjc1Rhc2tEZWZpbml0aW9uTm9ucm9vdFVzZXI6CiAgICBQcm9wZXJ0aWVzOgogICAgICBDb25maWdSdWxlTmFtZTogZWNzLXRhc2stZGVmaW5pdGlvbi1ub25yb290LXVzZXIKICAgICAgU2NvcGU6CiAgICAgICAgQ29tcGxpYW5jZVJlc291cmNlVHlwZXM6CiAgICAgICAgLSBBV1M6OkVDUzo6VGFza0RlZmluaXRpb24KICAgICAgU291cmNlOgogICAgICAgIE93bmVyOiBBV1MKICAgICAgICBTb3VyY2VJZGVudGlmaWVyOiBFQ1NfVEFTS19ERUZJTklUSU9OX05PTlJPT1RfVVNFUgogICAgVHlwZTogQVdTOjpDb25maWc6OkNvbmZpZ1J1bGUKICBFY3NUYXNrRGVmaW5pdGlvblVzZXJGb3JIb3N0TW9kZUNoZWNrOgogICAgUHJvcGVydGllczoKICAgICAgQ29uZmlnUnVsZU5hbWU6IGVjcy10YXNrLWRlZmluaXRpb24tdXNlci1mb3ItaG9zdC1tb2RlLWNoZWNrCiAgICAgIFNjb3BlOgogICAgICAgIENvbXBsaWFuY2VSZXNvdXJjZVR5cGVzOgogICAgICAgIC0gQVdTOjpFQ1M6OlRhc2tEZWZpbml0aW9uCiAgICAgIFNvdXJjZToKICAgICAgICBPd25lcjogQVdTCiAgICAgICAgU291cmNlSWRlbnRpZmllcjogRUNTX1RBU0tfREVGSU5JVElPTl9VU0VSX0ZPUl9IT1NUX01PREVfQ0hFQ0sKICAgIFR5cGU6IEFXUzo6Q29uZmlnOjpDb25maWdSdWxlCiAgRWZzQWNjZXNzUG9pbnRFbmZvcmNlVXNlcklkZW50aXR5OgogICAgUHJvcGVydGllczoKICAgICAgQ29uZmlnUnVsZU5hbWU6IGVmcy1hY2Nlc3MtcG9pbnQtZW5mb3JjZS11c2VyLWlkZW50aXR5CiAgICAgIFNjb3BlOgogICAgICAgIENvbXBsaWFuY2VSZXNvdXJjZVR5cGVzOgogICAgICAgIC0gQVdTOjpFRlM6OkFjY2Vzc1BvaW50CiAgICAgIFNvdXJjZToKICAgICAgICBPd25lcjogQVdTCiAgICAgICAgU291cmNlSWRlbnRpZmllcjogRUZTX0FDQ0VTU19QT0lOVF9FTkZPUkNFX1VTRVJfSURFTlRJVFkKICAgIFR5cGU6IEFXUzo6Q29uZmlnOjpDb25maWdSdWxlCiAgRWZzRW5jcnlwdGVkQ2hlY2s6CiAgICBQcm9wZXJ0aWVzOgogICAgICBDb25maWdSdWxlTmFtZTogZWZzLWVuY3J5cHRlZC1jaGVjawogICAgICBTb3VyY2U6CiAgICAgICAgT3duZXI6IEFXUwogICAgICAgIFNvdXJjZUlkZW50aWZpZXI6IEVGU19FTkNSWVBURURfQ0hFQ0sKICAgIFR5cGU6IEFXUzo6Q29uZmlnOjpDb25maWdSdWxlCiAgRWxhc3RpY0JlYW5zdGFsa01hbmFnZWRVcGRhdGVzRW5hYmxlZDoKICAgIFByb3BlcnRpZXM6CiAgICAgIENvbmZpZ1J1bGVOYW1lOiBlbGFzdGljLWJlYW5zdGFsay1tYW5hZ2VkLXVwZGF0ZXMtZW5hYmxlZAogICAgICBTY29wZToKICAgICAgICBDb21wbGlhbmNlUmVzb3VyY2VUeXBlczoKICAgICAgICAtIEFXUzo6RWxhc3RpY0JlYW5zdGFsazo6RW52aXJvbm1lbnQKICAgICAgU291cmNlOgogICAgICAgIE93bmVyOiBBV1MKICAgICAgICBTb3VyY2VJZGVudGlmaWVyOiBFTEFTVElDX0JFQU5TVEFMS19NQU5BR0VEX1VQREFURVNfRU5BQkxFRAogICAgVHlwZTogQVdTOjpDb25maWc6OkNvbmZpZ1J1bGUKICBFbGFzdGljc2VhcmNoRW5jcnlwdGVkQXRSZXN0OgogICAgUHJvcGVydGllczoKICAgICAgQ29uZmlnUnVsZU5hbWU6IGVsYXN0aWNzZWFyY2gtZW5jcnlwdGVkLWF0LXJlc3QKICAgICAgU291cmNlOgogICAgICAgIE93bmVyOiBBV1MKICAgICAgICBTb3VyY2VJZGVudGlmaWVyOiBFTEFTVElDU0VBUkNIX0VOQ1JZUFRFRF9BVF9SRVNUCiAgICBUeXBlOiBBV1M6OkNvbmZpZzo6Q29uZmlnUnVsZQogIEVsYXN0aWNzZWFyY2hJblZwY09ubHk6CiAgICBQcm9wZXJ0aWVzOgogICAgICBDb25maWdSdWxlTmFtZTogZWxhc3RpY3NlYXJjaC1pbi12cGMtb25seQogICAgICBTb3VyY2U6CiAgICAgICAgT3duZXI6IEFXUwogICAgICAgIFNvdXJjZUlkZW50aWZpZXI6IEVMQVNUSUNTRUFSQ0hfSU5fVlBDX09OTFkKICAgIFR5cGU6IEFXUzo6Q29uZmlnOjpDb25maWdSdWxlCiAgRWxhc3RpY3NlYXJjaExvZ3NUb0Nsb3Vkd2F0Y2g6CiAgICBQcm9wZXJ0aWVzOgogICAgICBDb25maWdSdWxlTmFtZTogZWxhc3RpY3NlYXJjaC1sb2dzLXRvLWNsb3Vkd2F0Y2gKICAgICAgU2NvcGU6CiAgICAgICAgQ29tcGxpYW5jZVJlc291cmNlVHlwZXM6CiAgICAgICAgLSBBV1M6OkVsYXN0aWNzZWFyY2g6OkRvbWFpbgogICAgICBTb3VyY2U6CiAgICAgICAgT3duZXI6IEFXUwogICAgICAgIFNvdXJjZUlkZW50aWZpZXI6IEVMQVNUSUNTRUFSQ0hfTE9HU19UT19DTE9VRFdBVENICiAgICBUeXBlOiBBV1M6OkNvbmZpZzo6Q29uZmlnUnVsZQogIEVsYXN0aWNzZWFyY2hOb2RlVG9Ob2RlRW5jcnlwdGlvbkNoZWNrOgogICAgUHJvcGVydGllczoKICAgICAgQ29uZmlnUnVsZU5hbWU6IGVsYXN0aWNzZWFyY2gtbm9kZS10by1ub2RlLWVuY3J5cHRpb24tY2hlY2sKICAgICAgU2NvcGU6CiAgICAgICAgQ29tcGxpYW5jZVJlc291cmNlVHlwZXM6CiAgICAgICAgLSBBV1M6OkVsYXN0aWNzZWFyY2g6OkRvbWFpbgogICAgICBTb3VyY2U6CiAgICAgICAgT3duZXI6IEFXUwogICAgICAgIFNvdXJjZUlkZW50aWZpZXI6IEVMQVNUSUNTRUFSQ0hfTk9ERV9UT19OT0RFX0VOQ1JZUFRJT05fQ0hFQ0sKICAgIFR5cGU6IEFXUzo6Q29uZmlnOjpDb25maWdSdWxlCiAgRWxiQWNtQ2VydGlmaWNhdGVSZXF1aXJlZDoKICAgIFByb3BlcnRpZXM6CiAgICAgIENvbmZpZ1J1bGVOYW1lOiBlbGItYWNtLWNlcnRpZmljYXRlLXJlcXVpcmVkCiAgICAgIFNjb3BlOgogICAgICAgIENvbXBsaWFuY2VSZXNvdXJjZVR5cGVzOgogICAgICAgIC0gQVdTOjpFbGFzdGljTG9hZEJhbGFuY2luZzo6TG9hZEJhbGFuY2VyCiAgICAgIFNvdXJjZToKICAgICAgICBPd25lcjogQVdTCiAgICAgICAgU291cmNlSWRlbnRpZmllcjogRUxCX0FDTV9DRVJUSUZJQ0FURV9SRVFVSVJFRAogICAgVHlwZTogQVdTOjpDb25maWc6OkNvbmZpZ1J1bGUKICBFbGJMb2dnaW5nRW5hYmxlZDoKICAgIFByb3BlcnRpZXM6CiAgICAgIENvbmZpZ1J1bGVOYW1lOiBlbGItbG9nZ2luZy1lbmFibGVkCiAgICAgIFNjb3BlOgogICAgICAgIENvbXBsaWFuY2VSZXNvdXJjZVR5cGVzOgogICAgICAgIC0gQVdTOjpFbGFzdGljTG9hZEJhbGFuY2luZzo6TG9hZEJhbGFuY2VyCiAgICAgICAgLSBBV1M6OkVsYXN0aWNMb2FkQmFsYW5jaW5nVjI6OkxvYWRCYWxhbmNlcgogICAgICBTb3VyY2U6CiAgICAgICAgT3duZXI6IEFXUwogICAgICAgIFNvdXJjZUlkZW50aWZpZXI6IEVMQl9MT0dHSU5HX0VOQUJMRUQKICAgIFR5cGU6IEFXUzo6Q29uZmlnOjpDb25maWdSdWxlCiAgRWxiVGxzSHR0cHNMaXN0ZW5lcnNPbmx5OgogICAgUHJvcGVydGllczoKICAgICAgQ29uZmlnUnVsZU5hbWU6IGVsYi10bHMtaHR0cHMtbGlzdGVuZXJzLW9ubHkKICAgICAgU2NvcGU6CiAgICAgICAgQ29tcGxpYW5jZVJlc291cmNlVHlwZXM6CiAgICAgICAgLSBBV1M6OkVsYXN0aWNMb2FkQmFsYW5jaW5nOjpMb2FkQmFsYW5jZXIKICAgICAgU291cmNlOgogICAgICAgIE93bmVyOiBBV1MKICAgICAgICBTb3VyY2VJZGVudGlmaWVyOiBFTEJfVExTX0hUVFBTX0xJU1RFTkVSU19PTkxZCiAgICBUeXBlOiBBV1M6OkNvbmZpZzo6Q29uZmlnUnVsZQogIEVsYnYyQWNtQ2VydGlmaWNhdGVSZXF1aXJlZDoKICAgIFByb3BlcnRpZXM6CiAgICAgIENvbmZpZ1J1bGVOYW1lOiBlbGJ2Mi1hY20tY2VydGlmaWNhdGUtcmVxdWlyZWQKICAgICAgU291cmNlOgogICAgICAgIE93bmVyOiBBV1MKICAgICAgICBTb3VyY2VJZGVudGlmaWVyOiBFTEJWMl9BQ01fQ0VSVElGSUNBVEVfUkVRVUlSRUQKICAgIFR5cGU6IEFXUzo6Q29uZmlnOjpDb25maWdSdWxlCiAgRW1yS2VyYmVyb3NFbmFibGVkOgogICAgUHJvcGVydGllczoKICAgICAgQ29uZmlnUnVsZU5hbWU6IGVtci1rZXJiZXJvcy1lbmFibGVkCiAgICAgIFNvdXJjZToKICAgICAgICBPd25lcjogQVdTCiAgICAgICAgU291cmNlSWRlbnRpZmllcjogRU1SX0tFUkJFUk9TX0VOQUJMRUQKICAgIFR5cGU6IEFXUzo6Q29uZmlnOjpDb25maWdSdWxlCiAgRW1yTWFzdGVyTm9QdWJsaWNJcDoKICAgIFByb3BlcnRpZXM6CiAgICAgIENvbmZpZ1J1bGVOYW1lOiBlbXItbWFzdGVyLW5vLXB1YmxpYy1pcAogICAgICBTY29wZToKICAgICAgICBDb21wbGlhbmNlUmVzb3VyY2VUeXBlczogW10KICAgICAgU291cmNlOgogICAgICAgIE93bmVyOiBBV1MKICAgICAgICBTb3VyY2VJZGVudGlmaWVyOiBFTVJfTUFTVEVSX05PX1BVQkxJQ19JUAogICAgVHlwZTogQVdTOjpDb25maWc6OkNvbmZpZ1J1bGUKICBFbmNyeXB0ZWRWb2x1bWVzOgogICAgUHJvcGVydGllczoKICAgICAgQ29uZmlnUnVsZU5hbWU6IGVuY3J5cHRlZC12b2x1bWVzCiAgICAgIFNjb3BlOgogICAgICAgIENvbXBsaWFuY2VSZXNvdXJjZVR5cGVzOgogICAgICAgIC0gQVdTOjpFQzI6OlZvbHVtZQogICAgICBTb3VyY2U6CiAgICAgICAgT3duZXI6IEFXUwogICAgICAgIFNvdXJjZUlkZW50aWZpZXI6IEVOQ1JZUFRFRF9WT0xVTUVTCiAgICBUeXBlOiBBV1M6OkNvbmZpZzo6Q29uZmlnUnVsZQogIEd1YXJkZHV0eUVuYWJsZWRDZW50cmFsaXplZDoKICAgIFByb3BlcnRpZXM6CiAgICAgIENvbmZpZ1J1bGVOYW1lOiBndWFyZGR1dHktZW5hYmxlZC1jZW50cmFsaXplZAogICAgICBTb3VyY2U6CiAgICAgICAgT3duZXI6IEFXUwogICAgICAgIFNvdXJjZUlkZW50aWZpZXI6IEdVQVJERFVUWV9FTkFCTEVEX0NFTlRSQUxJWkVECiAgICBUeXBlOiBBV1M6OkNvbmZpZzo6Q29uZmlnUnVsZQogIElhbUN1c3RvbWVyUG9saWN5QmxvY2tlZEttc0FjdGlvbnM6CiAgICBQcm9wZXJ0aWVzOgogICAgICBDb25maWdSdWxlTmFtZTogaWFtLWN1c3RvbWVyLXBvbGljeS1ibG9ja2VkLWttcy1hY3Rpb25zCiAgICAgIElucHV0UGFyYW1ldGVyczoKICAgICAgICBibG9ja2VkQWN0aW9uc1BhdHRlcm5zOgogICAgICAgICAgRm46OklmOgogICAgICAgICAgLSBpYW1DdXN0b21lclBvbGljeUJsb2NrZWRLbXNBY3Rpb25zUGFyYW1CbG9ja2VkQWN0aW9uc1BhdHRlcm5zCiAgICAgICAgICAtIFJlZjogSWFtQ3VzdG9tZXJQb2xpY3lCbG9ja2VkS21zQWN0aW9uc1BhcmFtQmxvY2tlZEFjdGlvbnNQYXR0ZXJucwogICAgICAgICAgLSBSZWY6IEFXUzo6Tm9WYWx1ZQogICAgICBTY29wZToKICAgICAgICBDb21wbGlhbmNlUmVzb3VyY2VUeXBlczoKICAgICAgICAtIEFXUzo6SUFNOjpQb2xpY3kKICAgICAgU291cmNlOgogICAgICAgIE93bmVyOiBBV1MKICAgICAgICBTb3VyY2VJZGVudGlmaWVyOiBJQU1fQ1VTVE9NRVJfUE9MSUNZX0JMT0NLRURfS01TX0FDVElPTlMKICAgIFR5cGU6IEFXUzo6Q29uZmlnOjpDb25maWdSdWxlCiAgSWFtR3JvdXBIYXNVc2Vyc0NoZWNrOgogICAgUHJvcGVydGllczoKICAgICAgQ29uZmlnUnVsZU5hbWU6IGlhbS1ncm91cC1oYXMtdXNlcnMtY2hlY2sKICAgICAgU2NvcGU6CiAgICAgICAgQ29tcGxpYW5jZVJlc291cmNlVHlwZXM6CiAgICAgICAgLSBBV1M6OklBTTo6R3JvdXAKICAgICAgU291cmNlOgogICAgICAgIE93bmVyOiBBV1MKICAgICAgICBTb3VyY2VJZGVudGlmaWVyOiBJQU1fR1JPVVBfSEFTX1VTRVJTX0NIRUNLCiAgICBUeXBlOiBBV1M6OkNvbmZpZzo6Q29uZmlnUnVsZQogIElhbU5vSW5saW5lUG9saWN5Q2hlY2s6CiAgICBQcm9wZXJ0aWVzOgogICAgICBDb25maWdSdWxlTmFtZTogaWFtLW5vLWlubGluZS1wb2xpY3ktY2hlY2sKICAgICAgU2NvcGU6CiAgICAgICAgQ29tcGxpYW5jZVJlc291cmNlVHlwZXM6CiAgICAgICAgLSBBV1M6OklBTTo6VXNlcgogICAgICAgIC0gQVdTOjpJQU06OlJvbGUKICAgICAgICAtIEFXUzo6SUFNOjpHcm91cAogICAgICBTb3VyY2U6CiAgICAgICAgT3duZXI6IEFXUwogICAgICAgIFNvdXJjZUlkZW50aWZpZXI6IElBTV9OT19JTkxJTkVfUE9MSUNZX0NIRUNLCiAgICBUeXBlOiBBV1M6OkNvbmZpZzo6Q29uZmlnUnVsZQogIElhbVBhc3N3b3JkUG9saWN5OgogICAgUHJvcGVydGllczoKICAgICAgQ29uZmlnUnVsZU5hbWU6IGlhbS1wYXNzd29yZC1wb2xpY3kKICAgICAgSW5wdXRQYXJhbWV0ZXJzOgogICAgICAgIE1heFBhc3N3b3JkQWdlOgogICAgICAgICAgRm46OklmOgogICAgICAgICAgLSBpYW1QYXNzd29yZFBvbGljeVBhcmFtTWF4UGFzc3dvcmRBZ2UKICAgICAgICAgIC0gUmVmOiBJYW1QYXNzd29yZFBvbGljeVBhcmFtTWF4UGFzc3dvcmRBZ2UKICAgICAgICAgIC0gUmVmOiBBV1M6Ok5vVmFsdWUKICAgICAgICBNaW5pbXVtUGFzc3dvcmRMZW5ndGg6CiAgICAgICAgICBGbjo6SWY6CiAgICAgICAgICAtIGlhbVBhc3N3b3JkUG9saWN5UGFyYW1NaW5pbXVtUGFzc3dvcmRMZW5ndGgKICAgICAgICAgIC0gUmVmOiBJYW1QYXNzd29yZFBvbGljeVBhcmFtTWluaW11bVBhc3N3b3JkTGVuZ3RoCiAgICAgICAgICAtIFJlZjogQVdTOjpOb1ZhbHVlCiAgICAgICAgUGFzc3dvcmRSZXVzZVByZXZlbnRpb246CiAgICAgICAgICBGbjo6SWY6CiAgICAgICAgICAtIGlhbVBhc3N3b3JkUG9saWN5UGFyYW1QYXNzd29yZFJldXNlUHJldmVudGlvbgogICAgICAgICAgLSBSZWY6IElhbVBhc3N3b3JkUG9saWN5UGFyYW1QYXNzd29yZFJldXNlUHJldmVudGlvbgogICAgICAgICAgLSBSZWY6IEFXUzo6Tm9WYWx1ZQogICAgICAgIFJlcXVpcmVMb3dlcmNhc2VDaGFyYWN0ZXJzOgogICAgICAgICAgRm46OklmOgogICAgICAgICAgLSBpYW1QYXNzd29yZFBvbGljeVBhcmFtUmVxdWlyZUxvd2VyY2FzZUNoYXJhY3RlcnMKICAgICAgICAgIC0gUmVmOiBJYW1QYXNzd29yZFBvbGljeVBhcmFtUmVxdWlyZUxvd2VyY2FzZUNoYXJhY3RlcnMKICAgICAgICAgIC0gUmVmOiBBV1M6Ok5vVmFsdWUKICAgICAgICBSZXF1aXJlTnVtYmVyczoKICAgICAgICAgIEZuOjpJZjoKICAgICAgICAgIC0gaWFtUGFzc3dvcmRQb2xpY3lQYXJhbVJlcXVpcmVOdW1iZXJzCiAgICAgICAgICAtIFJlZjogSWFtUGFzc3dvcmRQb2xpY3lQYXJhbVJlcXVpcmVOdW1iZXJzCiAgICAgICAgICAtIFJlZjogQVdTOjpOb1ZhbHVlCiAgICAgICAgUmVxdWlyZVN5bWJvbHM6CiAgICAgICAgICBGbjo6SWY6CiAgICAgICAgICAtIGlhbVBhc3N3b3JkUG9saWN5UGFyYW1SZXF1aXJlU3ltYm9scwogICAgICAgICAgLSBSZWY6IElhbVBhc3N3b3JkUG9saWN5UGFyYW1SZXF1aXJlU3ltYm9scwogICAgICAgICAgLSBSZWY6IEFXUzo6Tm9WYWx1ZQogICAgICAgIFJlcXVpcmVVcHBlcmNhc2VDaGFyYWN0ZXJzOgogICAgICAgICAgRm46OklmOgogICAgICAgICAgLSBpYW1QYXNzd29yZFBvbGljeVBhcmFtUmVxdWlyZVVwcGVyY2FzZUNoYXJhY3RlcnMKICAgICAgICAgIC0gUmVmOiBJYW1QYXNzd29yZFBvbGljeVBhcmFtUmVxdWlyZVVwcGVyY2FzZUNoYXJhY3RlcnMKICAgICAgICAgIC0gUmVmOiBBV1M6Ok5vVmFsdWUKICAgICAgU291cmNlOgogICAgICAgIE93bmVyOiBBV1MKICAgICAgICBTb3VyY2VJZGVudGlmaWVyOiBJQU1fUEFTU1dPUkRfUE9MSUNZCiAgICBUeXBlOiBBV1M6OkNvbmZpZzo6Q29uZmlnUnVsZQogIElhbVBvbGljeU5vU3RhdGVtZW50c1dpdGhBZG1pbkFjY2VzczoKICAgIFByb3BlcnRpZXM6CiAgICAgIENvbmZpZ1J1bGVOYW1lOiBpYW0tcG9saWN5LW5vLXN0YXRlbWVudHMtd2l0aC1hZG1pbi1hY2Nlc3MKICAgICAgU2NvcGU6CiAgICAgICAgQ29tcGxpYW5jZVJlc291cmNlVHlwZXM6CiAgICAgICAgLSBBV1M6OklBTTo6UG9saWN5CiAgICAgIFNvdXJjZToKICAgICAgICBPd25lcjogQVdTCiAgICAgICAgU291cmNlSWRlbnRpZmllcjogSUFNX1BPTElDWV9OT19TVEFURU1FTlRTX1dJVEhfQURNSU5fQUNDRVNTCiAgICBUeXBlOiBBV1M6OkNvbmZpZzo6Q29uZmlnUnVsZQogIElhbVBvbGljeU5vU3RhdGVtZW50c1dpdGhGdWxsQWNjZXNzOgogICAgUHJvcGVydGllczoKICAgICAgQ29uZmlnUnVsZU5hbWU6IGlhbS1wb2xpY3ktbm8tc3RhdGVtZW50cy13aXRoLWZ1bGwtYWNjZXNzCiAgICAgIFNjb3BlOgogICAgICAgIENvbXBsaWFuY2VSZXNvdXJjZVR5cGVzOgogICAgICAgIC0gQVdTOjpJQU06OlBvbGljeQogICAgICBTb3VyY2U6CiAgICAgICAgT3duZXI6IEFXUwogICAgICAgIFNvdXJjZUlkZW50aWZpZXI6IElBTV9QT0xJQ1lfTk9fU1RBVEVNRU5UU19XSVRIX0ZVTExfQUNDRVNTCiAgICBUeXBlOiBBV1M6OkNvbmZpZzo6Q29uZmlnUnVsZQogIElhbVJvb3RBY2Nlc3NLZXlDaGVjazoKICAgIFByb3BlcnRpZXM6CiAgICAgIENvbmZpZ1J1bGVOYW1lOiBpYW0tcm9vdC1hY2Nlc3Mta2V5LWNoZWNrCiAgICAgIFNvdXJjZToKICAgICAgICBPd25lcjogQVdTCiAgICAgICAgU291cmNlSWRlbnRpZmllcjogSUFNX1JPT1RfQUNDRVNTX0tFWV9DSEVDSwogICAgVHlwZTogQVdTOjpDb25maWc6OkNvbmZpZ1J1bGUKICBJYW1Vc2VyR3JvdXBNZW1iZXJzaGlwQ2hlY2s6CiAgICBQcm9wZXJ0aWVzOgogICAgICBDb25maWdSdWxlTmFtZTogaWFtLXVzZXItZ3JvdXAtbWVtYmVyc2hpcC1jaGVjawogICAgICBTY29wZToKICAgICAgICBDb21wbGlhbmNlUmVzb3VyY2VUeXBlczoKICAgICAgICAtIEFXUzo6SUFNOjpVc2VyCiAgICAgIFNvdXJjZToKICAgICAgICBPd25lcjogQVdTCiAgICAgICAgU291cmNlSWRlbnRpZmllcjogSUFNX1VTRVJfR1JPVVBfTUVNQkVSU0hJUF9DSEVDSwogICAgVHlwZTogQVdTOjpDb25maWc6OkNvbmZpZ1J1bGUKICBJYW1Vc2VyTWZhRW5hYmxlZDoKICAgIFByb3BlcnRpZXM6CiAgICAgIENvbmZpZ1J1bGVOYW1lOiBpYW0tdXNlci1tZmEtZW5hYmxlZAogICAgICBTb3VyY2U6CiAgICAgICAgT3duZXI6IEFXUwogICAgICAgIFNvdXJjZUlkZW50aWZpZXI6IElBTV9VU0VSX01GQV9FTkFCTEVECiAgICBUeXBlOiBBV1M6OkNvbmZpZzo6Q29uZmlnUnVsZQogIElhbVVzZXJVbnVzZWRDcmVkZW50aWFsc0NoZWNrOgogICAgUHJvcGVydGllczoKICAgICAgQ29uZmlnUnVsZU5hbWU6IGlhbS11c2VyLXVudXNlZC1jcmVkZW50aWFscy1jaGVjawogICAgICBJbnB1dFBhcmFtZXRlcnM6CiAgICAgICAgbWF4Q3JlZGVudGlhbFVzYWdlQWdlOgogICAgICAgICAgRm46OklmOgogICAgICAgICAgLSBpYW1Vc2VyVW51c2VkQ3JlZGVudGlhbHNDaGVja1BhcmFtTWF4Q3JlZGVudGlhbFVzYWdlQWdlCiAgICAgICAgICAtIFJlZjogSWFtVXNlclVudXNlZENyZWRlbnRpYWxzQ2hlY2tQYXJhbU1heENyZWRlbnRpYWxVc2FnZUFnZQogICAgICAgICAgLSBSZWY6IEFXUzo6Tm9WYWx1ZQogICAgICBTb3VyY2U6CiAgICAgICAgT3duZXI6IEFXUwogICAgICAgIFNvdXJjZUlkZW50aWZpZXI6IElBTV9VU0VSX1VOVVNFRF9DUkVERU5USUFMU19DSEVDSwogICAgVHlwZTogQVdTOjpDb25maWc6OkNvbmZpZ1J1bGUKICBJbmNvbWluZ1NzaERpc2FibGVkOgogICAgUHJvcGVydGllczoKICAgICAgQ29uZmlnUnVsZU5hbWU6IHJlc3RyaWN0ZWQtc3NoCiAgICAgIFNjb3BlOgogICAgICAgIENvbXBsaWFuY2VSZXNvdXJjZVR5cGVzOgogICAgICAgIC0gQVdTOjpFQzI6OlNlY3VyaXR5R3JvdXAKICAgICAgU291cmNlOgogICAgICAgIE93bmVyOiBBV1MKICAgICAgICBTb3VyY2VJZGVudGlmaWVyOiBJTkNPTUlOR19TU0hfRElTQUJMRUQKICAgIFR5cGU6IEFXUzo6Q29uZmlnOjpDb25maWdSdWxlCiAgSW5zdGFuY2VzSW5WcGM6CiAgICBQcm9wZXJ0aWVzOgogICAgICBDb25maWdSdWxlTmFtZTogZWMyLWluc3RhbmNlcy1pbi12cGMKICAgICAgU2NvcGU6CiAgICAgICAgQ29tcGxpYW5jZVJlc291cmNlVHlwZXM6CiAgICAgICAgLSBBV1M6OkVDMjo6SW5zdGFuY2UKICAgICAgU291cmNlOgogICAgICAgIE93bmVyOiBBV1MKICAgICAgICBTb3VyY2VJZGVudGlmaWVyOiBJTlNUQU5DRVNfSU5fVlBDCiAgICBUeXBlOiBBV1M6OkNvbmZpZzo6Q29uZmlnUnVsZQogIEttc0Nta05vdFNjaGVkdWxlZEZvckRlbGV0aW9uOgogICAgUHJvcGVydGllczoKICAgICAgQ29uZmlnUnVsZU5hbWU6IGttcy1jbWstbm90LXNjaGVkdWxlZC1mb3ItZGVsZXRpb24KICAgICAgU2NvcGU6CiAgICAgICAgQ29tcGxpYW5jZVJlc291cmNlVHlwZXM6CiAgICAgICAgLSBBV1M6OktNUzo6S2V5CiAgICAgIFNvdXJjZToKICAgICAgICBPd25lcjogQVdTCiAgICAgICAgU291cmNlSWRlbnRpZmllcjogS01TX0NNS19OT1RfU0NIRURVTEVEX0ZPUl9ERUxFVElPTgogICAgVHlwZTogQVdTOjpDb25maWc6OkNvbmZpZ1J1bGUKICBMYW1iZGFGdW5jdGlvblB1YmxpY0FjY2Vzc1Byb2hpYml0ZWQ6CiAgICBQcm9wZXJ0aWVzOgogICAgICBDb25maWdSdWxlTmFtZTogbGFtYmRhLWZ1bmN0aW9uLXB1YmxpYy1hY2Nlc3MtcHJvaGliaXRlZAogICAgICBTY29wZToKICAgICAgICBDb21wbGlhbmNlUmVzb3VyY2VUeXBlczoKICAgICAgICAtIEFXUzo6TGFtYmRhOjpGdW5jdGlvbgogICAgICBTb3VyY2U6CiAgICAgICAgT3duZXI6IEFXUwogICAgICAgIFNvdXJjZUlkZW50aWZpZXI6IExBTUJEQV9GVU5DVElPTl9QVUJMSUNfQUNDRVNTX1BST0hJQklURUQKICAgIFR5cGU6IEFXUzo6Q29uZmlnOjpDb25maWdSdWxlCiAgTGFtYmRhSW5zaWRlVnBjOgogICAgUHJvcGVydGllczoKICAgICAgQ29uZmlnUnVsZU5hbWU6IGxhbWJkYS1pbnNpZGUtdnBjCiAgICAgIFNjb3BlOgogICAgICAgIENvbXBsaWFuY2VSZXNvdXJjZVR5cGVzOgogICAgICAgIC0gQVdTOjpMYW1iZGE6OkZ1bmN0aW9uCiAgICAgIFNvdXJjZToKICAgICAgICBPd25lcjogQVdTCiAgICAgICAgU291cmNlSWRlbnRpZmllcjogTEFNQkRBX0lOU0lERV9WUEMKICAgIFR5cGU6IEFXUzo6Q29uZmlnOjpDb25maWdSdWxlCiAgTWZhRW5hYmxlZEZvcklhbUNvbnNvbGVBY2Nlc3M6CiAgICBQcm9wZXJ0aWVzOgogICAgICBDb25maWdSdWxlTmFtZTogbWZhLWVuYWJsZWQtZm9yLWlhbS1jb25zb2xlLWFjY2VzcwogICAgICBTb3VyY2U6CiAgICAgICAgT3duZXI6IEFXUwogICAgICAgIFNvdXJjZUlkZW50aWZpZXI6IE1GQV9FTkFCTEVEX0ZPUl9JQU1fQ09OU09MRV9BQ0NFU1MKICAgIFR5cGU6IEFXUzo6Q29uZmlnOjpDb25maWdSdWxlCiAgTXVsdGlSZWdpb25DbG91ZFRyYWlsRW5hYmxlZDoKICAgIFByb3BlcnRpZXM6CiAgICAgIENvbmZpZ1J1bGVOYW1lOiBtdWx0aS1yZWdpb24tY2xvdWR0cmFpbC1lbmFibGVkCiAgICAgIFNvdXJjZToKICAgICAgICBPd25lcjogQVdTCiAgICAgICAgU291cmNlSWRlbnRpZmllcjogTVVMVElfUkVHSU9OX0NMT1VEX1RSQUlMX0VOQUJMRUQKICAgIFR5cGU6IEFXUzo6Q29uZmlnOjpDb25maWdSdWxlCiAgTm9VbnJlc3RyaWN0ZWRSb3V0ZVRvSWd3OgogICAgUHJvcGVydGllczoKICAgICAgQ29uZmlnUnVsZU5hbWU6IG5vLXVucmVzdHJpY3RlZC1yb3V0ZS10by1pZ3cKICAgICAgU2NvcGU6CiAgICAgICAgQ29tcGxpYW5jZVJlc291cmNlVHlwZXM6CiAgICAgICAgLSBBV1M6OkVDMjo6Um91dGVUYWJsZQogICAgICBTb3VyY2U6CiAgICAgICAgT3duZXI6IEFXUwogICAgICAgIFNvdXJjZUlkZW50aWZpZXI6IE5PX1VOUkVTVFJJQ1RFRF9ST1VURV9UT19JR1cKICAgIFR5cGU6IEFXUzo6Q29uZmlnOjpDb25maWdSdWxlCiAgT3BlbnNlYXJjaEF1ZGl0TG9nZ2luZ0VuYWJsZWQ6CiAgICBQcm9wZXJ0aWVzOgogICAgICBDb25maWdSdWxlTmFtZTogb3BlbnNlYXJjaC1hdWRpdC1sb2dnaW5nLWVuYWJsZWQKICAgICAgU2NvcGU6CiAgICAgICAgQ29tcGxpYW5jZVJlc291cmNlVHlwZXM6CiAgICAgICAgLSBBV1M6Ok9wZW5TZWFyY2g6OkRvbWFpbgogICAgICBTb3VyY2U6CiAgICAgICAgT3duZXI6IEFXUwogICAgICAgIFNvdXJjZUlkZW50aWZpZXI6IE9QRU5TRUFSQ0hfQVVESVRfTE9HR0lOR19FTkFCTEVECiAgICBUeXBlOiBBV1M6OkNvbmZpZzo6Q29uZmlnUnVsZQogIE9wZW5zZWFyY2hFbmNyeXB0ZWRBdFJlc3Q6CiAgICBQcm9wZXJ0aWVzOgogICAgICBDb25maWdSdWxlTmFtZTogb3BlbnNlYXJjaC1lbmNyeXB0ZWQtYXQtcmVzdAogICAgICBTY29wZToKICAgICAgICBDb21wbGlhbmNlUmVzb3VyY2VUeXBlczoKICAgICAgICAtIEFXUzo6T3BlblNlYXJjaDo6RG9tYWluCiAgICAgIFNvdXJjZToKICAgICAgICBPd25lcjogQVdTCiAgICAgICAgU291cmNlSWRlbnRpZmllcjogT1BFTlNFQVJDSF9FTkNSWVBURURfQVRfUkVTVAogICAgVHlwZTogQVdTOjpDb25maWc6OkNvbmZpZ1J1bGUKICBPcGVuc2VhcmNoSHR0cHNSZXF1aXJlZDoKICAgIFByb3BlcnRpZXM6CiAgICAgIENvbmZpZ1J1bGVOYW1lOiBvcGVuc2VhcmNoLWh0dHBzLXJlcXVpcmVkCiAgICAgIFNjb3BlOgogICAgICAgIENvbXBsaWFuY2VSZXNvdXJjZVR5cGVzOgogICAgICAgIC0gQVdTOjpPcGVuU2VhcmNoOjpEb21haW4KICAgICAgU291cmNlOgogICAgICAgIE93bmVyOiBBV1MKICAgICAgICBTb3VyY2VJZGVudGlmaWVyOiBPUEVOU0VBUkNIX0hUVFBTX1JFUVVJUkVECiAgICBUeXBlOiBBV1M6OkNvbmZpZzo6Q29uZmlnUnVsZQogIE9wZW5zZWFyY2hJblZwY09ubHk6CiAgICBQcm9wZXJ0aWVzOgogICAgICBDb25maWdSdWxlTmFtZTogb3BlbnNlYXJjaC1pbi12cGMtb25seQogICAgICBTY29wZToKICAgICAgICBDb21wbGlhbmNlUmVzb3VyY2VUeXBlczoKICAgICAgICAtIEFXUzo6T3BlblNlYXJjaDo6RG9tYWluCiAgICAgIFNvdXJjZToKICAgICAgICBPd25lcjogQVdTCiAgICAgICAgU291cmNlSWRlbnRpZmllcjogT1BFTlNFQVJDSF9JTl9WUENfT05MWQogICAgVHlwZTogQVdTOjpDb25maWc6OkNvbmZpZ1J1bGUKICBPcGVuc2VhcmNoTG9nc1RvQ2xvdWR3YXRjaDoKICAgIFByb3BlcnRpZXM6CiAgICAgIENvbmZpZ1J1bGVOYW1lOiBvcGVuc2VhcmNoLWxvZ3MtdG8tY2xvdWR3YXRjaAogICAgICBTY29wZToKICAgICAgICBDb21wbGlhbmNlUmVzb3VyY2VUeXBlczoKICAgICAgICAtIEFXUzo6T3BlblNlYXJjaDo6RG9tYWluCiAgICAgIFNvdXJjZToKICAgICAgICBPd25lcjogQVdTCiAgICAgICAgU291cmNlSWRlbnRpZmllcjogT1BFTlNFQVJDSF9MT0dTX1RPX0NMT1VEV0FUQ0gKICAgIFR5cGU6IEFXUzo6Q29uZmlnOjpDb25maWdSdWxlCiAgT3BlbnNlYXJjaE5vZGVUb05vZGVFbmNyeXB0aW9uQ2hlY2s6CiAgICBQcm9wZXJ0aWVzOgogICAgICBDb25maWdSdWxlTmFtZTogb3BlbnNlYXJjaC1ub2RlLXRvLW5vZGUtZW5jcnlwdGlvbi1jaGVjawogICAgICBTY29wZToKICAgICAgICBDb21wbGlhbmNlUmVzb3VyY2VUeXBlczoKICAgICAgICAtIEFXUzo6T3BlblNlYXJjaDo6RG9tYWluCiAgICAgIFNvdXJjZToKICAgICAgICBPd25lcjogQVdTCiAgICAgICAgU291cmNlSWRlbnRpZmllcjogT1BFTlNFQVJDSF9OT0RFX1RPX05PREVfRU5DUllQVElPTl9DSEVDSwogICAgVHlwZTogQVdTOjpDb25maWc6OkNvbmZpZ1J1bGUKICBSZHNBdXRvbWF0aWNNaW5vclZlcnNpb25VcGdyYWRlRW5hYmxlZDoKICAgIFByb3BlcnRpZXM6CiAgICAgIENvbmZpZ1J1bGVOYW1lOiByZHMtYXV0b21hdGljLW1pbm9yLXZlcnNpb24tdXBncmFkZS1lbmFibGVkCiAgICAgIFNjb3BlOgogICAgICAgIENvbXBsaWFuY2VSZXNvdXJjZVR5cGVzOgogICAgICAgIC0gQVdTOjpSRFM6OkRCSW5zdGFuY2UKICAgICAgU291cmNlOgogICAgICAgIE93bmVyOiBBV1MKICAgICAgICBTb3VyY2VJZGVudGlmaWVyOiBSRFNfQVVUT01BVElDX01JTk9SX1ZFUlNJT05fVVBHUkFERV9FTkFCTEVECiAgICBUeXBlOiBBV1M6OkNvbmZpZzo6Q29uZmlnUnVsZQogIFJkc0luc3RhbmNlUHVibGljQWNjZXNzQ2hlY2s6CiAgICBQcm9wZXJ0aWVzOgogICAgICBDb25maWdSdWxlTmFtZTogcmRzLWluc3RhbmNlLXB1YmxpYy1hY2Nlc3MtY2hlY2sKICAgICAgU2NvcGU6CiAgICAgICAgQ29tcGxpYW5jZVJlc291cmNlVHlwZXM6CiAgICAgICAgLSBBV1M6OlJEUzo6REJJbnN0YW5jZQogICAgICBTb3VyY2U6CiAgICAgICAgT3duZXI6IEFXUwogICAgICAgIFNvdXJjZUlkZW50aWZpZXI6IFJEU19JTlNUQU5DRV9QVUJMSUNfQUNDRVNTX0NIRUNLCiAgICBUeXBlOiBBV1M6OkNvbmZpZzo6Q29uZmlnUnVsZQogIFJkc0xvZ2dpbmdFbmFibGVkOgogICAgUHJvcGVydGllczoKICAgICAgQ29uZmlnUnVsZU5hbWU6IHJkcy1sb2dnaW5nLWVuYWJsZWQKICAgICAgU2NvcGU6CiAgICAgICAgQ29tcGxpYW5jZVJlc291cmNlVHlwZXM6CiAgICAgICAgLSBBV1M6OlJEUzo6REJJbnN0YW5jZQogICAgICBTb3VyY2U6CiAgICAgICAgT3duZXI6IEFXUwogICAgICAgIFNvdXJjZUlkZW50aWZpZXI6IFJEU19MT0dHSU5HX0VOQUJMRUQKICAgIFR5cGU6IEFXUzo6Q29uZmlnOjpDb25maWdSdWxlCiAgUmRzU25hcHNob3RFbmNyeXB0ZWQ6CiAgICBQcm9wZXJ0aWVzOgogICAgICBDb25maWdSdWxlTmFtZTogcmRzLXNuYXBzaG90LWVuY3J5cHRlZAogICAgICBTY29wZToKICAgICAgICBDb21wbGlhbmNlUmVzb3VyY2VUeXBlczoKICAgICAgICAtIEFXUzo6UkRTOjpEQlNuYXBzaG90CiAgICAgICAgLSBBV1M6OlJEUzo6REJDbHVzdGVyU25hcHNob3QKICAgICAgU291cmNlOgogICAgICAgIE93bmVyOiBBV1MKICAgICAgICBTb3VyY2VJZGVudGlmaWVyOiBSRFNfU05BUFNIT1RfRU5DUllQVEVECiAgICBUeXBlOiBBV1M6OkNvbmZpZzo6Q29uZmlnUnVsZQogIFJkc1NuYXBzaG90c1B1YmxpY1Byb2hpYml0ZWQ6CiAgICBQcm9wZXJ0aWVzOgogICAgICBDb25maWdSdWxlTmFtZTogcmRzLXNuYXBzaG90cy1wdWJsaWMtcHJvaGliaXRlZAogICAgICBTY29wZToKICAgICAgICBDb21wbGlhbmNlUmVzb3VyY2VUeXBlczoKICAgICAgICAtIEFXUzo6UkRTOjpEQlNuYXBzaG90CiAgICAgICAgLSBBV1M6OlJEUzo6REJDbHVzdGVyU25hcHNob3QKICAgICAgU291cmNlOgogICAgICAgIE93bmVyOiBBV1MKICAgICAgICBTb3VyY2VJZGVudGlmaWVyOiBSRFNfU05BUFNIT1RTX1BVQkxJQ19QUk9ISUJJVEVECiAgICBUeXBlOiBBV1M6OkNvbmZpZzo6Q29uZmlnUnVsZQogIFJkc1N0b3JhZ2VFbmNyeXB0ZWQ6CiAgICBQcm9wZXJ0aWVzOgogICAgICBDb25maWdSdWxlTmFtZTogcmRzLXN0b3JhZ2UtZW5jcnlwdGVkCiAgICAgIFNjb3BlOgogICAgICAgIENvbXBsaWFuY2VSZXNvdXJjZVR5cGVzOgogICAgICAgIC0gQVdTOjpSRFM6OkRCSW5zdGFuY2UKICAgICAgU291cmNlOgogICAgICAgIE93bmVyOiBBV1MKICAgICAgICBTb3VyY2VJZGVudGlmaWVyOiBSRFNfU1RPUkFHRV9FTkNSWVBURUQKICAgIFR5cGU6IEFXUzo6Q29uZmlnOjpDb25maWdSdWxlCiAgUmVkc2hpZnRDbHVzdGVyQ29uZmlndXJhdGlvbkNoZWNrOgogICAgUHJvcGVydGllczoKICAgICAgQ29uZmlnUnVsZU5hbWU6IHJlZHNoaWZ0LWNsdXN0ZXItY29uZmlndXJhdGlvbi1jaGVjawogICAgICBJbnB1dFBhcmFtZXRlcnM6CiAgICAgICAgY2x1c3RlckRiRW5jcnlwdGVkOgogICAgICAgICAgRm46OklmOgogICAgICAgICAgLSByZWRzaGlmdENsdXN0ZXJDb25maWd1cmF0aW9uQ2hlY2tQYXJhbUNsdXN0ZXJEYkVuY3J5cHRlZAogICAgICAgICAgLSBSZWY6IFJlZHNoaWZ0Q2x1c3RlckNvbmZpZ3VyYXRpb25DaGVja1BhcmFtQ2x1c3RlckRiRW5jcnlwdGVkCiAgICAgICAgICAtIFJlZjogQVdTOjpOb1ZhbHVlCiAgICAgICAgbG9nZ2luZ0VuYWJsZWQ6CiAgICAgICAgICBGbjo6SWY6CiAgICAgICAgICAtIHJlZHNoaWZ0Q2x1c3RlckNvbmZpZ3VyYXRpb25DaGVja1BhcmFtTG9nZ2luZ0VuYWJsZWQKICAgICAgICAgIC0gUmVmOiBSZWRzaGlmdENsdXN0ZXJDb25maWd1cmF0aW9uQ2hlY2tQYXJhbUxvZ2dpbmdFbmFibGVkCiAgICAgICAgICAtIFJlZjogQVdTOjpOb1ZhbHVlCiAgICAgIFNjb3BlOgogICAgICAgIENvbXBsaWFuY2VSZXNvdXJjZVR5cGVzOgogICAgICAgIC0gQVdTOjpSZWRzaGlmdDo6Q2x1c3RlcgogICAgICBTb3VyY2U6CiAgICAgICAgT3duZXI6IEFXUwogICAgICAgIFNvdXJjZUlkZW50aWZpZXI6IFJFRFNISUZUX0NMVVNURVJfQ09ORklHVVJBVElPTl9DSEVDSwogICAgVHlwZTogQVdTOjpDb25maWc6OkNvbmZpZ1J1bGUKICBSZWRzaGlmdENsdXN0ZXJLbXNFbmFibGVkOgogICAgUHJvcGVydGllczoKICAgICAgQ29uZmlnUnVsZU5hbWU6IHJlZHNoaWZ0LWNsdXN0ZXIta21zLWVuYWJsZWQKICAgICAgU2NvcGU6CiAgICAgICAgQ29tcGxpYW5jZVJlc291cmNlVHlwZXM6CiAgICAgICAgLSBBV1M6OlJlZHNoaWZ0OjpDbHVzdGVyCiAgICAgIFNvdXJjZToKICAgICAgICBPd25lcjogQVdTCiAgICAgICAgU291cmNlSWRlbnRpZmllcjogUkVEU0hJRlRfQ0xVU1RFUl9LTVNfRU5BQkxFRAogICAgVHlwZTogQVdTOjpDb25maWc6OkNvbmZpZ1J1bGUKICBSZWRzaGlmdENsdXN0ZXJNYWludGVuYW5jZXNldHRpbmdzQ2hlY2s6CiAgICBQcm9wZXJ0aWVzOgogICAgICBDb25maWdSdWxlTmFtZTogcmVkc2hpZnQtY2x1c3Rlci1tYWludGVuYW5jZXNldHRpbmdzLWNoZWNrCiAgICAgIElucHV0UGFyYW1ldGVyczoKICAgICAgICBhbGxvd1ZlcnNpb25VcGdyYWRlOgogICAgICAgICAgRm46OklmOgogICAgICAgICAgLSByZWRzaGlmdENsdXN0ZXJNYWludGVuYW5jZXNldHRpbmdzQ2hlY2tQYXJhbUFsbG93VmVyc2lvblVwZ3JhZGUKICAgICAgICAgIC0gUmVmOiBSZWRzaGlmdENsdXN0ZXJNYWludGVuYW5jZXNldHRpbmdzQ2hlY2tQYXJhbUFsbG93VmVyc2lvblVwZ3JhZGUKICAgICAgICAgIC0gUmVmOiBBV1M6Ok5vVmFsdWUKICAgICAgU2NvcGU6CiAgICAgICAgQ29tcGxpYW5jZVJlc291cmNlVHlwZXM6CiAgICAgICAgLSBBV1M6OlJlZHNoaWZ0OjpDbHVzdGVyCiAgICAgIFNvdXJjZToKICAgICAgICBPd25lcjogQVdTCiAgICAgICAgU291cmNlSWRlbnRpZmllcjogUkVEU0hJRlRfQ0xVU1RFUl9NQUlOVEVOQU5DRVNFVFRJTkdTX0NIRUNLCiAgICBUeXBlOiBBV1M6OkNvbmZpZzo6Q29uZmlnUnVsZQogIFJlZHNoaWZ0Q2x1c3RlclB1YmxpY0FjY2Vzc0NoZWNrOgogICAgUHJvcGVydGllczoKICAgICAgQ29uZmlnUnVsZU5hbWU6IHJlZHNoaWZ0LWNsdXN0ZXItcHVibGljLWFjY2Vzcy1jaGVjawogICAgICBTY29wZToKICAgICAgICBDb21wbGlhbmNlUmVzb3VyY2VUeXBlczoKICAgICAgICAtIEFXUzo6UmVkc2hpZnQ6OkNsdXN0ZXIKICAgICAgU291cmNlOgogICAgICAgIE93bmVyOiBBV1MKICAgICAgICBTb3VyY2VJZGVudGlmaWVyOiBSRURTSElGVF9DTFVTVEVSX1BVQkxJQ19BQ0NFU1NfQ0hFQ0sKICAgIFR5cGU6IEFXUzo6Q29uZmlnOjpDb25maWdSdWxlCiAgUmVkc2hpZnRFbmhhbmNlZFZwY1JvdXRpbmdFbmFibGVkOgogICAgUHJvcGVydGllczoKICAgICAgQ29uZmlnUnVsZU5hbWU6IHJlZHNoaWZ0LWVuaGFuY2VkLXZwYy1yb3V0aW5nLWVuYWJsZWQKICAgICAgU2NvcGU6CiAgICAgICAgQ29tcGxpYW5jZVJlc291cmNlVHlwZXM6CiAgICAgICAgLSBBV1M6OlJlZHNoaWZ0OjpDbHVzdGVyCiAgICAgIFNvdXJjZToKICAgICAgICBPd25lcjogQVdTCiAgICAgICAgU291cmNlSWRlbnRpZmllcjogUkVEU0hJRlRfRU5IQU5DRURfVlBDX1JPVVRJTkdfRU5BQkxFRAogICAgVHlwZTogQVdTOjpDb25maWc6OkNvbmZpZ1J1bGUKICBSZWRzaGlmdFJlcXVpcmVUbHNTc2w6CiAgICBQcm9wZXJ0aWVzOgogICAgICBDb25maWdSdWxlTmFtZTogcmVkc2hpZnQtcmVxdWlyZS10bHMtc3NsCiAgICAgIFNjb3BlOgogICAgICAgIENvbXBsaWFuY2VSZXNvdXJjZVR5cGVzOgogICAgICAgIC0gQVdTOjpSZWRzaGlmdDo6Q2x1c3RlcgogICAgICBTb3VyY2U6CiAgICAgICAgT3duZXI6IEFXUwogICAgICAgIFNvdXJjZUlkZW50aWZpZXI6IFJFRFNISUZUX1JFUVVJUkVfVExTX1NTTAogICAgVHlwZTogQVdTOjpDb25maWc6OkNvbmZpZ1J1bGUKICBSZXN0cmljdGVkSW5jb21pbmdUcmFmZmljOgogICAgUHJvcGVydGllczoKICAgICAgQ29uZmlnUnVsZU5hbWU6IHJlc3RyaWN0ZWQtY29tbW9uLXBvcnRzCiAgICAgIElucHV0UGFyYW1ldGVyczoKICAgICAgICBibG9ja2VkUG9ydDE6CiAgICAgICAgICBGbjo6SWY6CiAgICAgICAgICAtIHJlc3RyaWN0ZWRJbmNvbWluZ1RyYWZmaWNQYXJhbUJsb2NrZWRQb3J0MQogICAgICAgICAgLSBSZWY6IFJlc3RyaWN0ZWRJbmNvbWluZ1RyYWZmaWNQYXJhbUJsb2NrZWRQb3J0MQogICAgICAgICAgLSBSZWY6IEFXUzo6Tm9WYWx1ZQogICAgICAgIGJsb2NrZWRQb3J0MjoKICAgICAgICAgIEZuOjpJZjoKICAgICAgICAgIC0gcmVzdHJpY3RlZEluY29taW5nVHJhZmZpY1BhcmFtQmxvY2tlZFBvcnQyCiAgICAgICAgICAtIFJlZjogUmVzdHJpY3RlZEluY29taW5nVHJhZmZpY1BhcmFtQmxvY2tlZFBvcnQyCiAgICAgICAgICAtIFJlZjogQVdTOjpOb1ZhbHVlCiAgICAgICAgYmxvY2tlZFBvcnQzOgogICAgICAgICAgRm46OklmOgogICAgICAgICAgLSByZXN0cmljdGVkSW5jb21pbmdUcmFmZmljUGFyYW1CbG9ja2VkUG9ydDMKICAgICAgICAgIC0gUmVmOiBSZXN0cmljdGVkSW5jb21pbmdUcmFmZmljUGFyYW1CbG9ja2VkUG9ydDMKICAgICAgICAgIC0gUmVmOiBBV1M6Ok5vVmFsdWUKICAgICAgICBibG9ja2VkUG9ydDQ6CiAgICAgICAgICBGbjo6SWY6CiAgICAgICAgICAtIHJlc3RyaWN0ZWRJbmNvbWluZ1RyYWZmaWNQYXJhbUJsb2NrZWRQb3J0NAogICAgICAgICAgLSBSZWY6IFJlc3RyaWN0ZWRJbmNvbWluZ1RyYWZmaWNQYXJhbUJsb2NrZWRQb3J0NAogICAgICAgICAgLSBSZWY6IEFXUzo6Tm9WYWx1ZQogICAgICAgIGJsb2NrZWRQb3J0NToKICAgICAgICAgIEZuOjpJZjoKICAgICAgICAgIC0gcmVzdHJpY3RlZEluY29taW5nVHJhZmZpY1BhcmFtQmxvY2tlZFBvcnQ1CiAgICAgICAgICAtIFJlZjogUmVzdHJpY3RlZEluY29taW5nVHJhZmZpY1BhcmFtQmxvY2tlZFBvcnQ1CiAgICAgICAgICAtIFJlZjogQVdTOjpOb1ZhbHVlCiAgICAgIFNjb3BlOgogICAgICAgIENvbXBsaWFuY2VSZXNvdXJjZVR5cGVzOgogICAgICAgIC0gQVdTOjpFQzI6OlNlY3VyaXR5R3JvdXAKICAgICAgU291cmNlOgogICAgICAgIE93bmVyOiBBV1MKICAgICAgICBTb3VyY2VJZGVudGlmaWVyOiBSRVNUUklDVEVEX0lOQ09NSU5HX1RSQUZGSUMKICAgIFR5cGU6IEFXUzo6Q29uZmlnOjpDb25maWdSdWxlCiAgUm9vdEFjY291bnRIYXJkd2FyZU1mYUVuYWJsZWQ6CiAgICBQcm9wZXJ0aWVzOgogICAgICBDb25maWdSdWxlTmFtZTogcm9vdC1hY2NvdW50LWhhcmR3YXJlLW1mYS1lbmFibGVkCiAgICAgIFNvdXJjZToKICAgICAgICBPd25lcjogQVdTCiAgICAgICAgU291cmNlSWRlbnRpZmllcjogUk9PVF9BQ0NPVU5UX0hBUkRXQVJFX01GQV9FTkFCTEVECiAgICBUeXBlOiBBV1M6OkNvbmZpZzo6Q29uZmlnUnVsZQogIFJvb3RBY2NvdW50TWZhRW5hYmxlZDoKICAgIFByb3BlcnRpZXM6CiAgICAgIENvbmZpZ1J1bGVOYW1lOiByb290LWFjY291bnQtbWZhLWVuYWJsZWQKICAgICAgU291cmNlOgogICAgICAgIE93bmVyOiBBV1MKICAgICAgICBTb3VyY2VJZGVudGlmaWVyOiBST09UX0FDQ09VTlRfTUZBX0VOQUJMRUQKICAgIFR5cGU6IEFXUzo6Q29uZmlnOjpDb25maWdSdWxlCiAgUzNBY2NvdW50TGV2ZWxQdWJsaWNBY2Nlc3NCbG9ja3NQZXJpb2RpYzoKICAgIFByb3BlcnRpZXM6CiAgICAgIENvbmZpZ1J1bGVOYW1lOiBzMy1hY2NvdW50LWxldmVsLXB1YmxpYy1hY2Nlc3MtYmxvY2tzLXBlcmlvZGljCiAgICAgIElucHV0UGFyYW1ldGVyczoKICAgICAgICBCbG9ja1B1YmxpY0FjbHM6CiAgICAgICAgICBGbjo6SWY6CiAgICAgICAgICAtIHMzQWNjb3VudExldmVsUHVibGljQWNjZXNzQmxvY2tzUGVyaW9kaWNQYXJhbUJsb2NrUHVibGljQWNscwogICAgICAgICAgLSBSZWY6IFMzQWNjb3VudExldmVsUHVibGljQWNjZXNzQmxvY2tzUGVyaW9kaWNQYXJhbUJsb2NrUHVibGljQWNscwogICAgICAgICAgLSBSZWY6IEFXUzo6Tm9WYWx1ZQogICAgICAgIEJsb2NrUHVibGljUG9saWN5OgogICAgICAgICAgRm46OklmOgogICAgICAgICAgLSBzM0FjY291bnRMZXZlbFB1YmxpY0FjY2Vzc0Jsb2Nrc1BlcmlvZGljUGFyYW1CbG9ja1B1YmxpY1BvbGljeQogICAgICAgICAgLSBSZWY6IFMzQWNjb3VudExldmVsUHVibGljQWNjZXNzQmxvY2tzUGVyaW9kaWNQYXJhbUJsb2NrUHVibGljUG9saWN5CiAgICAgICAgICAtIFJlZjogQVdTOjpOb1ZhbHVlCiAgICAgICAgSWdub3JlUHVibGljQWNsczoKICAgICAgICAgIEZuOjpJZjoKICAgICAgICAgIC0gczNBY2NvdW50TGV2ZWxQdWJsaWNBY2Nlc3NCbG9ja3NQZXJpb2RpY1BhcmFtSWdub3JlUHVibGljQWNscwogICAgICAgICAgLSBSZWY6IFMzQWNjb3VudExldmVsUHVibGljQWNjZXNzQmxvY2tzUGVyaW9kaWNQYXJhbUlnbm9yZVB1YmxpY0FjbHMKICAgICAgICAgIC0gUmVmOiBBV1M6Ok5vVmFsdWUKICAgICAgICBSZXN0cmljdFB1YmxpY0J1Y2tldHM6CiAgICAgICAgICBGbjo6SWY6CiAgICAgICAgICAtIHMzQWNjb3VudExldmVsUHVibGljQWNjZXNzQmxvY2tzUGVyaW9kaWNQYXJhbVJlc3RyaWN0UHVibGljQnVja2V0cwogICAgICAgICAgLSBSZWY6IFMzQWNjb3VudExldmVsUHVibGljQWNjZXNzQmxvY2tzUGVyaW9kaWNQYXJhbVJlc3RyaWN0UHVibGljQnVja2V0cwogICAgICAgICAgLSBSZWY6IEFXUzo6Tm9WYWx1ZQogICAgICBTb3VyY2U6CiAgICAgICAgT3duZXI6IEFXUwogICAgICAgIFNvdXJjZUlkZW50aWZpZXI6IFMzX0FDQ09VTlRfTEVWRUxfUFVCTElDX0FDQ0VTU19CTE9DS1NfUEVSSU9ESUMKICAgIFR5cGU6IEFXUzo6Q29uZmlnOjpDb25maWdSdWxlCiAgUzNCdWNrZXRMZXZlbFB1YmxpY0FjY2Vzc1Byb2hpYml0ZWQ6CiAgICBQcm9wZXJ0aWVzOgogICAgICBDb25maWdSdWxlTmFtZTogczMtYnVja2V0LWxldmVsLXB1YmxpYy1hY2Nlc3MtcHJvaGliaXRlZAogICAgICBTY29wZToKICAgICAgICBDb21wbGlhbmNlUmVzb3VyY2VUeXBlczoKICAgICAgICAtIEFXUzo6UzM6OkJ1Y2tldAogICAgICBTb3VyY2U6CiAgICAgICAgT3duZXI6IEFXUwogICAgICAgIFNvdXJjZUlkZW50aWZpZXI6IFMzX0JVQ0tFVF9MRVZFTF9QVUJMSUNfQUNDRVNTX1BST0hJQklURUQKICAgIFR5cGU6IEFXUzo6Q29uZmlnOjpDb25maWdSdWxlCiAgUzNCdWNrZXRMb2dnaW5nRW5hYmxlZDoKICAgIFByb3BlcnRpZXM6CiAgICAgIENvbmZpZ1J1bGVOYW1lOiBzMy1idWNrZXQtbG9nZ2luZy1lbmFibGVkCiAgICAgIFNjb3BlOgogICAgICAgIENvbXBsaWFuY2VSZXNvdXJjZVR5cGVzOgogICAgICAgIC0gQVdTOjpTMzo6QnVja2V0CiAgICAgIFNvdXJjZToKICAgICAgICBPd25lcjogQVdTCiAgICAgICAgU291cmNlSWRlbnRpZmllcjogUzNfQlVDS0VUX0xPR0dJTkdfRU5BQkxFRAogICAgVHlwZTogQVdTOjpDb25maWc6OkNvbmZpZ1J1bGUKICBTM0J1Y2tldFB1YmxpY1JlYWRQcm9oaWJpdGVkOgogICAgUHJvcGVydGllczoKICAgICAgQ29uZmlnUnVsZU5hbWU6IHMzLWJ1Y2tldC1wdWJsaWMtcmVhZC1wcm9oaWJpdGVkCiAgICAgIFNjb3BlOgogICAgICAgIENvbXBsaWFuY2VSZXNvdXJjZVR5cGVzOgogICAgICAgIC0gQVdTOjpTMzo6QnVja2V0CiAgICAgIFNvdXJjZToKICAgICAgICBPd25lcjogQVdTCiAgICAgICAgU291cmNlSWRlbnRpZmllcjogUzNfQlVDS0VUX1BVQkxJQ19SRUFEX1BST0hJQklURUQKICAgIFR5cGU6IEFXUzo6Q29uZmlnOjpDb25maWdSdWxlCiAgUzNCdWNrZXRQdWJsaWNXcml0ZVByb2hpYml0ZWQ6CiAgICBQcm9wZXJ0aWVzOgogICAgICBDb25maWdSdWxlTmFtZTogczMtYnVja2V0LXB1YmxpYy13cml0ZS1wcm9oaWJpdGVkCiAgICAgIFNjb3BlOgogICAgICAgIENvbXBsaWFuY2VSZXNvdXJjZVR5cGVzOgogICAgICAgIC0gQVdTOjpTMzo6QnVja2V0CiAgICAgIFNvdXJjZToKICAgICAgICBPd25lcjogQVdTCiAgICAgICAgU291cmNlSWRlbnRpZmllcjogUzNfQlVDS0VUX1BVQkxJQ19XUklURV9QUk9ISUJJVEVECiAgICBUeXBlOiBBV1M6OkNvbmZpZzo6Q29uZmlnUnVsZQogIFMzQnVja2V0U2VydmVyU2lkZUVuY3J5cHRpb25FbmFibGVkOgogICAgUHJvcGVydGllczoKICAgICAgQ29uZmlnUnVsZU5hbWU6IHMzLWJ1Y2tldC1zZXJ2ZXItc2lkZS1lbmNyeXB0aW9uLWVuYWJsZWQKICAgICAgU2NvcGU6CiAgICAgICAgQ29tcGxpYW5jZVJlc291cmNlVHlwZXM6CiAgICAgICAgLSBBV1M6OlMzOjpCdWNrZXQKICAgICAgU291cmNlOgogICAgICAgIE93bmVyOiBBV1MKICAgICAgICBTb3VyY2VJZGVudGlmaWVyOiBTM19CVUNLRVRfU0VSVkVSX1NJREVfRU5DUllQVElPTl9FTkFCTEVECiAgICBUeXBlOiBBV1M6OkNvbmZpZzo6Q29uZmlnUnVsZQogIFMzQnVja2V0U3NsUmVxdWVzdHNPbmx5OgogICAgUHJvcGVydGllczoKICAgICAgQ29uZmlnUnVsZU5hbWU6IHMzLWJ1Y2tldC1zc2wtcmVxdWVzdHMtb25seQogICAgICBTY29wZToKICAgICAgICBDb21wbGlhbmNlUmVzb3VyY2VUeXBlczoKICAgICAgICAtIEFXUzo6UzM6OkJ1Y2tldAogICAgICBTb3VyY2U6CiAgICAgICAgT3duZXI6IEFXUwogICAgICAgIFNvdXJjZUlkZW50aWZpZXI6IFMzX0JVQ0tFVF9TU0xfUkVRVUVTVFNfT05MWQogICAgVHlwZTogQVdTOjpDb25maWc6OkNvbmZpZ1J1bGUKICBTM0J1Y2tldFZlcnNpb25pbmdFbmFibGVkOgogICAgUHJvcGVydGllczoKICAgICAgQ29uZmlnUnVsZU5hbWU6IHMzLWJ1Y2tldC12ZXJzaW9uaW5nLWVuYWJsZWQKICAgICAgU2NvcGU6CiAgICAgICAgQ29tcGxpYW5jZVJlc291cmNlVHlwZXM6CiAgICAgICAgLSBBV1M6OlMzOjpCdWNrZXQKICAgICAgU291cmNlOgogICAgICAgIE93bmVyOiBBV1MKICAgICAgICBTb3VyY2VJZGVudGlmaWVyOiBTM19CVUNLRVRfVkVSU0lPTklOR19FTkFCTEVECiAgICBUeXBlOiBBV1M6OkNvbmZpZzo6Q29uZmlnUnVsZQogIFMzRGVmYXVsdEVuY3J5cHRpb25LbXM6CiAgICBQcm9wZXJ0aWVzOgogICAgICBDb25maWdSdWxlTmFtZTogczMtZGVmYXVsdC1lbmNyeXB0aW9uLWttcwogICAgICBTY29wZToKICAgICAgICBDb21wbGlhbmNlUmVzb3VyY2VUeXBlczoKICAgICAgICAtIEFXUzo6UzM6OkJ1Y2tldAogICAgICBTb3VyY2U6CiAgICAgICAgT3duZXI6IEFXUwogICAgICAgIFNvdXJjZUlkZW50aWZpZXI6IFMzX0RFRkFVTFRfRU5DUllQVElPTl9LTVMKICAgIFR5cGU6IEFXUzo6Q29uZmlnOjpDb25maWdSdWxlCiAgU2FnZW1ha2VyRW5kcG9pbnRDb25maWd1cmF0aW9uS21zS2V5Q29uZmlndXJlZDoKICAgIFByb3BlcnRpZXM6CiAgICAgIENvbmZpZ1J1bGVOYW1lOiBzYWdlbWFrZXItZW5kcG9pbnQtY29uZmlndXJhdGlvbi1rbXMta2V5LWNvbmZpZ3VyZWQKICAgICAgU291cmNlOgogICAgICAgIE93bmVyOiBBV1MKICAgICAgICBTb3VyY2VJZGVudGlmaWVyOiBTQUdFTUFLRVJfRU5EUE9JTlRfQ09ORklHVVJBVElPTl9LTVNfS0VZX0NPTkZJR1VSRUQKICAgIFR5cGU6IEFXUzo6Q29uZmlnOjpDb25maWdSdWxlCiAgU2FnZW1ha2VyTm90ZWJvb2tJbnN0YW5jZUttc0tleUNvbmZpZ3VyZWQ6CiAgICBQcm9wZXJ0aWVzOgogICAgICBDb25maWdSdWxlTmFtZTogc2FnZW1ha2VyLW5vdGVib29rLWluc3RhbmNlLWttcy1rZXktY29uZmlndXJlZAogICAgICBTb3VyY2U6CiAgICAgICAgT3duZXI6IEFXUwogICAgICAgIFNvdXJjZUlkZW50aWZpZXI6IFNBR0VNQUtFUl9OT1RFQk9PS19JTlNUQU5DRV9LTVNfS0VZX0NPTkZJR1VSRUQKICAgIFR5cGU6IEFXUzo6Q29uZmlnOjpDb25maWdSdWxlCiAgU2FnZW1ha2VyTm90ZWJvb2tOb0RpcmVjdEludGVybmV0QWNjZXNzOgogICAgUHJvcGVydGllczoKICAgICAgQ29uZmlnUnVsZU5hbWU6IHNhZ2VtYWtlci1ub3RlYm9vay1uby1kaXJlY3QtaW50ZXJuZXQtYWNjZXNzCiAgICAgIFNvdXJjZToKICAgICAgICBPd25lcjogQVdTCiAgICAgICAgU291cmNlSWRlbnRpZmllcjogU0FHRU1BS0VSX05PVEVCT09LX05PX0RJUkVDVF9JTlRFUk5FVF9BQ0NFU1MKICAgIFR5cGU6IEFXUzo6Q29uZmlnOjpDb25maWdSdWxlCiAgU2VjcmV0c21hbmFnZXJSb3RhdGlvbkVuYWJsZWRDaGVjazoKICAgIFByb3BlcnRpZXM6CiAgICAgIENvbmZpZ1J1bGVOYW1lOiBzZWNyZXRzbWFuYWdlci1yb3RhdGlvbi1lbmFibGVkLWNoZWNrCiAgICAgIFNjb3BlOgogICAgICAgIENvbXBsaWFuY2VSZXNvdXJjZVR5cGVzOgogICAgICAgIC0gQVdTOjpTZWNyZXRzTWFuYWdlcjo6U2VjcmV0CiAgICAgIFNvdXJjZToKICAgICAgICBPd25lcjogQVdTCiAgICAgICAgU291cmNlSWRlbnRpZmllcjogU0VDUkVUU01BTkFHRVJfUk9UQVRJT05fRU5BQkxFRF9DSEVDSwogICAgVHlwZTogQVdTOjpDb25maWc6OkNvbmZpZ1J1bGUKICBTZWNyZXRzbWFuYWdlclNjaGVkdWxlZFJvdGF0aW9uU3VjY2Vzc0NoZWNrOgogICAgUHJvcGVydGllczoKICAgICAgQ29uZmlnUnVsZU5hbWU6IHNlY3JldHNtYW5hZ2VyLXNjaGVkdWxlZC1yb3RhdGlvbi1zdWNjZXNzLWNoZWNrCiAgICAgIFNjb3BlOgogICAgICAgIENvbXBsaWFuY2VSZXNvdXJjZVR5cGVzOgogICAgICAgIC0gQVdTOjpTZWNyZXRzTWFuYWdlcjo6U2VjcmV0CiAgICAgIFNvdXJjZToKICAgICAgICBPd25lcjogQVdTCiAgICAgICAgU291cmNlSWRlbnRpZmllcjogU0VDUkVUU01BTkFHRVJfU0NIRURVTEVEX1JPVEFUSU9OX1NVQ0NFU1NfQ0hFQ0sKICAgIFR5cGU6IEFXUzo6Q29uZmlnOjpDb25maWdSdWxlCiAgU2VjcmV0c21hbmFnZXJTZWNyZXRQZXJpb2RpY1JvdGF0aW9uOgogICAgUHJvcGVydGllczoKICAgICAgQ29uZmlnUnVsZU5hbWU6IHNlY3JldHNtYW5hZ2VyLXNlY3JldC1wZXJpb2RpYy1yb3RhdGlvbgogICAgICBJbnB1dFBhcmFtZXRlcnM6CiAgICAgICAgbWF4RGF5c1NpbmNlUm90YXRpb246CiAgICAgICAgICBGbjo6SWY6CiAgICAgICAgICAtIHNlY3JldHNtYW5hZ2VyU2VjcmV0UGVyaW9kaWNSb3RhdGlvblBhcmFtTWF4RGF5c1NpbmNlUm90YXRpb24KICAgICAgICAgIC0gUmVmOiBTZWNyZXRzbWFuYWdlclNlY3JldFBlcmlvZGljUm90YXRpb25QYXJhbU1heERheXNTaW5jZVJvdGF0aW9uCiAgICAgICAgICAtIFJlZjogQVdTOjpOb1ZhbHVlCiAgICAgIFNvdXJjZToKICAgICAgICBPd25lcjogQVdTCiAgICAgICAgU291cmNlSWRlbnRpZmllcjogU0VDUkVUU01BTkFHRVJfU0VDUkVUX1BFUklPRElDX1JPVEFUSU9OCiAgICBUeXBlOiBBV1M6OkNvbmZpZzo6Q29uZmlnUnVsZQogIFNlY3JldHNtYW5hZ2VyU2VjcmV0VW51c2VkOgogICAgUHJvcGVydGllczoKICAgICAgQ29uZmlnUnVsZU5hbWU6IHNlY3JldHNtYW5hZ2VyLXNlY3JldC11bnVzZWQKICAgICAgSW5wdXRQYXJhbWV0ZXJzOgogICAgICAgIHVudXNlZEZvckRheXM6CiAgICAgICAgICBGbjo6SWY6CiAgICAgICAgICAtIHNlY3JldHNtYW5hZ2VyU2VjcmV0VW51c2VkUGFyYW1VbnVzZWRGb3JEYXlzCiAgICAgICAgICAtIFJlZjogU2VjcmV0c21hbmFnZXJTZWNyZXRVbnVzZWRQYXJhbVVudXNlZEZvckRheXMKICAgICAgICAgIC0gUmVmOiBBV1M6Ok5vVmFsdWUKICAgICAgU291cmNlOgogICAgICAgIE93bmVyOiBBV1MKICAgICAgICBTb3VyY2VJZGVudGlmaWVyOiBTRUNSRVRTTUFOQUdFUl9TRUNSRVRfVU5VU0VECiAgICBUeXBlOiBBV1M6OkNvbmZpZzo6Q29uZmlnUnVsZQogIFNlY3JldHNtYW5hZ2VyU2VjcmV0VW51c2VkMjoKICAgIFByb3BlcnRpZXM6CiAgICAgIENvbmZpZ1J1bGVOYW1lOiBzZWNyZXRzbWFuYWdlci1zZWNyZXQtdW51c2VkLTIKICAgICAgU291cmNlOgogICAgICAgIE93bmVyOiBBV1MKICAgICAgICBTb3VyY2VJZGVudGlmaWVyOiBTRUNSRVRTTUFOQUdFUl9TRUNSRVRfVU5VU0VECiAgICBUeXBlOiBBV1M6OkNvbmZpZzo6Q29uZmlnUnVsZQogIFNlY3JldHNtYW5hZ2VyVXNpbmdDbWs6CiAgICBQcm9wZXJ0aWVzOgogICAgICBDb25maWdSdWxlTmFtZTogc2VjcmV0c21hbmFnZXItdXNpbmctY21rCiAgICAgIFNjb3BlOgogICAgICAgIENvbXBsaWFuY2VSZXNvdXJjZVR5cGVzOgogICAgICAgIC0gQVdTOjpTZWNyZXRzTWFuYWdlcjo6U2VjcmV0CiAgICAgIFNvdXJjZToKICAgICAgICBPd25lcjogQVdTCiAgICAgICAgU291cmNlSWRlbnRpZmllcjogU0VDUkVUU01BTkFHRVJfVVNJTkdfQ01LCiAgICBUeXBlOiBBV1M6OkNvbmZpZzo6Q29uZmlnUnVsZQogIFNlY3VyaXR5aHViRW5hYmxlZDoKICAgIFByb3BlcnRpZXM6CiAgICAgIENvbmZpZ1J1bGVOYW1lOiBzZWN1cml0eWh1Yi1lbmFibGVkCiAgICAgIFNvdXJjZToKICAgICAgICBPd25lcjogQVdTCiAgICAgICAgU291cmNlSWRlbnRpZmllcjogU0VDVVJJVFlIVUJfRU5BQkxFRAogICAgVHlwZTogQVdTOjpDb25maWc6OkNvbmZpZ1J1bGUKICBTbnNFbmNyeXB0ZWRLbXM6CiAgICBQcm9wZXJ0aWVzOgogICAgICBDb25maWdSdWxlTmFtZTogc25zLWVuY3J5cHRlZC1rbXMKICAgICAgU2NvcGU6CiAgICAgICAgQ29tcGxpYW5jZVJlc291cmNlVHlwZXM6CiAgICAgICAgLSBBV1M6OlNOUzo6VG9waWMKICAgICAgU291cmNlOgogICAgICAgIE93bmVyOiBBV1MKICAgICAgICBTb3VyY2VJZGVudGlmaWVyOiBTTlNfRU5DUllQVEVEX0tNUwogICAgVHlwZTogQVdTOjpDb25maWc6OkNvbmZpZ1J1bGUKICBTc21Eb2N1bWVudE5vdFB1YmxpYzoKICAgIFByb3BlcnRpZXM6CiAgICAgIENvbmZpZ1J1bGVOYW1lOiBzc20tZG9jdW1lbnQtbm90LXB1YmxpYwogICAgICBTb3VyY2U6CiAgICAgICAgT3duZXI6IEFXUwogICAgICAgIFNvdXJjZUlkZW50aWZpZXI6IFNTTV9ET0NVTUVOVF9OT1RfUFVCTElDCiAgICBUeXBlOiBBV1M6OkNvbmZpZzo6Q29uZmlnUnVsZQogIFN1Ym5ldEF1dG9Bc3NpZ25QdWJsaWNJcERpc2FibGVkOgogICAgUHJvcGVydGllczoKICAgICAgQ29uZmlnUnVsZU5hbWU6IHN1Ym5ldC1hdXRvLWFzc2lnbi1wdWJsaWMtaXAtZGlzYWJsZWQKICAgICAgU2NvcGU6CiAgICAgICAgQ29tcGxpYW5jZVJlc291cmNlVHlwZXM6CiAgICAgICAgLSBBV1M6OkVDMjo6U3VibmV0CiAgICAgIFNvdXJjZToKICAgICAgICBPd25lcjogQVdTCiAgICAgICAgU291cmNlSWRlbnRpZmllcjogU1VCTkVUX0FVVE9fQVNTSUdOX1BVQkxJQ19JUF9ESVNBQkxFRAogICAgVHlwZTogQVdTOjpDb25maWc6OkNvbmZpZ1J1bGUKICBWcGNEZWZhdWx0U2VjdXJpdHlHcm91cENsb3NlZDoKICAgIFByb3BlcnRpZXM6CiAgICAgIENvbmZpZ1J1bGVOYW1lOiB2cGMtZGVmYXVsdC1zZWN1cml0eS1ncm91cC1jbG9zZWQKICAgICAgU2NvcGU6CiAgICAgICAgQ29tcGxpYW5jZVJlc291cmNlVHlwZXM6CiAgICAgICAgLSBBV1M6OkVDMjo6U2VjdXJpdHlHcm91cAogICAgICBTb3VyY2U6CiAgICAgICAgT3duZXI6IEFXUwogICAgICAgIFNvdXJjZUlkZW50aWZpZXI6IFZQQ19ERUZBVUxUX1NFQ1VSSVRZX0dST1VQX0NMT1NFRAogICAgVHlwZTogQVdTOjpDb25maWc6OkNvbmZpZ1J1bGUKICBWcGNGbG93TG9nc0VuYWJsZWQ6CiAgICBQcm9wZXJ0aWVzOgogICAgICBDb25maWdSdWxlTmFtZTogdnBjLWZsb3ctbG9ncy1lbmFibGVkCiAgICAgIFNvdXJjZToKICAgICAgICBPd25lcjogQVdTCiAgICAgICAgU291cmNlSWRlbnRpZmllcjogVlBDX0ZMT1dfTE9HU19FTkFCTEVECiAgICBUeXBlOiBBV1M6OkNvbmZpZzo6Q29uZmlnUnVsZQogIFZwY05ldHdvcmtBY2xVbnVzZWRDaGVjazoKICAgIFByb3BlcnRpZXM6CiAgICAgIENvbmZpZ1J1bGVOYW1lOiB2cGMtbmV0d29yay1hY2wtdW51c2VkLWNoZWNrCiAgICAgIFNjb3BlOgogICAgICAgIENvbXBsaWFuY2VSZXNvdXJjZVR5cGVzOgogICAgICAgIC0gQVdTOjpFQzI6Ok5ldHdvcmtBY2wKICAgICAgU291cmNlOgogICAgICAgIE93bmVyOiBBV1MKICAgICAgICBTb3VyY2VJZGVudGlmaWVyOiBWUENfTkVUV09SS19BQ0xfVU5VU0VEX0NIRUNLCiAgICBUeXBlOiBBV1M6OkNvbmZpZzo6Q29uZmlnUnVsZQogIFZwY1NnT3Blbk9ubHlUb0F1dGhvcml6ZWRQb3J0czoKICAgIFByb3BlcnRpZXM6CiAgICAgIENvbmZpZ1J1bGVOYW1lOiB2cGMtc2ctb3Blbi1vbmx5LXRvLWF1dGhvcml6ZWQtcG9ydHMKICAgICAgSW5wdXRQYXJhbWV0ZXJzOgogICAgICAgIGF1dGhvcml6ZWRUY3BQb3J0czoKICAgICAgICAgIEZuOjpJZjoKICAgICAgICAgIC0gdnBjU2dPcGVuT25seVRvQXV0aG9yaXplZFBvcnRzUGFyYW1BdXRob3JpemVkVGNwUG9ydHMKICAgICAgICAgIC0gUmVmOiBWcGNTZ09wZW5Pbmx5VG9BdXRob3JpemVkUG9ydHNQYXJhbUF1dGhvcml6ZWRUY3BQb3J0cwogICAgICAgICAgLSBSZWY6IEFXUzo6Tm9WYWx1ZQogICAgICBTY29wZToKICAgICAgICBDb21wbGlhbmNlUmVzb3VyY2VUeXBlczoKICAgICAgICAtIEFXUzo6RUMyOjpTZWN1cml0eUdyb3VwCiAgICAgIFNvdXJjZToKICAgICAgICBPd25lcjogQVdTCiAgICAgICAgU291cmNlSWRlbnRpZmllcjogVlBDX1NHX09QRU5fT05MWV9UT19BVVRIT1JJWkVEX1BPUlRTCiAgICBUeXBlOiBBV1M6OkNvbmZpZzo6Q29uZmlnUnVsZQogIFdhZlJlZ2lvbmFsUnVsZU5vdEVtcHR5OgogICAgUHJvcGVydGllczoKICAgICAgQ29uZmlnUnVsZU5hbWU6IHdhZi1yZWdpb25hbC1ydWxlLW5vdC1lbXB0eQogICAgICBTY29wZToKICAgICAgICBDb21wbGlhbmNlUmVzb3VyY2VUeXBlczoKICAgICAgICAtIEFXUzo6V0FGUmVnaW9uYWw6OlJ1bGUKICAgICAgU291cmNlOgogICAgICAgIE93bmVyOiBBV1MKICAgICAgICBTb3VyY2VJZGVudGlmaWVyOiBXQUZfUkVHSU9OQUxfUlVMRV9OT1RfRU1QVFkKICAgIFR5cGU6IEFXUzo6Q29uZmlnOjpDb25maWdSdWxlCiAgV2FmUmVnaW9uYWxSdWxlZ3JvdXBOb3RFbXB0eToKICAgIFByb3BlcnRpZXM6CiAgICAgIENvbmZpZ1J1bGVOYW1lOiB3YWYtcmVnaW9uYWwtcnVsZWdyb3VwLW5vdC1lbXB0eQogICAgICBTY29wZToKICAgICAgICBDb21wbGlhbmNlUmVzb3VyY2VUeXBlczoKICAgICAgICAtIEFXUzo6V0FGUmVnaW9uYWw6OlJ1bGVHcm91cAogICAgICBTb3VyY2U6CiAgICAgICAgT3duZXI6IEFXUwogICAgICAgIFNvdXJjZUlkZW50aWZpZXI6IFdBRl9SRUdJT05BTF9SVUxFR1JPVVBfTk9UX0VNUFRZCiAgICBUeXBlOiBBV1M6OkNvbmZpZzo6Q29uZmlnUnVsZQogIFdhZlJlZ2lvbmFsV2ViYWNsTm90RW1wdHk6CiAgICBQcm9wZXJ0aWVzOgogICAgICBDb25maWdSdWxlTmFtZTogd2FmLXJlZ2lvbmFsLXdlYmFjbC1ub3QtZW1wdHkKICAgICAgU2NvcGU6CiAgICAgICAgQ29tcGxpYW5jZVJlc291cmNlVHlwZXM6CiAgICAgICAgLSBBV1M6OldBRlJlZ2lvbmFsOjpXZWJBQ0wKICAgICAgU291cmNlOgogICAgICAgIE93bmVyOiBBV1MKICAgICAgICBTb3VyY2VJZGVudGlmaWVyOiBXQUZfUkVHSU9OQUxfV0VCQUNMX05PVF9FTVBUWQogICAgVHlwZTogQVdTOjpDb25maWc6OkNvbmZpZ1J1bGUKICBXYWZ2MkxvZ2dpbmdFbmFibGVkOgogICAgUHJvcGVydGllczoKICAgICAgQ29uZmlnUnVsZU5hbWU6IHdhZnYyLWxvZ2dpbmctZW5hYmxlZAogICAgICBTb3VyY2U6CiAgICAgICAgT3duZXI6IEFXUwogICAgICAgIFNvdXJjZUlkZW50aWZpZXI6IFdBRlYyX0xPR0dJTkdfRU5BQkxFRAogICAgVHlwZTogQVdTOjpDb25maWc6OkNvbmZpZ1J1bGUKQ29uZGl0aW9uczoKICBhY2Nlc3NLZXlzUm90YXRlZFBhcmFtTWF4QWNjZXNzS2V5QWdlOgogICAgRm46Ok5vdDoKICAgIC0gRm46OkVxdWFsczoKICAgICAgLSAnJwogICAgICAtIFJlZjogQWNjZXNzS2V5c1JvdGF0ZWRQYXJhbU1heEFjY2Vzc0tleUFnZQogIGFjbUNlcnRpZmljYXRlRXhwaXJhdGlvbkNoZWNrUGFyYW1EYXlzVG9FeHBpcmF0aW9uOgogICAgRm46Ok5vdDoKICAgIC0gRm46OkVxdWFsczoKICAgICAgLSAnJwogICAgICAtIFJlZjogQWNtQ2VydGlmaWNhdGVFeHBpcmF0aW9uQ2hlY2tQYXJhbURheXNUb0V4cGlyYXRpb24KICBjbG91ZHdhdGNoQWxhcm1BY3Rpb25DaGVja1BhcmFtQWxhcm1BY3Rpb25SZXF1aXJlZDoKICAgIEZuOjpOb3Q6CiAgICAtIEZuOjpFcXVhbHM6CiAgICAgIC0gJycKICAgICAgLSBSZWY6IENsb3Vkd2F0Y2hBbGFybUFjdGlvbkNoZWNrUGFyYW1BbGFybUFjdGlvblJlcXVpcmVkCiAgY2xvdWR3YXRjaEFsYXJtQWN0aW9uQ2hlY2tQYXJhbUluc3VmZmljaWVudERhdGFBY3Rpb25SZXF1aXJlZDoKICAgIEZuOjpOb3Q6CiAgICAtIEZuOjpFcXVhbHM6CiAgICAgIC0gJycKICAgICAgLSBSZWY6IENsb3Vkd2F0Y2hBbGFybUFjdGlvbkNoZWNrUGFyYW1JbnN1ZmZpY2llbnREYXRhQWN0aW9uUmVxdWlyZWQKICBjbG91ZHdhdGNoQWxhcm1BY3Rpb25DaGVja1BhcmFtT2tBY3Rpb25SZXF1aXJlZDoKICAgIEZuOjpOb3Q6CiAgICAtIEZuOjpFcXVhbHM6CiAgICAgIC0gJycKICAgICAgLSBSZWY6IENsb3Vkd2F0Y2hBbGFybUFjdGlvbkNoZWNrUGFyYW1Pa0FjdGlvblJlcXVpcmVkCiAgaWFtQ3VzdG9tZXJQb2xpY3lCbG9ja2VkS21zQWN0aW9uc1BhcmFtQmxvY2tlZEFjdGlvbnNQYXR0ZXJuczoKICAgIEZuOjpOb3Q6CiAgICAtIEZuOjpFcXVhbHM6CiAgICAgIC0gJycKICAgICAgLSBSZWY6IElhbUN1c3RvbWVyUG9saWN5QmxvY2tlZEttc0FjdGlvbnNQYXJhbUJsb2NrZWRBY3Rpb25zUGF0dGVybnMKICBpYW1QYXNzd29yZFBvbGljeVBhcmFtTWF4UGFzc3dvcmRBZ2U6CiAgICBGbjo6Tm90OgogICAgLSBGbjo6RXF1YWxzOgogICAgICAtICcnCiAgICAgIC0gUmVmOiBJYW1QYXNzd29yZFBvbGljeVBhcmFtTWF4UGFzc3dvcmRBZ2UKICBpYW1QYXNzd29yZFBvbGljeVBhcmFtTWluaW11bVBhc3N3b3JkTGVuZ3RoOgogICAgRm46Ok5vdDoKICAgIC0gRm46OkVxdWFsczoKICAgICAgLSAnJwogICAgICAtIFJlZjogSWFtUGFzc3dvcmRQb2xpY3lQYXJhbU1pbmltdW1QYXNzd29yZExlbmd0aAogIGlhbVBhc3N3b3JkUG9saWN5UGFyYW1QYXNzd29yZFJldXNlUHJldmVudGlvbjoKICAgIEZuOjpOb3Q6CiAgICAtIEZuOjpFcXVhbHM6CiAgICAgIC0gJycKICAgICAgLSBSZWY6IElhbVBhc3N3b3JkUG9saWN5UGFyYW1QYXNzd29yZFJldXNlUHJldmVudGlvbgogIGlhbVBhc3N3b3JkUG9saWN5UGFyYW1SZXF1aXJlTG93ZXJjYXNlQ2hhcmFjdGVyczoKICAgIEZuOjpOb3Q6CiAgICAtIEZuOjpFcXVhbHM6CiAgICAgIC0gJycKICAgICAgLSBSZWY6IElhbVBhc3N3b3JkUG9saWN5UGFyYW1SZXF1aXJlTG93ZXJjYXNlQ2hhcmFjdGVycwogIGlhbVBhc3N3b3JkUG9saWN5UGFyYW1SZXF1aXJlTnVtYmVyczoKICAgIEZuOjpOb3Q6CiAgICAtIEZuOjpFcXVhbHM6CiAgICAgIC0gJycKICAgICAgLSBSZWY6IElhbVBhc3N3b3JkUG9saWN5UGFyYW1SZXF1aXJlTnVtYmVycwogIGlhbVBhc3N3b3JkUG9saWN5UGFyYW1SZXF1aXJlU3ltYm9sczoKICAgIEZuOjpOb3Q6CiAgICAtIEZuOjpFcXVhbHM6CiAgICAgIC0gJycKICAgICAgLSBSZWY6IElhbVBhc3N3b3JkUG9saWN5UGFyYW1SZXF1aXJlU3ltYm9scwogIGlhbVBhc3N3b3JkUG9saWN5UGFyYW1SZXF1aXJlVXBwZXJjYXNlQ2hhcmFjdGVyczoKICAgIEZuOjpOb3Q6CiAgICAtIEZuOjpFcXVhbHM6CiAgICAgIC0gJycKICAgICAgLSBSZWY6IElhbVBhc3N3b3JkUG9saWN5UGFyYW1SZXF1aXJlVXBwZXJjYXNlQ2hhcmFjdGVycwogIGlhbVVzZXJVbnVzZWRDcmVkZW50aWFsc0NoZWNrUGFyYW1NYXhDcmVkZW50aWFsVXNhZ2VBZ2U6CiAgICBGbjo6Tm90OgogICAgLSBGbjo6RXF1YWxzOgogICAgICAtICcnCiAgICAgIC0gUmVmOiBJYW1Vc2VyVW51c2VkQ3JlZGVudGlhbHNDaGVja1BhcmFtTWF4Q3JlZGVudGlhbFVzYWdlQWdlCiAgcmVkc2hpZnRDbHVzdGVyQ29uZmlndXJhdGlvbkNoZWNrUGFyYW1DbHVzdGVyRGJFbmNyeXB0ZWQ6CiAgICBGbjo6Tm90OgogICAgLSBGbjo6RXF1YWxzOgogICAgICAtICcnCiAgICAgIC0gUmVmOiBSZWRzaGlmdENsdXN0ZXJDb25maWd1cmF0aW9uQ2hlY2tQYXJhbUNsdXN0ZXJEYkVuY3J5cHRlZAogIHJlZHNoaWZ0Q2x1c3RlckNvbmZpZ3VyYXRpb25DaGVja1BhcmFtTG9nZ2luZ0VuYWJsZWQ6CiAgICBGbjo6Tm90OgogICAgLSBGbjo6RXF1YWxzOgogICAgICAtICcnCiAgICAgIC0gUmVmOiBSZWRzaGlmdENsdXN0ZXJDb25maWd1cmF0aW9uQ2hlY2tQYXJhbUxvZ2dpbmdFbmFibGVkCiAgcmVkc2hpZnRDbHVzdGVyTWFpbnRlbmFuY2VzZXR0aW5nc0NoZWNrUGFyYW1BbGxvd1ZlcnNpb25VcGdyYWRlOgogICAgRm46Ok5vdDoKICAgIC0gRm46OkVxdWFsczoKICAgICAgLSAnJwogICAgICAtIFJlZjogUmVkc2hpZnRDbHVzdGVyTWFpbnRlbmFuY2VzZXR0aW5nc0NoZWNrUGFyYW1BbGxvd1ZlcnNpb25VcGdyYWRlCiAgcmVzdHJpY3RlZEluY29taW5nVHJhZmZpY1BhcmFtQmxvY2tlZFBvcnQxOgogICAgRm46Ok5vdDoKICAgIC0gRm46OkVxdWFsczoKICAgICAgLSAnJwogICAgICAtIFJlZjogUmVzdHJpY3RlZEluY29taW5nVHJhZmZpY1BhcmFtQmxvY2tlZFBvcnQxCiAgcmVzdHJpY3RlZEluY29taW5nVHJhZmZpY1BhcmFtQmxvY2tlZFBvcnQyOgogICAgRm46Ok5vdDoKICAgIC0gRm46OkVxdWFsczoKICAgICAgLSAnJwogICAgICAtIFJlZjogUmVzdHJpY3RlZEluY29taW5nVHJhZmZpY1BhcmFtQmxvY2tlZFBvcnQyCiAgcmVzdHJpY3RlZEluY29taW5nVHJhZmZpY1BhcmFtQmxvY2tlZFBvcnQzOgogICAgRm46Ok5vdDoKICAgIC0gRm46OkVxdWFsczoKICAgICAgLSAnJwogICAgICAtIFJlZjogUmVzdHJpY3RlZEluY29taW5nVHJhZmZpY1BhcmFtQmxvY2tlZFBvcnQzCiAgcmVzdHJpY3RlZEluY29taW5nVHJhZmZpY1BhcmFtQmxvY2tlZFBvcnQ0OgogICAgRm46Ok5vdDoKICAgIC0gRm46OkVxdWFsczoKICAgICAgLSAnJwogICAgICAtIFJlZjogUmVzdHJpY3RlZEluY29taW5nVHJhZmZpY1BhcmFtQmxvY2tlZFBvcnQ0CiAgcmVzdHJpY3RlZEluY29taW5nVHJhZmZpY1BhcmFtQmxvY2tlZFBvcnQ1OgogICAgRm46Ok5vdDoKICAgIC0gRm46OkVxdWFsczoKICAgICAgLSAnJwogICAgICAtIFJlZjogUmVzdHJpY3RlZEluY29taW5nVHJhZmZpY1BhcmFtQmxvY2tlZFBvcnQ1CiAgczNBY2NvdW50TGV2ZWxQdWJsaWNBY2Nlc3NCbG9ja3NQZXJpb2RpY1BhcmFtQmxvY2tQdWJsaWNBY2xzOgogICAgRm46Ok5vdDoKICAgIC0gRm46OkVxdWFsczoKICAgICAgLSAnJwogICAgICAtIFJlZjogUzNBY2NvdW50TGV2ZWxQdWJsaWNBY2Nlc3NCbG9ja3NQZXJpb2RpY1BhcmFtQmxvY2tQdWJsaWNBY2xzCiAgczNBY2NvdW50TGV2ZWxQdWJsaWNBY2Nlc3NCbG9ja3NQZXJpb2RpY1BhcmFtQmxvY2tQdWJsaWNQb2xpY3k6CiAgICBGbjo6Tm90OgogICAgLSBGbjo6RXF1YWxzOgogICAgICAtICcnCiAgICAgIC0gUmVmOiBTM0FjY291bnRMZXZlbFB1YmxpY0FjY2Vzc0Jsb2Nrc1BlcmlvZGljUGFyYW1CbG9ja1B1YmxpY1BvbGljeQogIHMzQWNjb3VudExldmVsUHVibGljQWNjZXNzQmxvY2tzUGVyaW9kaWNQYXJhbUlnbm9yZVB1YmxpY0FjbHM6CiAgICBGbjo6Tm90OgogICAgLSBGbjo6RXF1YWxzOgogICAgICAtICcnCiAgICAgIC0gUmVmOiBTM0FjY291bnRMZXZlbFB1YmxpY0FjY2Vzc0Jsb2Nrc1BlcmlvZGljUGFyYW1JZ25vcmVQdWJsaWNBY2xzCiAgczNBY2NvdW50TGV2ZWxQdWJsaWNBY2Nlc3NCbG9ja3NQZXJpb2RpY1BhcmFtUmVzdHJpY3RQdWJsaWNCdWNrZXRzOgogICAgRm46Ok5vdDoKICAgIC0gRm46OkVxdWFsczoKICAgICAgLSAnJwogICAgICAtIFJlZjogUzNBY2NvdW50TGV2ZWxQdWJsaWNBY2Nlc3NCbG9ja3NQZXJpb2RpY1BhcmFtUmVzdHJpY3RQdWJsaWNCdWNrZXRzCiAgc2VjcmV0c21hbmFnZXJTZWNyZXRQZXJpb2RpY1JvdGF0aW9uUGFyYW1NYXhEYXlzU2luY2VSb3RhdGlvbjoKICAgIEZuOjpOb3Q6CiAgICAtIEZuOjpFcXVhbHM6CiAgICAgIC0gJycKICAgICAgLSBSZWY6IFNlY3JldHNtYW5hZ2VyU2VjcmV0UGVyaW9kaWNSb3RhdGlvblBhcmFtTWF4RGF5c1NpbmNlUm90YXRpb24KICBzZWNyZXRzbWFuYWdlclNlY3JldFVudXNlZFBhcmFtVW51c2VkRm9yRGF5czoKICAgIEZuOjpOb3Q6CiAgICAtIEZuOjpFcXVhbHM6CiAgICAgIC0gJycKICAgICAgLSBSZWY6IFNlY3JldHNtYW5hZ2VyU2VjcmV0VW51c2VkUGFyYW1VbnVzZWRGb3JEYXlzCiAgdnBjU2dPcGVuT25seVRvQXV0aG9yaXplZFBvcnRzUGFyYW1BdXRob3JpemVkVGNwUG9ydHM6CiAgICBGbjo6Tm90OgogICAgLSBGbjo6RXF1YWxzOgogICAgICAtICcnCiAgICAgIC0gUmVmOiBWcGNTZ09wZW5Pbmx5VG9BdXRob3JpemVkUG9ydHNQYXJhbUF1dGhvcml6ZWRUY3BQb3J0cwo=",
            "response_headers": {
              "Accept-Ranges": "bytes",
              "Access-Control-Allow-Origin": "*",
              "Cache-Control": "max-age=300",
              "Content-Security-Policy": "default-src 'none'; style-src 'unsafe-inline'; sandbox",
              "Content-Type": "text/plain; charset=utf-8",
              "Cross-Origin-Resource-Policy": "cross-origin",
              "Date": "Mon, 18 Nov 2024 08:23:03 GMT",
              "Etag": "W/\"4b5cfbb51161a4bd31b5874e406e5145a02f8c148f85134414afda3994216c65\"",
              "Expires": "Mon, 18 Nov 2024 08:28:03 GMT",
              "Source-Age": "0",
              "Strict-Transport-Security": "max-age=31536000",
              "Vary": "Authorization,Accept-Encoding,Origin",
              "Via": "1.1 varnish",
              "X-Cache": "MISS",
              "X-Cache-Hits": "0",
              "X-Content-Type-Options": "nosniff",
              "X-Fastly-Request-Id": "040197e67f5ec4ef2576e0d7c4f13acc7317c6d7",
              "X-Frame-Options": "deny",
              "X-Github-Request-Id": "1E7F:0D8C:26B2080:287D432:673AF966",
              "X-Served-By": "cache-fra-etou8220101-FRA",
              "X-Timer": "S1731918184.529298,VS0,VE178",
              "X-Xss-Protection": "1; mode=block"
            },
            "retry": null,
            "status_code": 200,
            "url": "https://raw.githubusercontent.com/awslabs/aws-config-rules/refs/heads/master/aws-config-conformance-packs/Operational-Best-Practices-for-AWS-Well-Architected-Security-Pillar.yaml"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.aws_config",
      "mode": "managed",
      "type": "aws_config_config_rule",
      "name": "aws_s3_bucket_public_access_block",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": []
    },
    {
      "module": "module.aws_config",
      "mode": "managed",
      "type": "aws_config_configuration_recorder",
      "name": "recorder",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": []
    },
    {
      "module": "module.aws_config",
      "mode": "managed",
      "type": "aws_config_configuration_recorder_status",
      "name": "enabled",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": []
    },
    {
      "module": "module.aws_config",
      "mode": "managed",
      "type": "aws_config_conformance_pack",
      "name": "eks",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": []
    },
    {
      "module": "module.aws_config",
      "mode": "managed",
      "type": "aws_config_conformance_pack",
      "name": "s3",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": []
    },
    {
      "module": "module.aws_config",
      "mode": "managed",
      "type": "aws_config_conformance_pack",
      "name": "wasp",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": []
    },
    {
      "module": "module.aws_config",
      "mode": "managed",
      "type": "aws_config_delivery_channel",
      "name": "delivery_channel",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": []
    },
    {
      "module": "module.aws_config",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "config_role",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::147997145269:role/AWS_ConfigRole",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"config.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
            "create_date": "2024-11-18T08:24:11Z",
            "description": "",
            "force_detach_policies": false,
            "id": "AWS_ConfigRole",
            "inline_policy": [],
            "managed_policy_arns": [],
            "max_session_duration": 3600,
            "name": "AWS_ConfigRole",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": "",
            "tags": null,
            "tags_all": {},
            "unique_id": "AROASE5KRHC26JPN7V3Z5"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.aws_config.data.aws_iam_policy_document.config_assume_role_policy"
          ]
        }
      ]
    },
    {
      "module": "module.aws_config",
      "mode": "managed",
      "type": "aws_iam_role_policy",
      "name": "config_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": []
    },
    {
      "module": "module.aws_config",
      "mode": "managed",
      "type": "aws_sns_topic",
      "name": "config_notifications",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "application_failure_feedback_role_arn": "",
            "application_success_feedback_role_arn": "",
            "application_success_feedback_sample_rate": 0,
            "archive_policy": "",
            "arn": "arn:aws:sns:eu-central-1:147997145269:config-notifications",
            "beginning_archive_time": "",
            "content_based_deduplication": false,
            "delivery_policy": "",
            "display_name": "",
            "fifo_topic": false,
            "firehose_failure_feedback_role_arn": "",
            "firehose_success_feedback_role_arn": "",
            "firehose_success_feedback_sample_rate": 0,
            "http_failure_feedback_role_arn": "",
            "http_success_feedback_role_arn": "",
            "http_success_feedback_sample_rate": 0,
            "id": "arn:aws:sns:eu-central-1:147997145269:config-notifications",
            "kms_master_key_id": "",
            "lambda_failure_feedback_role_arn": "",
            "lambda_success_feedback_role_arn": "",
            "lambda_success_feedback_sample_rate": 0,
            "name": "config-notifications",
            "name_prefix": "",
            "owner": "147997145269",
            "policy": "{\"Id\":\"__default_policy_ID\",\"Statement\":[{\"Action\":[\"SNS:GetTopicAttributes\",\"SNS:SetTopicAttributes\",\"SNS:AddPermission\",\"SNS:RemovePermission\",\"SNS:DeleteTopic\",\"SNS:Subscribe\",\"SNS:ListSubscriptionsByTopic\",\"SNS:Publish\"],\"Condition\":{\"StringEquals\":{\"AWS:SourceOwner\":\"147997145269\"}},\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Resource\":\"arn:aws:sns:eu-central-1:147997145269:config-notifications\",\"Sid\":\"__default_statement_ID\"}],\"Version\":\"2008-10-17\"}",
            "signature_version": 0,
            "sqs_failure_feedback_role_arn": "",
            "sqs_success_feedback_role_arn": "",
            "sqs_success_feedback_sample_rate": 0,
            "tags": null,
            "tags_all": {},
            "tracing_config": ""
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.aws_config",
      "mode": "managed",
      "type": "aws_sns_topic_policy",
      "name": "config_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": []
    },
    {
      "module": "module.aws_config",
      "mode": "managed",
      "type": "aws_sns_topic_subscription",
      "name": "email_subscription_to_admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": []
    },
    {
      "module": "module.aws_config",
      "mode": "managed",
      "type": "aws_sns_topic_subscription",
      "name": "email_subscription_to_teams",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": []
    },
    {
      "module": "module.eks_ecr.module.eks",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "147997145269",
            "arn": "arn:aws:iam::147997145269:user/terraform",
            "id": "147997145269",
            "user_id": "AIDASE5KRHC2QIWTD2FAM"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks_ecr.module.eks",
      "mode": "data",
      "type": "aws_eks_addon_version",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": []
    },
    {
      "module": "module.eks_ecr.module.eks",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "assume_role_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "1530481229",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSClusterAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"eks.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "minified_json": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"EKSClusterAssumeRole\",\"Effect\":\"Allow\",\"Action\":\"sts:AssumeRole\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"}}]}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "eks.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": "EKSClusterAssumeRole"
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks_ecr.module.eks",
      "mode": "data",
      "type": "aws_iam_session_context",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::147997145269:user/terraform",
            "id": "arn:aws:iam::147997145269:user/terraform",
            "issuer_arn": "arn:aws:iam::147997145269:user/terraform",
            "issuer_id": "",
            "issuer_name": "",
            "session_name": ""
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks_ecr.module.eks",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks_ecr.module.eks",
      "mode": "data",
      "type": "tls_certificate",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/tls\"]",
      "instances": []
    },
    {
      "module": "module.eks_ecr.module.eks",
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:logs:eu-central-1:147997145269:log-group:/aws/eks/lhav-wiztechexercise-eks-01/cluster",
            "id": "/aws/eks/lhav-wiztechexercise-eks-01/cluster",
            "kms_key_id": "",
            "log_group_class": "STANDARD",
            "name": "/aws/eks/lhav-wiztechexercise-eks-01/cluster",
            "name_prefix": "",
            "retention_in_days": 90,
            "skip_destroy": false,
            "tags": {
              "Name": "/aws/eks/lhav-wiztechexercise-eks-01/cluster"
            },
            "tags_all": {
              "Name": "/aws/eks/lhav-wiztechexercise-eks-01/cluster"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks_ecr.module.eks",
      "mode": "managed",
      "type": "aws_eks_addon",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": []
    },
    {
      "module": "module.eks_ecr.module.eks",
      "mode": "managed",
      "type": "aws_eks_cluster",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": []
    },
    {
      "module": "module.eks_ecr.module.eks",
      "mode": "managed",
      "type": "aws_iam_openid_connect_provider",
      "name": "oidc_provider",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": []
    },
    {
      "module": "module.eks_ecr.module.eks",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "cluster_encryption",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": []
    },
    {
      "module": "module.eks_ecr.module.eks",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "cni_ipv6_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": []
    },
    {
      "module": "module.eks_ecr.module.eks",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::147997145269:role/lhav-wiztechexercise-eks-01-cluster-20241118082411189000000001",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"},\"Sid\":\"EKSClusterAssumeRole\"}],\"Version\":\"2012-10-17\"}",
            "create_date": "2024-11-18T08:24:11Z",
            "description": "",
            "force_detach_policies": true,
            "id": "lhav-wiztechexercise-eks-01-cluster-20241118082411189000000001",
            "inline_policy": [],
            "managed_policy_arns": [],
            "max_session_duration": 3600,
            "name": "lhav-wiztechexercise-eks-01-cluster-20241118082411189000000001",
            "name_prefix": "lhav-wiztechexercise-eks-01-cluster-",
            "path": "/",
            "permissions_boundary": "",
            "tags": null,
            "tags_all": {},
            "unique_id": "AROASE5KRHC25NM4YHOPK"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks_ecr.module.eks.data.aws_iam_policy_document.assume_role_policy"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks_ecr.module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "cluster_encryption",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": []
    },
    {
      "module": "module.eks_ecr.module.eks",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": []
    },
    {
      "module": "module.eks_ecr.module.eks",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "node",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": []
    },
    {
      "module": "module.eks_ecr.module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": []
    },
    {
      "module": "module.eks_ecr.module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "node",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": []
    },
    {
      "module": "module.eks_ecr.module.eks",
      "mode": "managed",
      "type": "time_sleep",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/time\"]",
      "instances": []
    },
    {
      "module": "module.eks_ecr.module.eks.module.eks_managed_node_group[\"default\"]",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "147997145269",
            "arn": "arn:aws:iam::147997145269:user/terraform",
            "id": "147997145269",
            "user_id": "AIDASE5KRHC2QIWTD2FAM"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks_ecr.module.eks.module.eks_managed_node_group[\"default\"]",
      "mode": "data",
      "type": "aws_ec2_instance_type",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": []
    },
    {
      "module": "module.eks_ecr.module.eks.module.eks_managed_node_group[\"default\"]",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "assume_role_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "1734879000",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSNodeAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "minified_json": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"EKSNodeAssumeRole\",\"Effect\":\"Allow\",\"Action\":\"sts:AssumeRole\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"}}]}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "ec2.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": "EKSNodeAssumeRole"
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks_ecr.module.eks.module.eks_managed_node_group[\"default\"]",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks_ecr.module.eks.module.eks_managed_node_group[\"default\"]",
      "mode": "data",
      "type": "aws_ssm_parameter",
      "name": "ami",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": []
    },
    {
      "module": "module.eks_ecr.module.eks.module.eks_managed_node_group[\"default\"]",
      "mode": "data",
      "type": "aws_subnets",
      "name": "placement_group",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": []
    },
    {
      "module": "module.eks_ecr.module.eks.module.eks_managed_node_group[\"default\"]",
      "mode": "managed",
      "type": "aws_autoscaling_schedule",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": []
    },
    {
      "module": "module.eks_ecr.module.eks.module.eks_managed_node_group[\"default\"]",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::147997145269:role/default-eks-node-group-20241118082412083100000002",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Sid\":\"EKSNodeAssumeRole\"}],\"Version\":\"2012-10-17\"}",
            "create_date": "2024-11-18T08:24:12Z",
            "description": "EKS managed node group IAM role",
            "force_detach_policies": true,
            "id": "default-eks-node-group-20241118082412083100000002",
            "inline_policy": [],
            "managed_policy_arns": [],
            "max_session_duration": 3600,
            "name": "default-eks-node-group-20241118082412083100000002",
            "name_prefix": "default-eks-node-group-",
            "path": "/",
            "permissions_boundary": "",
            "tags": null,
            "tags_all": {},
            "unique_id": "AROASE5KRHC2WCFNDHGOI"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks_ecr.module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks_ecr.module.eks.module.eks_managed_node_group[\"default\"]",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "additional",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": []
    },
    {
      "module": "module.eks_ecr.module.eks.module.eks_managed_node_group[\"default\"]",
      "mode": "managed",
      "type": "aws_placement_group",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": []
    },
    {
      "module": "module.eks_ecr.module.eks.module.eks_managed_node_group[\"default\"].module.user_data",
      "mode": "data",
      "type": "cloudinit_config",
      "name": "linux_eks_managed_node_group",
      "provider": "provider[\"registry.terraform.io/hashicorp/cloudinit\"]",
      "instances": []
    },
    {
      "module": "module.eks_ecr.module.eks.module.kms",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "account_id": "147997145269",
            "arn": "arn:aws:iam::147997145269:user/terraform",
            "id": "147997145269",
            "user_id": "AIDASE5KRHC2QIWTD2FAM"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks_ecr.module.eks.module.kms",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": []
    },
    {
      "module": "module.eks_ecr.module.eks.module.kms",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks_ecr.module.eks.module.kms",
      "mode": "managed",
      "type": "aws_kms_alias",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": []
    },
    {
      "module": "module.eks_ecr.module.eks.module.kms",
      "mode": "managed",
      "type": "aws_kms_external_key",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": []
    },
    {
      "module": "module.eks_ecr.module.eks.module.kms",
      "mode": "managed",
      "type": "aws_kms_key",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": []
    },
    {
      "module": "module.eks_ecr.module.eks.module.kms",
      "mode": "managed",
      "type": "aws_kms_replica_external_key",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": []
    },
    {
      "module": "module.eks_ecr.module.eks.module.kms",
      "mode": "managed",
      "type": "aws_kms_replica_key",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": []
    },
    {
      "module": "module.mongodb",
      "mode": "data",
      "type": "aws_ami",
      "name": "ubuntu",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "architecture": "x86_64",
            "arn": "arn:aws:ec2:eu-central-1::image/ami-01a0731204136ddad",
            "block_device_mappings": [
              {
                "device_name": "/dev/sda1",
                "ebs": {
                  "delete_on_termination": "true",
                  "encrypted": "false",
                  "iops": "0",
                  "snapshot_id": "snap-069f877416d5069b6",
                  "throughput": "0",
                  "volume_size": "8",
                  "volume_type": "gp2"
                },
                "no_device": "",
                "virtual_name": ""
              },
              {
                "device_name": "/dev/sdb",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral0"
              },
              {
                "device_name": "/dev/sdc",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral1"
              }
            ],
            "boot_mode": "legacy-bios",
            "creation_date": "2024-11-12T11:34:48.000Z",
            "deprecation_time": "2026-11-12T11:34:48.000Z",
            "description": "Canonical, Ubuntu, 20.04 LTS, amd64 focal image build on 2024-11-12",
            "ena_support": true,
            "executable_users": null,
            "filter": [
              {
                "name": "name",
                "values": [
                  "ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-*"
                ]
              }
            ],
            "hypervisor": "xen",
            "id": "ami-01a0731204136ddad",
            "image_id": "ami-01a0731204136ddad",
            "image_location": "amazon/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20241112",
            "image_owner_alias": "amazon",
            "image_type": "machine",
            "imds_support": "",
            "include_deprecated": false,
            "kernel_id": "",
            "most_recent": true,
            "name": "ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20241112",
            "name_regex": null,
            "owner_id": "099720109477",
            "owners": [
              "099720109477"
            ],
            "platform": "",
            "platform_details": "Linux/UNIX",
            "product_codes": [],
            "public": true,
            "ramdisk_id": "",
            "root_device_name": "/dev/sda1",
            "root_device_type": "ebs",
            "root_snapshot_id": "snap-069f877416d5069b6",
            "sriov_net_support": "simple",
            "state": "available",
            "state_reason": {
              "code": "UNSET",
              "message": "UNSET"
            },
            "tags": {},
            "timeouts": null,
            "tpm_support": "",
            "usage_operation": "RunInstances",
            "virtualization_type": "hvm"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.mongodb",
      "mode": "managed",
      "type": "aws_iam_instance_profile",
      "name": "mongo_db_profile",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": []
    },
    {
      "module": "module.mongodb",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "mongo_db_role",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::147997145269:role/mongo_db_role",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
            "create_date": "2024-11-18T08:24:11Z",
            "description": "",
            "force_detach_policies": false,
            "id": "mongo_db_role",
            "inline_policy": [],
            "managed_policy_arns": [],
            "max_session_duration": 3600,
            "name": "mongo_db_role",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": "",
            "tags": null,
            "tags_all": {},
            "unique_id": "AROASE5KRHC23JLV54DZA"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.mongodb",
      "mode": "managed",
      "type": "aws_iam_role_policy",
      "name": "mongo_db_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": []
    },
    {
      "module": "module.mongodb",
      "mode": "managed",
      "type": "aws_instance",
      "name": "mongo_db_instance",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": []
    },
    {
      "module": "module.mongodb",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "mongo_db_sg",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": []
    },
    {
      "module": "module.vpc.module.vpc",
      "mode": "managed",
      "type": "aws_default_network_acl",
      "name": "this",
      "provider": "module.vpc.provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": []
    },
    {
      "module": "module.vpc.module.vpc",
      "mode": "managed",
      "type": "aws_default_route_table",
      "name": "default",
      "provider": "module.vpc.provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": []
    },
    {
      "module": "module.vpc.module.vpc",
      "mode": "managed",
      "type": "aws_default_security_group",
      "name": "this",
      "provider": "module.vpc.provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": []
    },
    {
      "module": "module.vpc.module.vpc",
      "mode": "managed",
      "type": "aws_eip",
      "name": "nat",
      "provider": "module.vpc.provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": []
    },
    {
      "module": "module.vpc.module.vpc",
      "mode": "managed",
      "type": "aws_internet_gateway",
      "name": "this",
      "provider": "module.vpc.provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": []
    },
    {
      "module": "module.vpc.module.vpc",
      "mode": "managed",
      "type": "aws_nat_gateway",
      "name": "this",
      "provider": "module.vpc.provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": []
    },
    {
      "module": "module.vpc.module.vpc",
      "mode": "managed",
      "type": "aws_route",
      "name": "private_nat_gateway",
      "provider": "module.vpc.provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": []
    },
    {
      "module": "module.vpc.module.vpc",
      "mode": "managed",
      "type": "aws_route",
      "name": "public_internet_gateway",
      "provider": "module.vpc.provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": []
    },
    {
      "module": "module.vpc.module.vpc",
      "mode": "managed",
      "type": "aws_route_table",
      "name": "private",
      "provider": "module.vpc.provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": []
    },
    {
      "module": "module.vpc.module.vpc",
      "mode": "managed",
      "type": "aws_route_table",
      "name": "public",
      "provider": "module.vpc.provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": []
    },
    {
      "module": "module.vpc.module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "private",
      "provider": "module.vpc.provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": []
    },
    {
      "module": "module.vpc.module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "public",
      "provider": "module.vpc.provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": []
    },
    {
      "module": "module.vpc.module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "private",
      "provider": "module.vpc.provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": []
    },
    {
      "module": "module.vpc.module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "public",
      "provider": "module.vpc.provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": []
    },
    {
      "module": "module.vpc.module.vpc",
      "mode": "managed",
      "type": "aws_vpc",
      "name": "this",
      "provider": "module.vpc.provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": []
    },
    {
      "module": "module.vpc.module.vpc",
      "mode": "managed",
      "type": "aws_vpc_ipv4_cidr_block_association",
      "name": "this",
      "provider": "module.vpc.provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": []
    }
  ],
  "check_results": null
}
